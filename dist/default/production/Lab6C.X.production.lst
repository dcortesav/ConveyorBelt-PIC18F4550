

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 26 00:54:39 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Generated 05/01/2024 GMT
    68                           ; 
    69                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4550 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     
   102                           	psect	idataBANK0
   103   0019BE                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _estado
   107   0019BE  01                 	db	1
   108                           
   109                           ;initializer for _pChar3
   110   0019BF  00                 	db	0
   111   0019C0  11                 	db	17
   112   0019C1  1B                 	db	27
   113   0019C2  15                 	db	21
   114   0019C3  1B                 	db	27
   115   0019C4  11                 	db	17
   116   0019C5  00                 	db	0
   117   0019C6  00                 	db	0
   118                           
   119                           ;initializer for _pChar2
   120   0019C7  1F                 	db	31
   121   0019C8  11                 	db	17
   122   0019C9  0A                 	db	10
   123   0019CA  04                 	db	4
   124   0019CB  0A                 	db	10
   125   0019CC  11                 	db	17
   126   0019CD  1F                 	db	31
   127   0019CE  00                 	db	0
   128                           
   129                           ;initializer for _pChar1
   130   0019CF  0E                 	db	14
   131   0019D0  11                 	db	17
   132   0019D1  1B                 	db	27
   133   0019D2  11                 	db	17
   134   0019D3  0A                 	db	10
   135   0019D4  15                 	db	21
   136   0019D5  15                 	db	21
   137   0019D6  00                 	db	0
   138                           
   139                           	psect	smallconst
   140   000800                     __psmallconst:
   141                           	callstack 0
   142   000800  00                 	db	0
   143   000801                     _dpowers:
   144                           	callstack 0
   145   000801  0001               	dw	1
   146   000803  000A               	dw	10
   147   000805  0064               	dw	100
   148   000807  03E8               	dw	1000
   149   000809  2710               	dw	10000
   150   00080B                     __end_of_dpowers:
   151                           	callstack 0
   152   000000                     _CCPR2	set	4027
   153   000000                     _TMR1	set	4046
   154   000000                     _T1CON	set	4045
   155   000000                     _RCREG	set	4014
   156   000000                     _TMR2	set	4044
   157   000000                     _LATB	set	3978
   158   000000                     _SPBRG	set	4015
   159   000000                     _BAUDCON	set	4024
   160   000000                     _ADCON2	set	4032
   161   000000                     _ADCON1	set	4033
   162   000000                     _ADCON0	set	4034
   163   000000                     _OSCCON	set	4051
   164   000000                     _TXREG	set	4013
   165   000000                     _LATD	set	3980
   166   000000                     _LATC2	set	31834
   167   000000                     _LATA	set	3977
   168   000000                     _TXSTA	set	4012
   169   000000                     _TMR1IF	set	31984
   170   000000                     _TMR1ON	set	32360
   171   000000                     _RC1	set	31761
   172   000000                     _GO	set	32273
   173   000000                     _LATA2	set	31818
   174   000000                     _RB7	set	31759
   175   000000                     _RB6	set	31758
   176   000000                     _RB5	set	31757
   177   000000                     _RB4	set	31756
   178   000000                     _CREN	set	32092
   179   000000                     _LATA1	set	31817
   180   000000                     _TMR2ON	set	32338
   181   000000                     _TMR0ON	set	32431
   182   000000                     _PEIE	set	32662
   183   000000                     _GIE	set	32663
   184   000000                     _RBIE	set	32659
   185   000000                     _RBIF	set	32656
   186   000000                     _TMR0IE	set	32661
   187   000000                     _TRISC0	set	31904
   188   000000                     _LATA3	set	31819
   189   000000                     _PORTB	set	3969
   190   000000                     _LATA4	set	31820
   191   000000                     _LATE	set	3981
   192   000000                     _TRISA	set	3986
   193   000000                     _RCSTA	set	4011
   194   000000                     _TRMT	set	32097
   195   000000                     _T0CON	set	4053
   196   000000                     _RBPU	set	32655
   197   000000                     _ADRESH	set	4036
   198   000000                     _T2CON	set	4042
   199   000000                     _PR2	set	4043
   200   000000                     _CCP2CON	set	4026
   201   000000                     _CCP1CON	set	4029
   202   000000                     _CCPR1L	set	4030
   203   000000                     _TRISE	set	3990
   204   000000                     _TRISD	set	3989
   205   000000                     _TRISB	set	3987
   206   000000                     _RCIE	set	31981
   207   000000                     _TRISC2	set	31906
   208   000000                     _TMR0IF	set	32658
   209   000000                     _TMR0	set	4054
   210   000000                     _CCP2IF	set	32008
   211   000000                     _RCIF	set	31989
   212   000000                     _RC0	set	31760
   213   00080B                     STR_8:
   214   00080B  20                 	db	32
   215   00080C  20                 	db	32
   216   00080D  20                 	db	32
   217   00080E  20                 	db	32
   218   00080F  20                 	db	32
   219   000810  20                 	db	32
   220   000811  53                 	db	83	;'S'
   221   000812  74                 	db	116	;'t'
   222   000813  6F                 	db	111	;'o'
   223   000814  70                 	db	112	;'p'
   224   000815  20                 	db	32
   225   000816  20                 	db	32
   226   000817  20                 	db	32
   227   000818  20                 	db	32
   228   000819  20                 	db	32
   229   00081A  20                 	db	32
   230   00081B  00                 	db	0
   231   00081C                     STR_17:
   232   00081C  20                 	db	32
   233   00081D  20                 	db	32
   234   00081E  20                 	db	32
   235   00081F  20                 	db	32
   236   000820  46                 	db	70	;'F'
   237   000821  69                 	db	105	;'i'
   238   000822  6E                 	db	110	;'n'
   239   000823  61                 	db	97	;'a'
   240   000824  6C                 	db	108	;'l'
   241   000825  69                 	db	105	;'i'
   242   000826  7A                 	db	122	;'z'
   243   000827  65                 	db	101	;'e'
   244   000828  64                 	db	100	;'d'
   245   000829  20                 	db	32
   246   00082A  20                 	db	32
   247   00082B  20                 	db	32
   248   00082C  00                 	db	0
   249   00082D                     STR_16:
   250   00082D  20                 	db	32
   251   00082E  20                 	db	32
   252   00082F  20                 	db	32
   253   000830  20                 	db	32
   254   000831  43                 	db	67	;'C'
   255   000832  6F                 	db	111	;'o'
   256   000833  75                 	db	117	;'u'
   257   000834  6E                 	db	110	;'n'
   258   000835  74                 	db	116	;'t'
   259   000836  64                 	db	100	;'d'
   260   000837  6F                 	db	111	;'o'
   261   000838  77                 	db	119	;'w'
   262   000839  6E                 	db	110	;'n'
   263   00083A  20                 	db	32
   264   00083B  20                 	db	32
   265   00083C  20                 	db	32
   266   00083D  00                 	db	0
   267   00083E                     STR_7:
   268   00083E  20                 	db	32
   269   00083F  20                 	db	32
   270   000840  20                 	db	32
   271   000841  20                 	db	32
   272   000842  45                 	db	69	;'E'
   273   000843  6D                 	db	109	;'m'
   274   000844  65                 	db	101	;'e'
   275   000845  72                 	db	114	;'r'
   276   000846  67                 	db	103	;'g'
   277   000847  65                 	db	101	;'e'
   278   000848  6E                 	db	110	;'n'
   279   000849  63                 	db	99	;'c'
   280   00084A  79                 	db	121	;'y'
   281   00084B  20                 	db	32
   282   00084C  20                 	db	32
   283   00084D  20                 	db	32
   284   00084E  00                 	db	0
   285   00084F                     STR_5:
   286   00084F  48                 	db	72	;'H'
   287   000850  43                 	db	67	;'C'
   288   000851  2D                 	db	45
   289   000852  53                 	db	83	;'S'
   290   000853  52                 	db	82	;'R'
   291   000854  30                 	db	48	;'0'
   292   000855  34                 	db	52	;'4'
   293   000856  20                 	db	32
   294   000857  66                 	db	102	;'f'
   295   000858  61                 	db	97	;'a'
   296   000859  69                 	db	105	;'i'
   297   00085A  6C                 	db	108	;'l'
   298   00085B  75                 	db	117	;'u'
   299   00085C  72                 	db	114	;'r'
   300   00085D  65                 	db	101	;'e'
   301   00085E  0A                 	db	10
   302   00085F  00                 	db	0
   303   000860                     STR_4:
   304   000860  50                 	db	80	;'P'
   305   000861  57                 	db	87	;'W'
   306   000862  4D                 	db	77	;'M'
   307   000863  20                 	db	32
   308   000864  76                 	db	118	;'v'
   309   000865  61                 	db	97	;'a'
   310   000866  6C                 	db	108	;'l'
   311   000867  75                 	db	117	;'u'
   312   000868  65                 	db	101	;'e'
   313   000869  3A                 	db	58	;':'
   314   00086A  25                 	db	37
   315   00086B  75                 	db	117	;'u'
   316   00086C  25                 	db	37
   317   00086D  25                 	db	37
   318   00086E  0A                 	db	10
   319   00086F  20                 	db	32
   320   000870  00                 	db	0
   321   000871                     STR_6:
   322   000871  64                 	db	100	;'d'
   323   000872  69                 	db	105	;'i'
   324   000873  73                 	db	115	;'s'
   325   000874  74                 	db	116	;'t'
   326   000875  61                 	db	97	;'a'
   327   000876  6E                 	db	110	;'n'
   328   000877  63                 	db	99	;'c'
   329   000878  65                 	db	101	;'e'
   330   000879  3A                 	db	58	;':'
   331   00087A  25                 	db	37
   332   00087B  75                 	db	117	;'u'
   333   00087C  20                 	db	32
   334   00087D  63                 	db	99	;'c'
   335   00087E  6D                 	db	109	;'m'
   336   00087F  0A                 	db	10
   337   000880  00                 	db	0
   338   000881                     STR_3:
   339   000881  20                 	db	32
   340   000882  20                 	db	32
   341   000883  20                 	db	32
   342   000884  20                 	db	32
   343   000885  57                 	db	87	;'W'
   344   000886  65                 	db	101	;'e'
   345   000887  6C                 	db	108	;'l'
   346   000888  63                 	db	99	;'c'
   347   000889  6F                 	db	111	;'o'
   348   00088A  6D                 	db	109	;'m'
   349   00088B  65                 	db	101	;'e'
   350   00088C  20                 	db	32
   351   00088D  20                 	db	32
   352   00088E  20                 	db	32
   353   00088F  00                 	db	0
   354   000890                     STR_11:
   355   000890  23                 	db	35
   356   000891  20                 	db	32
   357   000892  6F                 	db	111	;'o'
   358   000893  66                 	db	102	;'f'
   359   000894  20                 	db	32
   360   000895  50                 	db	80	;'P'
   361   000896  69                 	db	105	;'i'
   362   000897  65                 	db	101	;'e'
   363   000898  63                 	db	99	;'c'
   364   000899  65                 	db	101	;'e'
   365   00089A  73                 	db	115	;'s'
   366   00089B  3A                 	db	58	;':'
   367   00089C  00                 	db	0
   368   00089D                     STR_12:
   369   00089D  4F                 	db	79	;'O'
   370   00089E  62                 	db	98	;'b'
   371   00089F  6A                 	db	106	;'j'
   372   0008A0  65                 	db	101	;'e'
   373   0008A1  63                 	db	99	;'c'
   374   0008A2  74                 	db	116	;'t'
   375   0008A3  69                 	db	105	;'i'
   376   0008A4  76                 	db	118	;'v'
   377   0008A5  65                 	db	101	;'e'
   378   0008A6  00                 	db	0
   379   0008A7                     STR_13:
   380   0008A7  4D                 	db	77	;'M'
   381   0008A8  69                 	db	105	;'i'
   382   0008A9  73                 	db	115	;'s'
   383   0008AA  73                 	db	115	;'s'
   384   0008AB  69                 	db	105	;'i'
   385   0008AC  6E                 	db	110	;'n'
   386   0008AD  67                 	db	103	;'g'
   387   0008AE  00                 	db	0
   388   0008AF                     STR_18:
   389   0008AF  28                 	db	40
   390   0008B0  6E                 	db	110	;'n'
   391   0008B1  75                 	db	117	;'u'
   392   0008B2  6C                 	db	108	;'l'
   393   0008B3  6C                 	db	108	;'l'
   394   0008B4  29                 	db	41
   395   0008B5  00                 	db	0
   396   0008B6                     STR_1:
   397   0008B6  25                 	db	37
   398   0008B7  73                 	db	115	;'s'
   399   0008B8  3A                 	db	58	;':'
   400   0008B9  20                 	db	32
   401   0008BA  25                 	db	37
   402   0008BB  64                 	db	100	;'d'
   403   0008BC  00                 	db	0
   404   0008BD  00                 	db	0	; dummy byte at the end
   405   000000                     
   406                           ; #config settings
   407                           
   408                           	psect	cinit
   409   001710                     __pcinit:
   410                           	callstack 0
   411   001710                     start_initialization:
   412                           	callstack 0
   413   001710                     __initialization:
   414                           	callstack 0
   415                           
   416                           ; Initialize objects allocated to BANK0 (25 bytes)
   417                           ; load TBLPTR registers with __pidataBANK0
   418   001710  0EBE               	movlw	low __pidataBANK0
   419   001712  6EF6               	movwf	tblptrl,c
   420   001714  0E19               	movlw	high __pidataBANK0
   421   001716  6EF7               	movwf	tblptrh,c
   422   001718  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   423   00171A  6EF8               	movwf	tblptru,c
   424   00171C  EE00  F081         	lfsr	0,__pdataBANK0
   425   001720  EE10 F019          	lfsr	1,25
   426   001724                     copy_data0:
   427   001724  0009               	tblrd		*+
   428   001726  CFF5 FFEE          	movff	tablat,postinc0
   429   00172A  50E5               	movf	postdec1,w,c
   430   00172C  50E1               	movf	fsr1l,w,c
   431   00172E  E1FA               	bnz	copy_data0
   432                           
   433                           ; Clear objects allocated to BANK0 (2 bytes)
   434   001730  0100               	movlb	0
   435   001732  6B9B               	clrf	(__pbssBANK0+1)& (0+255),b
   436   001734  6B9A               	clrf	__pbssBANK0& (0+255),b
   437                           
   438                           ; Clear objects allocated to COMRAM (9 bytes)
   439   001736  EE00  F02E         	lfsr	0,__pbssCOMRAM
   440   00173A  0E09               	movlw	9
   441   00173C                     clear_0:
   442   00173C  6AEE               	clrf	postinc0,c
   443   00173E  06E8               	decf	wreg,f,c
   444   001740  E1FD               	bnz	clear_0
   445   001742                     end_of_initialization:
   446                           	callstack 0
   447   001742                     __end_of__initialization:
   448                           	callstack 0
   449   001742  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   450   001744  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   451   001746  0E00               	movlw	low (__Lmediumconst shr (0+16))
   452   001748  6EF8               	movwf	tblptru,c
   453   00174A  0100               	movlb	0
   454   00174C  EF9A  F008         	goto	_main	;jump to C main() function
   455                           
   456                           	psect	bssCOMRAM
   457   00002E                     __pbssCOMRAM:
   458                           	callstack 0
   459   00002E                     _pwm_value:
   460                           	callstack 0
   461   00002E                     	ds	2
   462   000030                     _pot:
   463                           	callstack 0
   464   000030                     	ds	2
   465   000032                     _nDig:
   466                           	callstack 0
   467   000032                     	ds	1
   468   000033                     _dist:
   469                           	callstack 0
   470   000033                     	ds	1
   471   000034                     _rx_e:
   472                           	callstack 0
   473   000034                     	ds	1
   474   000035                     _eusart:
   475                           	callstack 0
   476   000035                     	ds	1
   477   000036                     _valor:
   478                           	callstack 0
   479   000036                     	ds	1
   480                           
   481                           	psect	bssBANK0
   482   00009A                     __pbssBANK0:
   483                           	callstack 0
   484   00009A                     _tecla:
   485                           	callstack 0
   486   00009A                     	ds	1
   487   00009B                     _contador:
   488                           	callstack 0
   489   00009B                     	ds	1
   490                           
   491                           	psect	dataBANK0
   492   000081                     __pdataBANK0:
   493                           	callstack 0
   494   000081                     _estado:
   495                           	callstack 0
   496   000081                     	ds	1
   497   000082                     _pChar3:
   498                           	callstack 0
   499   000082                     	ds	8
   500   00008A                     _pChar2:
   501                           	callstack 0
   502   00008A                     	ds	8
   503   000092                     _pChar1:
   504                           	callstack 0
   505   000092                     	ds	8
   506                           
   507                           	psect	cstackBANK0
   508   000060                     __pcstackBANK0:
   509                           	callstack 0
   510   000060                     ??_writeData:
   511   000060                     ??_writeInstruction:
   512   000060                     ?___lwdiv:
   513                           	callstack 0
   514   000060                     ___lbmod@divisor:
   515                           	callstack 0
   516   000060                     ___lwdiv@dividend:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520   000060                     	ds	1
   521   000061                     writeData@d:
   522                           	callstack 0
   523   000061                     writeInstruction@d:
   524                           	callstack 0
   525   000061                     ___lbmod@dividend:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x1
   529   000061                     	ds	1
   530   000062                     ??_clearDisplay:
   531   000062                     putch@d:
   532                           	callstack 0
   533   000062                     secondLineC@pos:
   534                           	callstack 0
   535   000062                     ___lbmod@counter:
   536                           	callstack 0
   537   000062                     ___lwdiv@divisor:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x2
   541   000062                     	ds	1
   542   000063                     ??_initLCD:
   543   000063                     createCharacter@pChar:
   544                           	callstack 0
   545   000063                     ___lbmod@rem:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x3
   549   000063                     	ds	1
   550   000064                     ??_assignRGB:
   551   000064                     createCharacter@location:
   552                           	callstack 0
   553   000064                     ___lwdiv@counter:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x4
   557   000064                     	ds	1
   558   000065                     createCharacter@i:
   559                           	callstack 0
   560   000065                     ___lwdiv@quotient:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x5
   564   000065                     	ds	2
   565   000067                     ?___lwmod:
   566                           	callstack 0
   567   000067                     assignRGB@number:
   568                           	callstack 0
   569   000067                     ___lwmod@dividend:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x7
   573   000067                     	ds	2
   574   000069                     ___lwmod@divisor:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x9
   578   000069                     	ds	2
   579   00006B                     ___lwmod@counter:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0xB
   583   00006B                     	ds	1
   584   00006C                     ?_printf:
   585                           	callstack 0
   586   00006C                     printf@f:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0xC
   590   00006C                     	ds	5
   591   000071                     ??_printf:
   592                           
   593                           ; 1 bytes @ 0x11
   594   000071                     	ds	1
   595   000072                     printf@prec:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x12
   599   000072                     	ds	1
   600   000073                     printf@flag:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x13
   604   000073                     	ds	1
   605   000074                     printf@cp:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x14
   609   000074                     	ds	2
   610   000076                     printf@ap:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x16
   614   000076                     	ds	1
   615   000077                     printf@val:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x17
   619   000077                     	ds	2
   620   000079                     printf@c:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x19
   624   000079                     	ds	1
   625   00007A                     printMessage@string:
   626                           	callstack 0
   627   00007A                     printInfo@string:
   628                           	callstack 0
   629   00007A                     printNumber@number:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x1A
   633   00007A                     	ds	1
   634   00007B                     ??_initMessage:
   635   00007B                     printInfo@number:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x1B
   639   00007B                     	ds	1
   640   00007C                     ??_state_1:
   641   00007C                     initMessage@i:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x1C
   645   00007C                     	ds	1
   646   00007D                     ??_state_2:
   647   00007D                     initMessage@i_86:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x1D
   651   00007D                     	ds	2
   652   00007F                     ??_main:
   653                           
   654                           ; 1 bytes @ 0x1F
   655   00007F                     	ds	2
   656                           
   657                           	psect	cstackCOMRAM
   658   000001                     __pcstackCOMRAM:
   659                           	callstack 0
   660   000001                     ??_antirebote:
   661   000001                     ??i2_writeData:
   662   000001                     ??i2_writeInstruction:
   663   000001                     ?___wmul:
   664                           	callstack 0
   665   000001                     ?___awdiv:
   666                           	callstack 0
   667   000001                     conversion@canal:
   668                           	callstack 0
   669   000001                     i2___lbmod@divisor:
   670                           	callstack 0
   671   000001                     ___wmul@multiplier:
   672                           	callstack 0
   673   000001                     ___awdiv@dividend:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x0
   677   000001                     	ds	1
   678   000002                     i2writeData@d:
   679                           	callstack 0
   680   000002                     i2writeInstruction@d:
   681                           	callstack 0
   682   000002                     i2___lbmod@dividend:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x1
   686   000002                     	ds	1
   687   000003                     ??i2_clearDisplay:
   688   000003                     i2putch@d:
   689                           	callstack 0
   690   000003                     i2secondLineC@pos:
   691                           	callstack 0
   692   000003                     i2___lbmod@counter:
   693                           	callstack 0
   694   000003                     ___wmul@multiplicand:
   695                           	callstack 0
   696   000003                     ___awdiv@divisor:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x2
   700   000003                     	ds	1
   701   000004                     i2___lbmod@rem:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x3
   705   000004                     	ds	1
   706   000005                     ??i2_assignRGB:
   707   000005                     ___awdiv@counter:
   708                           	callstack 0
   709   000005                     ___wmul@product:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x4
   713   000005                     	ds	1
   714   000006                     ___awdiv@sign:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x5
   718   000006                     	ds	1
   719   000007                     ?i2___lwdiv:
   720                           	callstack 0
   721   000007                     ___awdiv@quotient:
   722                           	callstack 0
   723   000007                     i2___lwdiv@dividend:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x6
   727   000007                     	ds	1
   728   000008                     i2assignRGB@number:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x7
   732   000008                     	ds	1
   733   000009                     i2___lwdiv@divisor:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x8
   737   000009                     	ds	2
   738   00000B                     i2___lwdiv@quotient:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0xA
   742   00000B                     	ds	2
   743   00000D                     i2___lwdiv@counter:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0xC
   747   00000D                     	ds	1
   748   00000E                     ?i2___lwmod:
   749                           	callstack 0
   750   00000E                     MeasureDist@aux:
   751                           	callstack 0
   752   00000E                     i2___lwmod@dividend:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0xD
   756   00000E                     	ds	2
   757   000010                     i2___lwmod@divisor:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0xF
   761   000010                     	ds	2
   762   000012                     i2___lwmod@counter:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x11
   766   000012                     	ds	1
   767   000013                     ?i2_printf:
   768                           	callstack 0
   769   000013                     i2printf@f:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x12
   773   000013                     	ds	3
   774   000016                     ??i2_printf:
   775                           
   776                           ; 1 bytes @ 0x15
   777   000016                     	ds	1
   778   000017                     i2printf@prec:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x16
   782   000017                     	ds	1
   783   000018                     i2printf@flag:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x17
   787   000018                     	ds	1
   788   000019                     i2printf@cp:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x18
   792   000019                     	ds	2
   793   00001B                     i2printf@ap:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x1A
   797   00001B                     	ds	1
   798   00001C                     i2printf@val:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x1B
   802   00001C                     	ds	2
   803   00001E                     i2printf@c:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x1D
   807   00001E                     	ds	1
   808   00001F                     i2printMessage@string:
   809                           	callstack 0
   810   00001F                     transmision@d:
   811                           	callstack 0
   812   00001F                     i2printNumber@number:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x1E
   816   00001F                     	ds	1
   817   000020                     
   818                           ; 1 bytes @ 0x1F
   819   000020                     	ds	1
   820   000021                     transmision@e:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x20
   824   000021                     	ds	2
   825   000023                     ??_ISR:
   826                           
   827                           ; 1 bytes @ 0x22
   828   000023                     	ds	11
   829                           
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 34 in file "Lab6C.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 3F/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   849 ;;      Params:         0       0       0       0       0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0
   851 ;;      Temps:          0       2       0       0       0       0       0       0       0
   852 ;;      Totals:         0       2       0       0       0       0       0       0       0
   853 ;;Total ram usage:        2 bytes
   854 ;; Hardware stack levels required when called: 12
   855 ;; This function calls:
   856 ;;		_initLCD
   857 ;;		_initMessage
   858 ;;		_state_1
   859 ;;		_state_2
   860 ;;		_state_3
   861 ;; This function is called by:
   862 ;;		Startup code after reset
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text0
   867   001134                     __ptext0:
   868                           	callstack 0
   869   001134                     _main:
   870                           	callstack 19
   871                           
   872                           ;Lab6C.c: 37: OSCCON = 0b01110010;
   873                           
   874                           ;incstack = 0
   875   001134  0E72               	movlw	114
   876   001136  6ED3               	movwf	211,c	;volatile
   877                           
   878                           ;Lab6C.c: 38: _delay((unsigned long)((10)*(8000000/4000.0)));
   879   001138  0E1A               	movlw	26
   880   00113A  0100               	movlb	0	; () banked
   881   00113C  6F7F               	movwf	??_main& (0+255),b
   882   00113E  0EF8               	movlw	248
   883   001140                     u3047:
   884   001140  2EE8               	decfsz	wreg,f,c
   885   001142  D7FE               	bra	u3047
   886   001144  2F7F               	decfsz	??_main& (0+255),f,b
   887   001146  D7FC               	bra	u3047
   888   001148  0000               	nop	
   889                           
   890                           ;Lab6C.c: 42: ADCON0 = 1;
   891   00114A  0E01               	movlw	1
   892   00114C  6EC2               	movwf	194,c	;volatile
   893                           
   894                           ;Lab6C.c: 43: ADCON1 = 14;
   895   00114E  0E0E               	movlw	14
   896   001150  6EC1               	movwf	193,c	;volatile
   897                           
   898                           ;Lab6C.c: 44: ADCON2 = 0b01010001;
   899   001152  0E51               	movlw	81
   900   001154  6EC0               	movwf	192,c	;volatile
   901                           
   902                           ;Lab6C.c: 47: TXSTA = 0b00100100;
   903   001156  0E24               	movlw	36
   904   001158  6EAC               	movwf	172,c	;volatile
   905                           
   906                           ;Lab6C.c: 48: RCSTA = 0b10010000;
   907   00115A  0E90               	movlw	144
   908   00115C  6EAB               	movwf	171,c	;volatile
   909                           
   910                           ;Lab6C.c: 49: BAUDCON = 0b00001000;
   911   00115E  0E08               	movlw	8
   912   001160  6EB8               	movwf	184,c	;volatile
   913                           
   914                           ;Lab6C.c: 50: SPBRG = 207;
   915   001162  0ECF               	movlw	207
   916   001164  6EAF               	movwf	175,c	;volatile
   917                           
   918                           ;Lab6C.c: 53: TRISA = 0b11100001;
   919   001166  0EE1               	movlw	225
   920   001168  6E92               	movwf	146,c	;volatile
   921                           
   922                           ;Lab6C.c: 54: TRISB = 0b11110000;
   923   00116A  0EF0               	movlw	240
   924   00116C  6E93               	movwf	147,c	;volatile
   925                           
   926                           ;Lab6C.c: 55: TRISC2 = 0;
   927   00116E  9494               	bcf	3988,2,c	;volatile
   928                           
   929                           ;Lab6C.c: 56: TRISC0 = 0;
   930   001170  9094               	bcf	3988,0,c	;volatile
   931                           
   932                           ;Lab6C.c: 57: TRISD = 0;
   933   001172  0E00               	movlw	0
   934   001174  6E95               	movwf	149,c	;volatile
   935                           
   936                           ;Lab6C.c: 58: TRISE = 0b11111000;
   937   001176  0EF8               	movlw	248
   938   001178  6E96               	movwf	150,c	;volatile
   939                           
   940                           ;Lab6C.c: 61: LATA = 0b00000100;
   941   00117A  0E04               	movlw	4
   942   00117C  6E89               	movwf	137,c	;volatile
   943                           
   944                           ;Lab6C.c: 62: LATB = 0;
   945   00117E  0E00               	movlw	0
   946   001180  6E8A               	movwf	138,c	;volatile
   947                           
   948                           ;Lab6C.c: 63: LATC2 = 0;
   949   001182  948B               	bcf	3979,2,c	;volatile
   950                           
   951                           ;Lab6C.c: 64: LATD = 0;
   952   001184  0E00               	movlw	0
   953   001186  6E8C               	movwf	140,c	;volatile
   954                           
   955                           ;Lab6C.c: 65: LATE = 0;
   956   001188  0E00               	movlw	0
   957   00118A  6E8D               	movwf	141,c	;volatile
   958                           
   959                           ;Lab6C.c: 68: RBPU = 0;
   960   00118C  9EF1               	bcf	4081,7,c	;volatile
   961                           
   962                           ;Lab6C.c: 69: _delay((unsigned long)((100)*(8000000/4000.0)));
   963   00118E  0E02               	movlw	2
   964   001190  0100               	movlb	0	; () banked
   965   001192  6F80               	movwf	(??_main+1)& (0+255),b
   966   001194  0E04               	movlw	4
   967   001196  6F7F               	movwf	??_main& (0+255),b
   968   001198  0EBA               	movlw	186
   969   00119A                     u3057:
   970   00119A  2EE8               	decfsz	wreg,f,c
   971   00119C  D7FE               	bra	u3057
   972   00119E  2F7F               	decfsz	??_main& (0+255),f,b
   973   0011A0  D7FC               	bra	u3057
   974   0011A2  2F80               	decfsz	(??_main+1)& (0+255),f,b
   975   0011A4  D7FA               	bra	u3057
   976   0011A6  0000               	nop	
   977                           
   978                           ;Lab6C.c: 72: T0CON = 0b00000100;
   979   0011A8  0E04               	movlw	4
   980   0011AA  6ED5               	movwf	213,c	;volatile
   981                           
   982                           ;Lab6C.c: 73: TMR0 = 3036;
   983   0011AC  0E0B               	movlw	11
   984   0011AE  6ED7               	movwf	215,c	;volatile
   985   0011B0  0EDC               	movlw	220
   986   0011B2  6ED6               	movwf	214,c	;volatile
   987                           
   988                           ;Lab6C.c: 74: TMR0IF = 0;
   989   0011B4  94F2               	bcf	4082,2,c	;volatile
   990                           
   991                           ;Lab6C.c: 75: TMR0IE = 1;
   992   0011B6  8AF2               	bsf	4082,5,c	;volatile
   993                           
   994                           ;Lab6C.c: 78: RBIF = 0;
   995   0011B8  90F2               	bcf	4082,0,c	;volatile
   996                           
   997                           ;Lab6C.c: 79: RBIE = 1;
   998   0011BA  86F2               	bsf	4082,3,c	;volatile
   999                           
  1000                           ;Lab6C.c: 82: RCIE = 1;
  1001   0011BC  8A9D               	bsf	3997,5,c	;volatile
  1002                           
  1003                           ;Lab6C.c: 83: RCIF = 0;
  1004   0011BE  9A9E               	bcf	3998,5,c	;volatile
  1005                           
  1006                           ;Lab6C.c: 86: GIE = 1;
  1007   0011C0  8EF2               	bsf	4082,7,c	;volatile
  1008                           
  1009                           ;Lab6C.c: 87: PEIE = 1;
  1010   0011C2  8CF2               	bsf	4082,6,c	;volatile
  1011                           
  1012                           ;Lab6C.c: 88: TMR0ON = 1;
  1013   0011C4  8ED5               	bsf	4053,7,c	;volatile
  1014                           
  1015                           ;Lab6C.c: 92: PR2 = 255;
  1016   0011C6  68CB               	setf	203,c	;volatile
  1017                           
  1018                           ;Lab6C.c: 93: CCPR1L = 0;
  1019   0011C8  0E00               	movlw	0
  1020   0011CA  6EBE               	movwf	190,c	;volatile
  1021                           
  1022                           ;Lab6C.c: 94: T2CON = 0b00000011;
  1023   0011CC  0E03               	movlw	3
  1024   0011CE  6ECA               	movwf	202,c	;volatile
  1025                           
  1026                           ;Lab6C.c: 95: TMR2 = 0;
  1027   0011D0  0E00               	movlw	0
  1028   0011D2  6ECC               	movwf	204,c	;volatile
  1029                           
  1030                           ;Lab6C.c: 96: TMR2ON = 1;
  1031   0011D4  84CA               	bsf	4042,2,c	;volatile
  1032                           
  1033                           ;Lab6C.c: 97: CCP1CON = 0b00001100;
  1034   0011D6  0E0C               	movlw	12
  1035   0011D8  6EBD               	movwf	189,c	;volatile
  1036                           
  1037                           ;Lab6C.c: 100: initLCD();
  1038   0011DA  ECC7  F00A         	call	_initLCD	;wreg free
  1039                           
  1040                           ;Lab6C.c: 103: initMessage();
  1041   0011DE  EC13  F009         	call	_initMessage	;wreg free
  1042                           
  1043                           ;Lab6C.c: 104: _delay((unsigned long)((1673.6)*(8000000/4000.0)));
  1044   0011E2  0E11               	movlw	17
  1045   0011E4  0100               	movlb	0	; () banked
  1046   0011E6  6F80               	movwf	(??_main+1)& (0+255),b
  1047   0011E8  0EFB               	movlw	251
  1048   0011EA  6F7F               	movwf	??_main& (0+255),b
  1049   0011EC  0EF6               	movlw	246
  1050   0011EE                     u3067:
  1051   0011EE  2EE8               	decfsz	wreg,f,c
  1052   0011F0  D7FE               	bra	u3067
  1053   0011F2  2F7F               	decfsz	??_main& (0+255),f,b
  1054   0011F4  D7FC               	bra	u3067
  1055   0011F6  2F80               	decfsz	(??_main+1)& (0+255),f,b
  1056   0011F8  D7FA               	bra	u3067
  1057   0011FA  0000               	nop	
  1058   0011FC                     l3771:
  1059                           
  1060                           ;Lab6C.c: 108: if(estado == 1) state_1();
  1061   0011FC  0100               	movlb	0	; () banked
  1062   0011FE  0581               	decf	_estado& (0+255),w,b
  1063   001200  A4D8               	btfss	status,2,c
  1064   001202  D003               	goto	l3775
  1065                           
  1066                           ; BSR set to: 0
  1067   001204  EC85  F009         	call	_state_1	;wreg free
  1068   001208  D7F9               	goto	l3771
  1069   00120A                     l3775:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;Lab6C.c: 109: else if(estado == 2) state_2();
  1073   00120A  0E02               	movlw	2
  1074   00120C  1981               	xorwf	_estado& (0+255),w,b
  1075   00120E  A4D8               	btfss	status,2,c
  1076   001210  D003               	goto	l3779
  1077                           
  1078                           ; BSR set to: 0
  1079   001212  ECEC  F007         	call	_state_2	;wreg free
  1080   001216  D7F2               	goto	l3771
  1081   001218                     l3779:
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;Lab6C.c: 110: else if(estado == 3) state_3();
  1085   001218  0E03               	movlw	3
  1086   00121A  1981               	xorwf	_estado& (0+255),w,b
  1087   00121C  A4D8               	btfss	status,2,c
  1088   00121E  D7EE               	goto	l3771
  1089                           
  1090                           ; BSR set to: 0
  1091   001220  ECFC  F00B         	call	_state_3	;wreg free
  1092                           
  1093                           ; BSR set to: 0
  1094   001224  D7EB               	goto	l3771
  1095   001226                     __end_of_main:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _state_3 *****************
  1099 ;; Defined at:
  1100 ;;		line 358 in file "Lab6C.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 3F/0
  1111 ;;		On exit  : 3F/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1114 ;;      Params:         0       0       0       0       0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1117 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 11
  1121 ;; This function calls:
  1122 ;;		_clearDisplay
  1123 ;;		_printMessage
  1124 ;;		_secondLineC
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text1
  1131   0017F8                     __ptext1:
  1132                           	callstack 0
  1133   0017F8                     _state_3:
  1134                           	callstack 19
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;Lab6C.c: 359: tecla = 100;
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;incstack = 0
  1141   0017F8  0E64               	movlw	100
  1142   0017FA  6F9A               	movwf	_tecla& (0+255),b
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;Lab6C.c: 360: clearDisplay();
  1146   0017FC  ECB8  F00C         	call	_clearDisplay	;wreg free
  1147                           
  1148                           ;Lab6C.c: 361: printMessage("    Countdown   ");
  1149   001800  0E2D               	movlw	low STR_16
  1150   001802  0100               	movlb	0	; () banked
  1151   001804  6F7A               	movwf	printMessage@string& (0+255),b
  1152   001806  EC40  F00D         	call	_printMessage	;wreg free
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;Lab6C.c: 362: secondLineC(0);
  1156   00180A  0E00               	movlw	0
  1157   00180C  EC25  F00D         	call	_secondLineC
  1158                           
  1159                           ;Lab6C.c: 363: printMessage("    Finalized   ");
  1160   001810  0E1C               	movlw	low STR_17
  1161   001812  0100               	movlb	0	; () banked
  1162   001814  6F7A               	movwf	printMessage@string& (0+255),b
  1163   001816  EC40  F00D         	call	_printMessage	;wreg free
  1164   00181A                     l3685:
  1165                           
  1166                           ; BSR set to: 0
  1167   00181A  0E0A               	movlw	10
  1168   00181C  199A               	xorwf	_tecla& (0+255),w,b
  1169   00181E  A4D8               	btfss	status,2,c
  1170   001820  D7FC               	goto	l3685
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;Lab6C.c: 365: estado = 1;
  1174   001822  0E01               	movlw	1
  1175   001824  6F81               	movwf	_estado& (0+255),b
  1176                           
  1177                           ; BSR set to: 0
  1178   001826  0012               	return		;funcret
  1179   001828                     __end_of_state_3:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _state_2 *****************
  1183 ;; Defined at:
  1184 ;;		line 320 in file "Lab6C.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 3F/0
  1195 ;;		On exit  : 3F/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1200 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1201 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 11
  1205 ;; This function calls:
  1206 ;;		___lbmod
  1207 ;;		_assignRGB
  1208 ;;		_clearDisplay
  1209 ;;		_printInfo
  1210 ;;		_printNumber
  1211 ;;		_secondLineC
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text2
  1218   000FD8                     __ptext2:
  1219                           	callstack 0
  1220   000FD8                     _state_2:
  1221                           	callstack 19
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;Lab6C.c: 321: contador = 0;
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;incstack = 0
  1228   000FD8  0E00               	movlw	0
  1229   000FDA  6F9B               	movwf	_contador& (0+255),b
  1230                           
  1231                           ;Lab6C.c: 322: LATD = 0;
  1232   000FDC  0E00               	movlw	0
  1233   000FDE  6E8C               	movwf	140,c	;volatile
  1234                           
  1235                           ;Lab6C.c: 323: LATE = 0b00000101;
  1236   000FE0  0E05               	movlw	5
  1237   000FE2  6E8D               	movwf	141,c	;volatile
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;Lab6C.c: 324: clearDisplay();
  1241   000FE4  ECB8  F00C         	call	_clearDisplay	;wreg free
  1242                           
  1243                           ;Lab6C.c: 325: if(valor < 10){
  1244   000FE8  0E0A               	movlw	10
  1245   000FEA  6036               	cpfslt	_valor^0,c
  1246   000FEC  D020               	goto	l3631
  1247                           
  1248                           ;Lab6C.c: 326: printInfo("Objective", 0);
  1249   000FEE  0E9D               	movlw	low STR_12
  1250   000FF0  0100               	movlb	0	; () banked
  1251   000FF2  6F7A               	movwf	printInfo@string& (0+255),b
  1252   000FF4  0E00               	movlw	0
  1253   000FF6  6F7C               	movwf	(printInfo@number+1)& (0+255),b
  1254   000FF8  0E00               	movlw	0
  1255   000FFA  6F7B               	movwf	printInfo@number& (0+255),b
  1256   000FFC  EC9A  F00C         	call	_printInfo	;wreg free
  1257                           
  1258                           ;Lab6C.c: 327: printNumber(valor);
  1259   001000  C036  F07A         	movff	_valor,printNumber@number
  1260   001004  6B7B               	clrf	(printNumber@number+1)& (0+255),b
  1261   001006  EC03  F00D         	call	_printNumber	;wreg free
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;Lab6C.c: 328: secondLineC(0);
  1265   00100A  0E00               	movlw	0
  1266   00100C  EC25  F00D         	call	_secondLineC
  1267                           
  1268                           ;Lab6C.c: 329: printInfo("Missing",0);
  1269   001010  0EA7               	movlw	low STR_13
  1270   001012  0100               	movlb	0	; () banked
  1271   001014  6F7A               	movwf	printInfo@string& (0+255),b
  1272   001016  0E00               	movlw	0
  1273   001018  6F7C               	movwf	(printInfo@number+1)& (0+255),b
  1274   00101A  0E00               	movlw	0
  1275   00101C  6F7B               	movwf	printInfo@number& (0+255),b
  1276   00101E  EC9A  F00C         	call	_printInfo	;wreg free
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;Lab6C.c: 330: printNumber(valor);
  1280   001022  C036  F07A         	movff	_valor,printNumber@number
  1281   001026  6B7B               	clrf	(printNumber@number+1)& (0+255),b
  1282   001028  EC03  F00D         	call	_printNumber	;wreg free
  1283                           
  1284                           ;Lab6C.c: 331: }else{
  1285   00102C  D06F               	goto	l3667
  1286   00102E                     l3631:
  1287                           
  1288                           ;Lab6C.c: 332: printInfo("Objective", valor);
  1289   00102E  0E9D               	movlw	low STR_12
  1290   001030  0100               	movlb	0	; () banked
  1291   001032  6F7A               	movwf	printInfo@string& (0+255),b
  1292   001034  C036  F07B         	movff	_valor,printInfo@number
  1293   001038  6B7C               	clrf	(printInfo@number+1)& (0+255),b
  1294   00103A  EC9A  F00C         	call	_printInfo	;wreg free
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;Lab6C.c: 333: secondLineC(0);
  1298   00103E  0E00               	movlw	0
  1299   001040  EC25  F00D         	call	_secondLineC
  1300                           
  1301                           ;Lab6C.c: 334: printInfo("Missing", valor);
  1302   001044  0EA7               	movlw	low STR_13
  1303   001046  0100               	movlb	0	; () banked
  1304   001048  6F7A               	movwf	printInfo@string& (0+255),b
  1305   00104A  C036  F07B         	movff	_valor,printInfo@number
  1306   00104E  6B7C               	clrf	(printInfo@number+1)& (0+255),b
  1307   001050  EC9A  F00C         	call	_printInfo	;wreg free
  1308   001054  D05B               	goto	l3667
  1309   001056                     l3637:
  1310                           
  1311                           ; BSR set to: 0
  1312   001056  0E03               	movlw	3
  1313   001058  6433               	cpfsgt	_dist^0,c
  1314   00105A  D7FD               	goto	l3637
  1315                           
  1316                           ; BSR set to: 0
  1317   00105C  0E08               	movlw	8
  1318   00105E  6433               	cpfsgt	_dist^0,c
  1319   001060  D004               	goto	u2940
  1320                           
  1321                           ; BSR set to: 0
  1322   001062  0E02               	movlw	2
  1323   001064  1981               	xorwf	_estado& (0+255),w,b
  1324   001066  B4D8               	btfsc	status,2,c
  1325   001068  D7F6               	goto	l3637
  1326   00106A                     u2940:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;Lab6C.c: 338: if(estado != 2) break;
  1330   00106A  0E02               	movlw	2
  1331   00106C  1981               	xorwf	_estado& (0+255),w,b
  1332   00106E  A4D8               	btfss	status,2,c
  1333   001070  D05B               	goto	u2980
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;Lab6C.c: 339: _delay((unsigned long)((1500)*(8000000/4000.0)));
  1337   001072  0E10               	movlw	16
  1338   001074  0100               	movlb	0	; () banked
  1339   001076  6F7E               	movwf	(??_state_2+1)& (0+255),b
  1340   001078  0E39               	movlw	57
  1341   00107A  6F7D               	movwf	??_state_2& (0+255),b
  1342   00107C  0E0D               	movlw	13
  1343   00107E                     u3077:
  1344   00107E  2EE8               	decfsz	wreg,f,c
  1345   001080  D7FE               	bra	u3077
  1346   001082  2F7D               	decfsz	??_state_2& (0+255),f,b
  1347   001084  D7FC               	bra	u3077
  1348   001086  2F7E               	decfsz	(??_state_2+1)& (0+255),f,b
  1349   001088  D7FA               	bra	u3077
  1350   00108A  D000               	nop2	
  1351                           
  1352                           ;Lab6C.c: 340: if(contador%10 < 9){
  1353   00108C  0E0A               	movlw	10
  1354   00108E  0100               	movlb	0	; () banked
  1355   001090  6F60               	movwf	___lbmod@divisor& (0+255),b
  1356   001092  519B               	movf	_contador& (0+255),w,b
  1357   001094  EC5C  F00C         	call	___lbmod
  1358   001098  6F7D               	movwf	??_state_2& (0+255),b
  1359   00109A  0E09               	movlw	9
  1360   00109C  617D               	cpfslt	??_state_2& (0+255),b
  1361   00109E  D002               	goto	l3653
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;Lab6C.c: 341: contador += 1;
  1365   0010A0  2B9B               	incf	_contador& (0+255),f,b
  1366                           
  1367                           ;Lab6C.c: 342: }else{
  1368   0010A2  D004               	goto	l3657
  1369   0010A4                     l3653:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;Lab6C.c: 343: contador += 1;
  1373   0010A4  2B9B               	incf	_contador& (0+255),f,b
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;Lab6C.c: 344: assignRGB(contador);
  1377   0010A6  519B               	movf	_contador& (0+255),w,b
  1378   0010A8  EC1E  F00A         	call	_assignRGB
  1379   0010AC                     l3657:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;Lab6C.c: 345: };Lab6C.c: 346: LATD = contador%10;
  1383   0010AC  0E0A               	movlw	10
  1384   0010AE  6F60               	movwf	___lbmod@divisor& (0+255),b
  1385   0010B0  519B               	movf	_contador& (0+255),w,b
  1386   0010B2  EC5C  F00C         	call	___lbmod
  1387   0010B6  6E8C               	movwf	140,c	;volatile
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;Lab6C.c: 347: secondLineC(9);
  1391   0010B8  0E09               	movlw	9
  1392   0010BA  EC25  F00D         	call	_secondLineC
  1393                           
  1394                           ;Lab6C.c: 348: if(valor-contador < 10){
  1395   0010BE  0100               	movlb	0	; () banked
  1396   0010C0  519B               	movf	_contador& (0+255),w,b
  1397   0010C2  C036  F07D         	movff	_valor,??_state_2
  1398   0010C6  6B7E               	clrf	(??_state_2+1)& (0+255),b
  1399   0010C8  5F7D               	subwf	??_state_2& (0+255),f,b
  1400   0010CA  0E00               	movlw	0
  1401   0010CC  5B7E               	subwfb	(??_state_2+1)& (0+255),f,b
  1402   0010CE  BF7E               	btfsc	(??_state_2+1)& (0+255),7,b
  1403   0010D0  D006               	goto	u2970
  1404   0010D2  517E               	movf	(??_state_2+1)& (0+255),w,b
  1405   0010D4  E113               	bnz	l3665
  1406   0010D6  0E0A               	movlw	10
  1407   0010D8  5D7D               	subwf	??_state_2& (0+255),w,b
  1408   0010DA  B0D8               	btfsc	status,0,c
  1409   0010DC  D00F               	goto	l3665
  1410   0010DE                     u2970:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;Lab6C.c: 349: printNumber(0);
  1414   0010DE  0E00               	movlw	0
  1415   0010E0  6F7B               	movwf	(printNumber@number+1)& (0+255),b
  1416   0010E2  0E00               	movlw	0
  1417   0010E4  6F7A               	movwf	printNumber@number& (0+255),b
  1418   0010E6  EC03  F00D         	call	_printNumber	;wreg free
  1419                           
  1420                           ;Lab6C.c: 350: printNumber(valor - contador);
  1421   0010EA  519B               	movf	_contador& (0+255),w,b
  1422   0010EC  5C36               	subwf	_valor^0,w,c
  1423   0010EE  6F7A               	movwf	printNumber@number& (0+255),b
  1424   0010F0  6B7B               	clrf	(printNumber@number+1)& (0+255),b
  1425   0010F2  A0D8               	btfss	status,0,c
  1426   0010F4  077B               	decf	(printNumber@number+1)& (0+255),f,b
  1427   0010F6  EC03  F00D         	call	_printNumber	;wreg free
  1428                           
  1429                           ;Lab6C.c: 351: }
  1430   0010FA  D008               	goto	l3667
  1431   0010FC                     l3665:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;Lab6C.c: 352: else printNumber(valor - contador);
  1435   0010FC  519B               	movf	_contador& (0+255),w,b
  1436   0010FE  5C36               	subwf	_valor^0,w,c
  1437   001100  6F7A               	movwf	printNumber@number& (0+255),b
  1438   001102  6B7B               	clrf	(printNumber@number+1)& (0+255),b
  1439   001104  A0D8               	btfss	status,0,c
  1440   001106  077B               	decf	(printNumber@number+1)& (0+255),f,b
  1441   001108  EC03  F00D         	call	_printNumber	;wreg free
  1442   00110C                     l3667:
  1443                           
  1444                           ; BSR set to: 0
  1445   00110C  519B               	movf	_contador& (0+255),w,b
  1446   00110E  C036  F07D         	movff	_valor,??_state_2
  1447   001112  6B7E               	clrf	(??_state_2+1)& (0+255),b
  1448   001114  5F7D               	subwf	??_state_2& (0+255),f,b
  1449   001116  0E00               	movlw	0
  1450   001118  5B7E               	subwfb	(??_state_2+1)& (0+255),f,b
  1451   00111A  BF7E               	btfsc	(??_state_2+1)& (0+255),7,b
  1452   00111C  D005               	goto	u2980
  1453   00111E  517E               	movf	(??_state_2+1)& (0+255),w,b
  1454   001120  E19A               	bnz	l3637
  1455   001122  057D               	decf	??_state_2& (0+255),w,b
  1456   001124  B0D8               	btfsc	status,0,c
  1457   001126  D797               	goto	l3637
  1458   001128                     u2980:
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;Lab6C.c: 353: };Lab6C.c: 354: if(estado == 1) return;
  1462   001128  0581               	decf	_estado& (0+255),w,b
  1463   00112A  B4D8               	btfsc	status,2,c
  1464   00112C  0012               	return	
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;Lab6C.c: 355: estado = 3;
  1468   00112E  0E03               	movlw	3
  1469   001130  6F81               	movwf	_estado& (0+255),b
  1470                           
  1471                           ; BSR set to: 0
  1472   001132  0012               	return		;funcret
  1473   001134                     __end_of_state_2:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _printInfo *****************
  1477 ;; Defined at:
  1478 ;;		line 68 in file "LCD_Eusart.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  string          1   26[BANK0 ] PTR unsigned char 
  1481 ;;		 -> STR_15(8), STR_14(10), STR_13(8), STR_12(10), 
  1482 ;;  number          2   27[BANK0 ] int 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 3F/0
  1491 ;;		On exit  : 3F/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1494 ;;      Params:         0       3       0       0       0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1497 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1498 ;;Total ram usage:        3 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 10
  1501 ;; This function calls:
  1502 ;;		_printf
  1503 ;; This function is called by:
  1504 ;;		_state_2
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text3
  1509   001934                     __ptext3:
  1510                           	callstack 0
  1511   001934                     _printInfo:
  1512                           	callstack 19
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;LCD_Eusart.c: 69: printf("%s: %d", string, number);
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;incstack = 0
  1519   001934  0EB6               	movlw	low STR_1
  1520   001936  6F6C               	movwf	printf@f& (0+255),b
  1521   001938  C07A  F06D         	movff	printInfo@string,?_printf+1
  1522   00193C  516D               	movf	(?_printf+1)& (0+255),w,b
  1523   00193E  A4D8               	btfss	status,2,c
  1524   001940  0E08               	movlw	high __smallconst
  1525   001942  6F6E               	movwf	(?_printf+2)& (0+255),b
  1526   001944  C07B  F06F         	movff	printInfo@number,?_printf+3
  1527   001948  C07C  F070         	movff	printInfo@number+1,?_printf+4
  1528   00194C  EC23  F006         	call	_printf	;wreg free
  1529                           
  1530                           ; BSR set to: 0
  1531   001950  0012               	return		;funcret
  1532   001952                     __end_of_printInfo:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _assignRGB *****************
  1536 ;; Defined at:
  1537 ;;		line 372 in file "Lab6C.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  number          1    wreg     unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  number          1    7[BANK0 ] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 3F/0
  1548 ;;		On exit  : 3F/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0
  1552 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1553 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1554 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1555 ;;Total ram usage:        4 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 7
  1558 ;; This function calls:
  1559 ;;		___lbmod
  1560 ;; This function is called by:
  1561 ;;		_state_2
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text4
  1566   00143C                     __ptext4:
  1567                           	callstack 0
  1568   00143C                     _assignRGB:
  1569                           	callstack 22
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;incstack = 0
  1573                           ;assignRGB@number stored from wreg
  1574   00143C  6F67               	movwf	assignRGB@number& (0+255),b
  1575                           
  1576                           ;Lab6C.c: 373: switch((number%100 - number%10)){
  1577   00143E  D012               	goto	l3489
  1578   001440                     l3477:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;Lab6C.c: 375: LATE = 0b00000111;
  1582   001440  0E07               	movlw	7
  1583   001442  6E8D               	movwf	141,c	;volatile
  1584                           
  1585                           ;Lab6C.c: 376: break;
  1586   001444  0012               	return	
  1587   001446                     l3479:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;Lab6C.c: 378: LATE = 0b00000110;
  1591   001446  0E06               	movlw	6
  1592   001448  6E8D               	movwf	141,c	;volatile
  1593                           
  1594                           ;Lab6C.c: 379: break;
  1595   00144A  0012               	return	
  1596   00144C                     l3481:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;Lab6C.c: 381: LATE = 0b00000010;
  1600   00144C  0E02               	movlw	2
  1601   00144E  6E8D               	movwf	141,c	;volatile
  1602                           
  1603                           ;Lab6C.c: 382: break;
  1604   001450  0012               	return	
  1605   001452                     l3483:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;Lab6C.c: 384: LATE = 0b00000011;
  1609   001452  0E03               	movlw	3
  1610   001454  6E8D               	movwf	141,c	;volatile
  1611                           
  1612                           ;Lab6C.c: 385: break;
  1613   001456  0012               	return	
  1614   001458                     l3485:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;Lab6C.c: 387: LATE = 0b00000001;
  1618   001458  0E01               	movlw	1
  1619   00145A  6E8D               	movwf	141,c	;volatile
  1620                           
  1621                           ;Lab6C.c: 388: break;
  1622   00145C  0012               	return	
  1623   00145E                     l3487:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;Lab6C.c: 390: LATE = 0b00000101;
  1627   00145E  0E05               	movlw	5
  1628   001460  6E8D               	movwf	141,c	;volatile
  1629                           
  1630                           ;Lab6C.c: 391: }
  1631   001462  0012               	return	
  1632   001464                     l3489:
  1633   001464  0E64               	movlw	100
  1634   001466  0100               	movlb	0	; () banked
  1635   001468  6F60               	movwf	___lbmod@divisor& (0+255),b
  1636   00146A  5167               	movf	assignRGB@number& (0+255),w,b
  1637   00146C  EC5C  F00C         	call	___lbmod
  1638   001470  6F64               	movwf	??_assignRGB& (0+255),b
  1639   001472  6B65               	clrf	(??_assignRGB+1)& (0+255),b
  1640   001474  0E0A               	movlw	10
  1641   001476  6F60               	movwf	___lbmod@divisor& (0+255),b
  1642   001478  5167               	movf	assignRGB@number& (0+255),w,b
  1643   00147A  EC5C  F00C         	call	___lbmod
  1644   00147E  6F66               	movwf	(??_assignRGB+2)& (0+255),b
  1645   001480  5166               	movf	(??_assignRGB+2)& (0+255),w,b
  1646   001482  5F64               	subwf	??_assignRGB& (0+255),f,b
  1647   001484  0E00               	movlw	0
  1648   001486  5B65               	subwfb	(??_assignRGB+1)& (0+255),f,b
  1649                           
  1650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1651                           ; Switch size 1, requested type "simple"
  1652                           ; Number of cases is 1, Range of values is 0 to 0
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte            4     3 (average)
  1656                           ;	Chosen strategy is simple_byte
  1657   001488  5165               	movf	(??_assignRGB+1)& (0+255),w,b
  1658   00148A  0A00               	xorlw	0	; case 0
  1659   00148C  A4D8               	btfss	status,2,c
  1660   00148E  D7E7               	goto	l3487
  1661                           
  1662                           ; BSR set to: 0
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 5, Range of values is 10 to 50
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte           16     9 (average)
  1668                           ;	Chosen strategy is simple_byte
  1669   001490  5164               	movf	??_assignRGB& (0+255),w,b
  1670   001492  0A0A               	xorlw	10	; case 10
  1671   001494  B4D8               	btfsc	status,2,c
  1672   001496  D7E0               	goto	l3485
  1673   001498  0A1E               	xorlw	30	; case 20
  1674   00149A  B4D8               	btfsc	status,2,c
  1675   00149C  D7DA               	goto	l3483
  1676   00149E  0A0A               	xorlw	10	; case 30
  1677   0014A0  B4D8               	btfsc	status,2,c
  1678   0014A2  D7D4               	goto	l3481
  1679   0014A4  0A36               	xorlw	54	; case 40
  1680   0014A6  B4D8               	btfsc	status,2,c
  1681   0014A8  D7CE               	goto	l3479
  1682   0014AA  0A1A               	xorlw	26	; case 50
  1683   0014AC  B4D8               	btfsc	status,2,c
  1684   0014AE  D7C8               	goto	l3477
  1685   0014B0  D7D6               	goto	l3487
  1686   0014B2                     __end_of_assignRGB:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _state_1 *****************
  1690 ;; Defined at:
  1691 ;;		line 290 in file "Lab6C.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 3F/0
  1702 ;;		On exit  : 3F/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1707 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1708 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1709 ;;Total ram usage:        1 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 11
  1712 ;; This function calls:
  1713 ;;		___lbmod
  1714 ;;		_clearDisplay
  1715 ;;		_deleteChar
  1716 ;;		_printMessage
  1717 ;;		_printNumber
  1718 ;;		_secondLineC
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text5
  1725   00130A                     __ptext5:
  1726                           	callstack 0
  1727   00130A                     _state_1:
  1728                           	callstack 19
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;Lab6C.c: 291: tecla = 100;
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;incstack = 0
  1735   00130A  0E64               	movlw	100
  1736   00130C  6F9A               	movwf	_tecla& (0+255),b
  1737                           
  1738                           ;Lab6C.c: 292: nDig = 0;
  1739   00130E  0E00               	movlw	0
  1740   001310  6E32               	movwf	_nDig^0,c
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;Lab6C.c: 293: clearDisplay();
  1744   001312  ECB8  F00C         	call	_clearDisplay	;wreg free
  1745                           
  1746                           ;Lab6C.c: 294: printMessage("# of Pieces:");
  1747   001316  0E90               	movlw	low STR_11
  1748   001318  0100               	movlb	0	; () banked
  1749   00131A  6F7A               	movwf	printMessage@string& (0+255),b
  1750   00131C  EC40  F00D         	call	_printMessage	;wreg free
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;Lab6C.c: 295: secondLineC(0);
  1754   001320  0E00               	movlw	0
  1755   001322  EC25  F00D         	call	_secondLineC
  1756                           
  1757                           ;Lab6C.c: 296: while(estado == 1){
  1758   001326  D043               	goto	l3615
  1759   001328                     l3577:
  1760                           
  1761                           ; BSR set to: 0
  1762   001328  0E64               	movlw	100
  1763   00132A  199A               	xorwf	_tecla& (0+255),w,b
  1764   00132C  B4D8               	btfsc	status,2,c
  1765   00132E  D7FC               	goto	l3577
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;Lab6C.c: 298: if(tecla < 10 && nDig == 0){
  1769   001330  0E0A               	movlw	10
  1770   001332  619A               	cpfslt	_tecla& (0+255),b
  1771   001334  D00C               	goto	l3589
  1772                           
  1773                           ; BSR set to: 0
  1774   001336  5032               	movf	_nDig^0,w,c
  1775   001338  A4D8               	btfss	status,2,c
  1776   00133A  D009               	goto	l3589
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;Lab6C.c: 299: valor = tecla;
  1780   00133C  C09A  F036         	movff	_tecla,_valor
  1781   001340                     l3585:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;Lab6C.c: 300: printNumber(tecla);
  1785   001340  C09A  F07A         	movff	_tecla,printNumber@number
  1786   001344  6B7B               	clrf	(printNumber@number+1)& (0+255),b
  1787   001346  EC03  F00D         	call	_printNumber	;wreg free
  1788   00134A                     l3587:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;Lab6C.c: 301: nDig +=1;
  1792   00134A  2A32               	incf	_nDig^0,f,c
  1793                           
  1794                           ;Lab6C.c: 302: }else if(tecla < 10 && nDig == 1){
  1795   00134C  D02E               	goto	l364
  1796   00134E                     l3589:
  1797                           
  1798                           ; BSR set to: 0
  1799   00134E  0E0A               	movlw	10
  1800   001350  619A               	cpfslt	_tecla& (0+255),b
  1801   001352  D022               	goto	l3609
  1802                           
  1803                           ; BSR set to: 0
  1804   001354  0432               	decf	_nDig^0,w,c
  1805   001356  A4D8               	btfss	status,2,c
  1806   001358  D01F               	goto	l3609
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;Lab6C.c: 303: if(valor < 6){
  1810   00135A  0E06               	movlw	6
  1811   00135C  6036               	cpfslt	_valor^0,c
  1812   00135E  D006               	goto	l3601
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;Lab6C.c: 304: valor = 10*valor + tecla;
  1816   001360  5036               	movf	_valor^0,w,c
  1817   001362  0D0A               	mullw	10
  1818   001364  50F3               	movf	243,w,c
  1819   001366  259A               	addwf	_tecla& (0+255),w,b
  1820   001368  6E36               	movwf	_valor^0,c
  1821   00136A  D7EA               	goto	l3585
  1822   00136C                     l3601:
  1823                           
  1824                           ; BSR set to: 0
  1825   00136C  0E09               	movlw	9
  1826   00136E  6436               	cpfsgt	_valor^0,c
  1827   001370  D01C               	goto	l364
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;Lab6C.c: 308: valor = (valor - (valor%10)) + tecla;
  1831   001372  0E0A               	movlw	10
  1832   001374  6F60               	movwf	___lbmod@divisor& (0+255),b
  1833   001376  5036               	movf	_valor^0,w,c
  1834   001378  EC5C  F00C         	call	___lbmod
  1835   00137C  6F7C               	movwf	??_state_1& (0+255),b
  1836   00137E  517C               	movf	??_state_1& (0+255),w,b
  1837   001380  5C36               	subwf	_valor^0,w,c
  1838   001382  259A               	addwf	_tecla& (0+255),w,b
  1839   001384  6E36               	movwf	_valor^0,c
  1840                           
  1841                           ;Lab6C.c: 309: deleteChar();
  1842   001386  EC15  F00D         	call	_deleteChar	;wreg free
  1843                           
  1844                           ;Lab6C.c: 310: printNumber(valor);
  1845   00138A  C036  F07A         	movff	_valor,printNumber@number
  1846   00138E  0100               	movlb	0	; () banked
  1847   001390  6B7B               	clrf	(printNumber@number+1)& (0+255),b
  1848   001392  EC03  F00D         	call	_printNumber	;wreg free
  1849   001396  D7D9               	goto	l3587
  1850   001398                     l3609:
  1851                           
  1852                           ; BSR set to: 0
  1853   001398  0E0A               	movlw	10
  1854   00139A  199A               	xorwf	_tecla& (0+255),w,b
  1855   00139C  A4D8               	btfss	status,2,c
  1856   00139E  D005               	goto	l364
  1857                           
  1858                           ; BSR set to: 0
  1859   0013A0  5032               	movf	_nDig^0,w,c
  1860   0013A2  B4D8               	btfsc	status,2,c
  1861   0013A4  D002               	goto	l364
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;Lab6C.c: 314: estado = 2;
  1865   0013A6  0E02               	movlw	2
  1866   0013A8  6F81               	movwf	_estado& (0+255),b
  1867   0013AA                     l364:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;Lab6C.c: 315: };Lab6C.c: 316: tecla = 100;
  1871   0013AA  0E64               	movlw	100
  1872   0013AC  6F9A               	movwf	_tecla& (0+255),b
  1873   0013AE                     l3615:
  1874   0013AE  0100               	movlb	0	; () banked
  1875   0013B0  0581               	decf	_estado& (0+255),w,b
  1876   0013B2  A4D8               	btfss	status,2,c
  1877   0013B4  0012               	return	
  1878   0013B6  D7B8               	goto	l3577
  1879   0013B8                     __end_of_state_1:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _secondLineC *****************
  1883 ;; Defined at:
  1884 ;;		line 95 in file "LCD_Eusart.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  pos             1    wreg     unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  pos             1    2[BANK0 ] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 3F/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0
  1899 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1901 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1902 ;;Total ram usage:        1 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 8
  1905 ;; This function calls:
  1906 ;;		_writeInstruction
  1907 ;; This function is called by:
  1908 ;;		_state_1
  1909 ;;		_state_2
  1910 ;;		_state_3
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text6
  1915   001A4A                     __ptext6:
  1916                           	callstack 0
  1917   001A4A                     _secondLineC:
  1918                           	callstack 21
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;incstack = 0
  1922                           ;secondLineC@pos stored from wreg
  1923   001A4A  6F62               	movwf	secondLineC@pos& (0+255),b
  1924                           
  1925                           ;LCD_Eusart.c: 96: writeInstruction(0xc0 + pos);
  1926   001A4C  0100               	movlb	0	; () banked
  1927   001A4E  5162               	movf	secondLineC@pos& (0+255),w,b
  1928   001A50  0FC0               	addlw	192
  1929   001A52  ECE1  F00B         	call	_writeInstruction
  1930   001A56  0012               	return		;funcret
  1931   001A58                     __end_of_secondLineC:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _printNumber *****************
  1935 ;; Defined at:
  1936 ;;		line 72 in file "LCD_Eusart.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  number          2   26[BANK0 ] int 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 3F/0
  1947 ;;		On exit  : 3F/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1950 ;;      Params:         0       2       0       0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1953 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1954 ;;Total ram usage:        2 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 10
  1957 ;; This function calls:
  1958 ;;		_printf
  1959 ;; This function is called by:
  1960 ;;		_state_1
  1961 ;;		_state_2
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text7
  1966   001A06                     __ptext7:
  1967                           	callstack 0
  1968   001A06                     _printNumber:
  1969                           	callstack 19
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;LCD_Eusart.c: 73: printf("%d", number);
  1973                           
  1974                           ;incstack = 0
  1975   001A06  0EBA               	movlw	low (STR_1+4)
  1976   001A08  6F6C               	movwf	printf@f& (0+255),b
  1977   001A0A  C07A  F06D         	movff	printNumber@number,?_printf+1
  1978   001A0E  C07B  F06E         	movff	printNumber@number+1,?_printf+2
  1979   001A12  EC23  F006         	call	_printf	;wreg free
  1980                           
  1981                           ; BSR set to: 0
  1982   001A16  0012               	return		;funcret
  1983   001A18                     __end_of_printNumber:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _deleteChar *****************
  1987 ;; Defined at:
  1988 ;;		line 115 in file "LCD_Eusart.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 3F/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2005 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 9
  2009 ;; This function calls:
  2010 ;;		_shiftCLeft
  2011 ;;		_writeData
  2012 ;; This function is called by:
  2013 ;;		_state_1
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text8
  2018   001A2A                     __ptext8:
  2019                           	callstack 0
  2020   001A2A                     _deleteChar:
  2021                           	callstack 20
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;LCD_Eusart.c: 116: shiftCLeft();
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;incstack = 0
  2028   001A2A  EC52  F00D         	call	_shiftCLeft	;wreg free
  2029                           
  2030                           ;LCD_Eusart.c: 117: writeData(' ');
  2031   001A2E  0E20               	movlw	32
  2032   001A30  ECC6  F00B         	call	_writeData
  2033                           
  2034                           ;LCD_Eusart.c: 118: shiftCLeft();
  2035   001A34  EC52  F00D         	call	_shiftCLeft	;wreg free
  2036   001A38  0012               	return		;funcret
  2037   001A3A                     __end_of_deleteChar:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function ___lbmod *****************
  2041 ;; Defined at:
  2042 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lbmod.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  dividend        1    wreg     unsigned char 
  2045 ;;  divisor         1    0[BANK0 ] unsigned char 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  dividend        1    1[BANK0 ] unsigned char 
  2048 ;;  rem             1    3[BANK0 ] unsigned char 
  2049 ;;  counter         1    2[BANK0 ] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      unsigned char 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0
  2054 ;; Tracked objects:
  2055 ;;		On entry : 3F/0
  2056 ;;		On exit  : 3F/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2059 ;;      Params:         0       1       0       0       0       0       0       0       0
  2060 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2062 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2063 ;;Total ram usage:        4 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 6
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_state_1
  2070 ;;		_state_2
  2071 ;;		_assignRGB
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text9
  2076   0018B8                     __ptext9:
  2077                           	callstack 0
  2078   0018B8                     ___lbmod:
  2079                           	callstack 22
  2080                           
  2081                           ;incstack = 0
  2082                           ;___lbmod@dividend stored from wreg
  2083   0018B8  6F61               	movwf	___lbmod@dividend& (0+255),b
  2084   0018BA  0E08               	movlw	8
  2085   0018BC  0100               	movlb	0	; () banked
  2086   0018BE  6F62               	movwf	___lbmod@counter& (0+255),b
  2087   0018C0  0E00               	movlw	0
  2088   0018C2  6F63               	movwf	___lbmod@rem& (0+255),b
  2089   0018C4                     l3431:
  2090                           
  2091                           ; BSR set to: 0
  2092   0018C4  90D8               	bcf	status,0,c
  2093   0018C6  3561               	rlcf	___lbmod@dividend& (0+255),w,b
  2094   0018C8  3563               	rlcf	___lbmod@rem& (0+255),w,b
  2095   0018CA  6F63               	movwf	___lbmod@rem& (0+255),b
  2096                           
  2097                           ; BSR set to: 0
  2098   0018CC  90D8               	bcf	status,0,c
  2099   0018CE  3761               	rlcf	___lbmod@dividend& (0+255),f,b
  2100                           
  2101                           ; BSR set to: 0
  2102   0018D0  5160               	movf	___lbmod@divisor& (0+255),w,b
  2103   0018D2  5D63               	subwf	___lbmod@rem& (0+255),w,b
  2104   0018D4  A0D8               	btfss	status,0,c
  2105   0018D6  D002               	goto	l3439
  2106                           
  2107                           ; BSR set to: 0
  2108   0018D8  5160               	movf	___lbmod@divisor& (0+255),w,b
  2109   0018DA  5F63               	subwf	___lbmod@rem& (0+255),f,b
  2110   0018DC                     l3439:
  2111                           
  2112                           ; BSR set to: 0
  2113   0018DC  2F62               	decfsz	___lbmod@counter& (0+255),f,b
  2114   0018DE  D7F2               	goto	l3431
  2115                           
  2116                           ; BSR set to: 0
  2117   0018E0  5163               	movf	___lbmod@rem& (0+255),w,b
  2118                           
  2119                           ; BSR set to: 0
  2120   0018E2  0012               	return		;funcret
  2121   0018E4                     __end_of___lbmod:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _initMessage *****************
  2125 ;; Defined at:
  2126 ;;		line 121 in file "LCD_Eusart.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  i               1   29[BANK0 ] unsigned char 
  2131 ;;  i               1   28[BANK0 ] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0
  2142 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2143 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2144 ;;      Totals:         0       3       0       0       0       0       0       0       0
  2145 ;;Total ram usage:        3 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 11
  2148 ;; This function calls:
  2149 ;;		_clearDisplay
  2150 ;;		_createCharacter
  2151 ;;		_printMessage
  2152 ;;		_shiftCLeft
  2153 ;;		_shiftDLeft
  2154 ;;		_shiftDRight
  2155 ;;		_writeData
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text10
  2162   001226                     __ptext10:
  2163                           	callstack 0
  2164   001226                     _initMessage:
  2165                           	callstack 19
  2166                           
  2167                           ;LCD_Eusart.c: 122: createCharacter(pChar1,0);
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;incstack = 0
  2171   001226  0E92               	movlw	low _pChar1
  2172   001228  0100               	movlb	0	; () banked
  2173   00122A  6F63               	movwf	createCharacter@pChar& (0+255),b
  2174   00122C  0E00               	movlw	0
  2175   00122E  6F64               	movwf	createCharacter@location& (0+255),b
  2176   001230  EC14  F00C         	call	_createCharacter	;wreg free
  2177                           
  2178                           ;LCD_Eusart.c: 123: createCharacter(pChar2,1);
  2179   001234  0E8A               	movlw	low _pChar2
  2180   001236  0100               	movlb	0	; () banked
  2181   001238  6F63               	movwf	createCharacter@pChar& (0+255),b
  2182   00123A  0E01               	movlw	1
  2183   00123C  6F64               	movwf	createCharacter@location& (0+255),b
  2184   00123E  EC14  F00C         	call	_createCharacter	;wreg free
  2185                           
  2186                           ;LCD_Eusart.c: 124: createCharacter(pChar3,2);
  2187   001242  0E82               	movlw	low _pChar3
  2188   001244  0100               	movlb	0	; () banked
  2189   001246  6F63               	movwf	createCharacter@pChar& (0+255),b
  2190   001248  0E02               	movlw	2
  2191   00124A  6F64               	movwf	createCharacter@location& (0+255),b
  2192   00124C  EC14  F00C         	call	_createCharacter	;wreg free
  2193                           
  2194                           ;LCD_Eusart.c: 125: for(char i = 0; i < 15; i++){
  2195   001250  0E00               	movlw	0
  2196   001252  0100               	movlb	0	; () banked
  2197   001254  6F7C               	movwf	initMessage@i& (0+255),b
  2198   001256                     l92:
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;LCD_Eusart.c: 126: if(i%2 == 0){
  2202   001256  B17C               	btfsc	initMessage@i& (0+255),0,b
  2203   001258  D00D               	goto	l3529
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;LCD_Eusart.c: 127: writeData(1);
  2207   00125A  0E01               	movlw	1
  2208   00125C  ECC6  F00B         	call	_writeData
  2209                           
  2210                           ;LCD_Eusart.c: 128: _delay((unsigned long)((70)*(8000000/4000.0)));
  2211   001260  0EB6               	movlw	182
  2212   001262  0100               	movlb	0	; () banked
  2213   001264  6F7B               	movwf	??_initMessage& (0+255),b
  2214   001266  0ED0               	movlw	208
  2215   001268                     u3087:
  2216   001268  2EE8               	decfsz	wreg,f,c
  2217   00126A  D7FE               	bra	u3087
  2218   00126C  2F7B               	decfsz	??_initMessage& (0+255),f,b
  2219   00126E  D7FC               	bra	u3087
  2220   001270  0000               	nop	
  2221                           
  2222                           ;LCD_Eusart.c: 129: }else{
  2223   001272  D016               	goto	l3537
  2224   001274                     l3529:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;LCD_Eusart.c: 130: shiftCLeft();
  2228   001274  EC52  F00D         	call	_shiftCLeft	;wreg free
  2229                           
  2230                           ;LCD_Eusart.c: 131: writeData(' ');
  2231   001278  0E20               	movlw	32
  2232   00127A  ECC6  F00B         	call	_writeData
  2233                           
  2234                           ;LCD_Eusart.c: 132: writeData(2);
  2235   00127E  0E02               	movlw	2
  2236   001280  ECC6  F00B         	call	_writeData
  2237                           
  2238                           ;LCD_Eusart.c: 133: _delay((unsigned long)((70)*(8000000/4000.0)));
  2239   001284  0EB6               	movlw	182
  2240   001286  0100               	movlb	0	; () banked
  2241   001288  6F7B               	movwf	??_initMessage& (0+255),b
  2242   00128A  0ED0               	movlw	208
  2243   00128C                     u3097:
  2244   00128C  2EE8               	decfsz	wreg,f,c
  2245   00128E  D7FE               	bra	u3097
  2246   001290  2F7B               	decfsz	??_initMessage& (0+255),f,b
  2247   001292  D7FC               	bra	u3097
  2248   001294  0000               	nop	
  2249                           
  2250                           ;LCD_Eusart.c: 134: shiftCLeft();
  2251   001296  EC52  F00D         	call	_shiftCLeft	;wreg free
  2252                           
  2253                           ;LCD_Eusart.c: 135: writeData(' ');
  2254   00129A  0E20               	movlw	32
  2255   00129C  ECC6  F00B         	call	_writeData
  2256   0012A0                     l3537:
  2257   0012A0  0100               	movlb	0	; () banked
  2258   0012A2  2B7C               	incf	initMessage@i& (0+255),f,b
  2259                           
  2260                           ; BSR set to: 0
  2261   0012A4  0E0E               	movlw	14
  2262   0012A6  657C               	cpfsgt	initMessage@i& (0+255),b
  2263   0012A8  D7D6               	goto	l92
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;LCD_Eusart.c: 136: };LCD_Eusart.c: 137: };LCD_Eusart.c: 138: clearDisplay();
  2267   0012AA  ECB8  F00C         	call	_clearDisplay	;wreg free
  2268                           
  2269                           ;LCD_Eusart.c: 139: writeData(0);
  2270   0012AE  0E00               	movlw	0
  2271   0012B0  ECC6  F00B         	call	_writeData
  2272                           
  2273                           ;LCD_Eusart.c: 140: _delay((unsigned long)((20)*(8000000/4000.0)));
  2274   0012B4  0E34               	movlw	52
  2275   0012B6  0100               	movlb	0	; () banked
  2276   0012B8  6F7B               	movwf	??_initMessage& (0+255),b
  2277   0012BA  0EF1               	movlw	241
  2278   0012BC                     u3107:
  2279   0012BC  2EE8               	decfsz	wreg,f,c
  2280   0012BE  D7FE               	bra	u3107
  2281   0012C0  2F7B               	decfsz	??_initMessage& (0+255),f,b
  2282   0012C2  D7FC               	bra	u3107
  2283   0012C4  D000               	nop2	
  2284                           
  2285                           ;LCD_Eusart.c: 141: for(char i = 0; i < 32; i++){
  2286   0012C6  0E00               	movlw	0
  2287   0012C8  0100               	movlb	0	; () banked
  2288   0012CA  6F7D               	movwf	initMessage@i_86& (0+255),b
  2289   0012CC                     l3551:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;LCD_Eusart.c: 142: if(i<16){
  2293   0012CC  0E10               	movlw	16
  2294   0012CE  617D               	cpfslt	initMessage@i_86& (0+255),b
  2295   0012D0  D00C               	goto	l3557
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;LCD_Eusart.c: 143: shiftDRight();
  2299   0012D2  EC4A  F00D         	call	_shiftDRight	;wreg free
  2300   0012D6                     l3555:
  2301                           
  2302                           ;LCD_Eusart.c: 144: _delay((unsigned long)((70)*(8000000/4000.0)));
  2303   0012D6  0EB6               	movlw	182
  2304   0012D8  0100               	movlb	0	; () banked
  2305   0012DA  6F7B               	movwf	??_initMessage& (0+255),b
  2306   0012DC  0ED0               	movlw	208
  2307   0012DE                     u3117:
  2308   0012DE  2EE8               	decfsz	wreg,f,c
  2309   0012E0  D7FE               	bra	u3117
  2310   0012E2  2F7B               	decfsz	??_initMessage& (0+255),f,b
  2311   0012E4  D7FC               	bra	u3117
  2312   0012E6  0000               	nop	
  2313                           
  2314                           ;LCD_Eusart.c: 145: }else{
  2315   0012E8  D003               	goto	l3561
  2316   0012EA                     l3557:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;LCD_Eusart.c: 146: shiftDLeft();
  2320   0012EA  EC4E  F00D         	call	_shiftDLeft	;wreg free
  2321   0012EE  D7F3               	goto	l3555
  2322   0012F0                     l3561:
  2323   0012F0  0100               	movlb	0	; () banked
  2324   0012F2  2B7D               	incf	initMessage@i_86& (0+255),f,b
  2325                           
  2326                           ; BSR set to: 0
  2327   0012F4  0E1F               	movlw	31
  2328   0012F6  657D               	cpfsgt	initMessage@i_86& (0+255),b
  2329   0012F8  D7E9               	goto	l3551
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;LCD_Eusart.c: 148: };LCD_Eusart.c: 149: };LCD_Eusart.c: 150: printMessage("    Welcome 
      +                            ");
  2333   0012FA  0E81               	movlw	low STR_3
  2334   0012FC  6F7A               	movwf	printMessage@string& (0+255),b
  2335   0012FE  EC40  F00D         	call	_printMessage	;wreg free
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;LCD_Eusart.c: 151: writeData(0);
  2339   001302  0E00               	movlw	0
  2340   001304  ECC6  F00B         	call	_writeData
  2341   001308  0012               	return		;funcret
  2342   00130A                     __end_of_initMessage:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _shiftDRight *****************
  2346 ;; Defined at:
  2347 ;;		line 99 in file "LCD_Eusart.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 3F/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2361 ;;      Params:         0       0       0       0       0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 8
  2368 ;; This function calls:
  2369 ;;		_writeInstruction
  2370 ;; This function is called by:
  2371 ;;		_initMessage
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text11
  2376   001A94                     __ptext11:
  2377                           	callstack 0
  2378   001A94                     _shiftDRight:
  2379                           	callstack 21
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;LCD_Eusart.c: 100: writeInstruction(0x1C);
  2383                           
  2384                           ;incstack = 0
  2385   001A94  0E1C               	movlw	28
  2386   001A96  ECE1  F00B         	call	_writeInstruction
  2387   001A9A  0012               	return		;funcret
  2388   001A9C                     __end_of_shiftDRight:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _shiftDLeft *****************
  2392 ;; Defined at:
  2393 ;;		line 103 in file "LCD_Eusart.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 3F/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2410 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 8
  2414 ;; This function calls:
  2415 ;;		_writeInstruction
  2416 ;; This function is called by:
  2417 ;;		_initMessage
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text12
  2422   001A9C                     __ptext12:
  2423                           	callstack 0
  2424   001A9C                     _shiftDLeft:
  2425                           	callstack 21
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;LCD_Eusart.c: 104: writeInstruction(0x18);
  2429                           
  2430                           ;incstack = 0
  2431   001A9C  0E18               	movlw	24
  2432   001A9E  ECE1  F00B         	call	_writeInstruction
  2433   001AA2  0012               	return		;funcret
  2434   001AA4                     __end_of_shiftDLeft:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _shiftCLeft *****************
  2438 ;; Defined at:
  2439 ;;		line 111 in file "LCD_Eusart.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2453 ;;      Params:         0       0       0       0       0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 8
  2460 ;; This function calls:
  2461 ;;		_writeInstruction
  2462 ;; This function is called by:
  2463 ;;		_deleteChar
  2464 ;;		_initMessage
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text13
  2469   001AA4                     __ptext13:
  2470                           	callstack 0
  2471   001AA4                     _shiftCLeft:
  2472                           	callstack 20
  2473                           
  2474                           ;LCD_Eusart.c: 112: writeInstruction(0x10);
  2475                           
  2476                           ;incstack = 0
  2477   001AA4  0E10               	movlw	16
  2478   001AA6  ECE1  F00B         	call	_writeInstruction
  2479   001AAA  0012               	return		;funcret
  2480   001AAC                     __end_of_shiftCLeft:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _printMessage *****************
  2484 ;; Defined at:
  2485 ;;		line 64 in file "LCD_Eusart.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  string          1   26[BANK0 ] PTR unsigned char 
  2488 ;;		 -> STR_17(17), STR_16(17), STR_11(13), STR_10(17), 
  2489 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_3(15), 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 3F/0
  2498 ;;		On exit  : 3F/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2501 ;;      Params:         0       1       0       0       0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2504 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2505 ;;Total ram usage:        1 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 10
  2508 ;; This function calls:
  2509 ;;		_printf
  2510 ;; This function is called by:
  2511 ;;		_initMessage
  2512 ;;		_state_1
  2513 ;;		_state_3
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text14
  2518   001A80                     __ptext14:
  2519                           	callstack 0
  2520   001A80                     _printMessage:
  2521                           	callstack 19
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;LCD_Eusart.c: 65: printf(string);
  2525                           
  2526                           ;incstack = 0
  2527   001A80  C07A  F06C         	movff	printMessage@string,printf@f
  2528   001A84  EC23  F006         	call	_printf	;wreg free
  2529                           
  2530                           ; BSR set to: 0
  2531   001A88  0012               	return		;funcret
  2532   001A8A                     __end_of_printMessage:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function _printf *****************
  2536 ;; Defined at:
  2537 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2540 ;;		 -> STR_17(17), STR_16(17), STR_11(13), STR_10(17), 
  2541 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(16), 
  2542 ;;		 -> STR_5(17), STR_4(17), STR_3(15), STR_2(3), 
  2543 ;;		 -> STR_1(7), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  tmpval          4    0        struct .
  2546 ;;  val             2   23[BANK0 ] unsigned int 
  2547 ;;  cp              2   20[BANK0 ] PTR const unsigned char 
  2548 ;;		 -> STR_18(7), ?_printf(2), STR_15(8), STR_14(10), 
  2549 ;;		 -> STR_13(8), STR_12(10), valor(1), 
  2550 ;;  len             2    0        unsigned int 
  2551 ;;  c               1   25[BANK0 ] unsigned char 
  2552 ;;  ap              1   22[BANK0 ] PTR void [1]
  2553 ;;		 -> ?_printf(2), 
  2554 ;;  flag            1   19[BANK0 ] unsigned char 
  2555 ;;  prec            1   18[BANK0 ] char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2   12[BANK0 ] int 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 3F/0
  2562 ;;		On exit  : 3F/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2565 ;;      Params:         0       5       0       0       0       0       0       0       0
  2566 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2567 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2568 ;;      Totals:         0      14       0       0       0       0       0       0       0
  2569 ;;Total ram usage:       14 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 9
  2572 ;; This function calls:
  2573 ;;		___lwdiv
  2574 ;;		___lwmod
  2575 ;;		_putch
  2576 ;; This function is called by:
  2577 ;;		_printMessage
  2578 ;;		_printInfo
  2579 ;;		_printNumber
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text15
  2584   000C46                     __ptext15:
  2585                           	callstack 0
  2586   000C46                     _printf:
  2587                           	callstack 19
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;incstack = 0
  2594   000C46  0E6D               	movlw	low (?_printf+1)
  2595   000C48  6F76               	movwf	printf@ap& (0+255),b
  2596                           
  2597                           ;doprnt.c: 553: while((c = *f++)) {
  2598   000C4A  D0D4               	goto	u2730
  2599   000C4C                     l3357:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;doprnt.c: 555: if(c != '%')
  2603   000C4C  0E25               	movlw	37
  2604   000C4E  1979               	xorwf	printf@c& (0+255),w,b
  2605   000C50  B4D8               	btfsc	status,2,c
  2606   000C52  D004               	goto	l3361
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2610   000C54  5179               	movf	printf@c& (0+255),w,b
  2611   000C56  ECA9  F00C         	call	_putch
  2612                           
  2613                           ;doprnt.c: 559: continue;
  2614   000C5A  D0CC               	goto	u2730
  2615   000C5C                     l3361:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2619   000C5C  0E00               	movlw	0
  2620   000C5E  6F73               	movwf	printf@flag& (0+255),b
  2621                           
  2622                           ;doprnt.c: 661: switch(c = *f++) {
  2623   000C60  D043               	goto	l3383
  2624   000C62                     l3363:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2628   000C62  5176               	movf	printf@ap& (0+255),w,b
  2629   000C64  6ED9               	movwf	fsr2l,c
  2630   000C66  6ADA               	clrf	fsr2h,c
  2631   000C68  CFDE F074          	movff	postinc2,printf@cp
  2632   000C6C  CFDD F075          	movff	postdec2,printf@cp+1
  2633                           
  2634                           ; BSR set to: 0
  2635   000C70  0E02               	movlw	2
  2636   000C72  2776               	addwf	printf@ap& (0+255),f,b
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;doprnt.c: 766: if(!cp)
  2640   000C74  5174               	movf	printf@cp& (0+255),w,b
  2641   000C76  1175               	iorwf	(printf@cp+1)& (0+255),w,b
  2642   000C78  A4D8               	btfss	status,2,c
  2643   000C7A  D01C               	goto	l3375
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;doprnt.c: 767: cp = "(null)";
  2647   000C7C  0EAF               	movlw	low STR_18
  2648   000C7E  6F74               	movwf	printf@cp& (0+255),b
  2649   000C80  5174               	movf	printf@cp& (0+255),w,b
  2650   000C82  A4D8               	btfss	status,2,c
  2651   000C84  0E08               	movlw	high __smallconst
  2652   000C86  6F75               	movwf	(printf@cp+1)& (0+255),b
  2653   000C88  D015               	goto	l3375
  2654   000C8A                     l3371:
  2655                           
  2656                           ;doprnt.c: 804: (putch(*cp++) );
  2657   000C8A  C074  FFF6         	movff	printf@cp,tblptrl
  2658   000C8E  C075  FFF7         	movff	printf@cp+1,tblptrh
  2659   000C92  6AF8               	clrf	tblptru,c
  2660   000C94  0E07               	movlw	(high __ramtop+-1)
  2661   000C96  64F7               	cpfsgt	tblptrh,c
  2662   000C98  D003               	bra	u2657
  2663   000C9A  0008               	tblrd		*
  2664   000C9C  50F5               	movf	tablat,w,c
  2665   000C9E  D005               	bra	u2650
  2666   000CA0                     u2657:
  2667   000CA0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2668   000CA4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2669   000CA8  50EF               	movf	indf0,w,c
  2670   000CAA                     u2650:
  2671   000CAA  ECA9  F00C         	call	_putch
  2672   000CAE  0100               	movlb	0	; () banked
  2673   000CB0  4B74               	infsnz	printf@cp& (0+255),f,b
  2674   000CB2  2B75               	incf	(printf@cp+1)& (0+255),f,b
  2675   000CB4                     l3375:
  2676                           
  2677                           ; BSR set to: 0
  2678   000CB4  C074  FFF6         	movff	printf@cp,tblptrl
  2679   000CB8  C075  FFF7         	movff	printf@cp+1,tblptrh
  2680   000CBC  6AF8               	clrf	tblptru,c
  2681   000CBE  0E07               	movlw	(high __ramtop+-1)
  2682   000CC0  64F7               	cpfsgt	tblptrh,c
  2683   000CC2  D003               	bra	u2667
  2684   000CC4  0008               	tblrd		*
  2685   000CC6  50F5               	movf	tablat,w,c
  2686   000CC8  D005               	bra	u2660
  2687   000CCA                     u2667:
  2688   000CCA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2689   000CCE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2690   000CD2  50EF               	movf	indf0,w,c
  2691   000CD4                     u2660:
  2692   000CD4  0900               	iorlw	0
  2693   000CD6  B4D8               	btfsc	status,2,c
  2694   000CD8  D08D               	goto	u2730
  2695   000CDA  D7D7               	goto	l3371
  2696   000CDC                     l3377:
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;doprnt.c: 835: (putch(c) );
  2700   000CDC  5179               	movf	printf@c& (0+255),w,b
  2701   000CDE  ECA9  F00C         	call	_putch
  2702                           
  2703                           ;doprnt.c: 836: continue;
  2704   000CE2  D088               	goto	u2730
  2705   000CE4                     l3379:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;doprnt.c: 844: flag |= 0x40;
  2709   000CE4  8D73               	bsf	printf@flag& (0+255),6,b
  2710                           
  2711                           ;doprnt.c: 845: break;
  2712   000CE6  D01B               	goto	l470
  2713   000CE8                     l3383:
  2714                           
  2715                           ; BSR set to: 0
  2716   000CE8  2B6C               	incf	printf@f& (0+255),f,b
  2717   000CEA  056C               	decf	printf@f& (0+255),w,b
  2718   000CEC  6F71               	movwf	??_printf& (0+255),b
  2719   000CEE  C071  FFF6         	movff	??_printf,tblptrl
  2720   000CF2                     	if	1	;There is more than 1 active tblptr byte
  2721   000CF2  0E08               	movlw	high __smallconst
  2722   000CF4  6EF7               	movwf	tblptrh,c
  2723   000CF6                     	endif
  2724   000CF6                     	if	0	;tblptru may be non-zero
  2725   000CF6                     	endif
  2726   000CF6                     	if	0	;tblptru may be non-zero
  2727   000CF6                     	endif
  2728   000CF6  0008               	tblrd		*
  2729   000CF8  CFF5 F079          	movff	tablat,printf@c
  2730   000CFC  5179               	movf	printf@c& (0+255),w,b
  2731                           
  2732                           ; Switch size 1, requested type "simple"
  2733                           ; Number of cases is 5, Range of values is 0 to 117
  2734                           ; switch strategies available:
  2735                           ; Name         Instructions Cycles
  2736                           ; simple_byte           16     9 (average)
  2737                           ;	Chosen strategy is simple_byte
  2738   000CFE  0A00               	xorlw	0	; case 0
  2739   000D00  B4D8               	btfsc	status,2,c
  2740   000D02  0012               	return	
  2741   000D04  0A64               	xorlw	100	; case 100
  2742   000D06  B4D8               	btfsc	status,2,c
  2743   000D08  D00A               	goto	l470
  2744   000D0A  0A0D               	xorlw	13	; case 105
  2745   000D0C  B4D8               	btfsc	status,2,c
  2746   000D0E  D007               	goto	l470
  2747   000D10  0A1A               	xorlw	26	; case 115
  2748   000D12  B4D8               	btfsc	status,2,c
  2749   000D14  D7A6               	goto	l3363
  2750   000D16  0A06               	xorlw	6	; case 117
  2751   000D18  B4D8               	btfsc	status,2,c
  2752   000D1A  D7E4               	goto	l3379
  2753   000D1C  D7DF               	goto	l3377
  2754   000D1E                     l470:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  2758   000D1E  BD73               	btfsc	printf@flag& (0+255),6,b
  2759   000D20  D012               	goto	l3395
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2763   000D22  5176               	movf	printf@ap& (0+255),w,b
  2764   000D24  6ED9               	movwf	fsr2l,c
  2765   000D26  6ADA               	clrf	fsr2h,c
  2766   000D28  CFDE F077          	movff	postinc2,printf@val
  2767   000D2C  CFDD F078          	movff	postdec2,printf@val+1
  2768                           
  2769                           ; BSR set to: 0
  2770   000D30  0E02               	movlw	2
  2771   000D32  2776               	addwf	printf@ap& (0+255),f,b
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;doprnt.c: 1287: if((int)val < 0) {
  2775   000D34  AF78               	btfss	(printf@val+1)& (0+255),7,b
  2776   000D36  D010               	goto	l3399
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;doprnt.c: 1288: flag |= 0x03;
  2780   000D38  0E03               	movlw	3
  2781   000D3A  1373               	iorwf	printf@flag& (0+255),f,b
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;doprnt.c: 1289: val = -val;
  2785   000D3C  6D77               	negf	printf@val& (0+255),b
  2786   000D3E  1F78               	comf	(printf@val+1)& (0+255),f,b
  2787   000D40  B0D8               	btfsc	status,0,c
  2788   000D42  2B78               	incf	(printf@val+1)& (0+255),f,b
  2789   000D44  D009               	goto	l3399
  2790   000D46                     l3395:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  2794   000D46  5176               	movf	printf@ap& (0+255),w,b
  2795   000D48  6ED9               	movwf	fsr2l,c
  2796   000D4A  6ADA               	clrf	fsr2h,c
  2797   000D4C  CFDE F077          	movff	postinc2,printf@val
  2798   000D50  CFDD F078          	movff	postdec2,printf@val+1
  2799                           
  2800                           ; BSR set to: 0
  2801   000D54  0E02               	movlw	2
  2802   000D56  2776               	addwf	printf@ap& (0+255),f,b
  2803   000D58                     l3399:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  2807   000D58  0E01               	movlw	1
  2808   000D5A  6F79               	movwf	printf@c& (0+255),b
  2809   000D5C                     l3405:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;doprnt.c: 1332: if(val < dpowers[c])
  2813   000D5C  5179               	movf	printf@c& (0+255),w,b
  2814   000D5E  0D02               	mullw	2
  2815   000D60  50F3               	movf	243,w,c
  2816   000D62  0F01               	addlw	low _dpowers
  2817   000D64  6F71               	movwf	??_printf& (0+255),b
  2818   000D66  C071  FFF6         	movff	??_printf,tblptrl
  2819   000D6A                     	if	1	;There is more than 1 active tblptr byte
  2820   000D6A  0E08               	movlw	high __smallconst
  2821   000D6C  6EF7               	movwf	tblptrh,c
  2822   000D6E                     	endif
  2823   000D6E                     	if	0	;tblptru may be non-zero
  2824   000D6E                     	endif
  2825   000D6E                     	if	0	;tblptru may be non-zero
  2826   000D6E                     	endif
  2827   000D6E  0009               	tblrd		*+
  2828   000D70  50F5               	movf	tablat,w,c
  2829   000D72  5D77               	subwf	printf@val& (0+255),w,b
  2830   000D74  0009               	tblrd		*+
  2831   000D76  50F5               	movf	tablat,w,c
  2832   000D78  5978               	subwfb	(printf@val+1)& (0+255),w,b
  2833   000D7A  A0D8               	btfss	status,0,c
  2834   000D7C  D005               	goto	u2710
  2835                           
  2836                           ; BSR set to: 0
  2837   000D7E  2B79               	incf	printf@c& (0+255),f,b
  2838                           
  2839                           ; BSR set to: 0
  2840   000D80  0E05               	movlw	5
  2841   000D82  1979               	xorwf	printf@c& (0+255),w,b
  2842   000D84  A4D8               	btfss	status,2,c
  2843   000D86  D7EA               	goto	l3405
  2844   000D88                     u2710:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2848   000D88  C073  F071         	movff	printf@flag,??_printf
  2849   000D8C  0E03               	movlw	3
  2850   000D8E  1771               	andwf	??_printf& (0+255),f,b
  2851   000D90  B4D8               	btfsc	status,2,c
  2852   000D92  D003               	goto	l3417
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;doprnt.c: 1465: (putch('-') );
  2856   000D94  0E2D               	movlw	45
  2857   000D96  ECA9  F00C         	call	_putch
  2858   000D9A                     l3417:
  2859                           
  2860                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2861   000D9A  C079  F072         	movff	printf@c,printf@prec
  2862                           
  2863                           ;doprnt.c: 1500: while(prec--) {
  2864   000D9E  D025               	goto	l3423
  2865   000DA0                     l3419:
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2869   000DA0  5172               	movf	printf@prec& (0+255),w,b
  2870   000DA2  0D02               	mullw	2
  2871   000DA4  50F3               	movf	243,w,c
  2872   000DA6  0F01               	addlw	low _dpowers
  2873   000DA8  6F71               	movwf	??_printf& (0+255),b
  2874   000DAA  C071  FFF6         	movff	??_printf,tblptrl
  2875   000DAE                     	if	1	;There is more than 1 active tblptr byte
  2876   000DAE  0E08               	movlw	high __smallconst
  2877   000DB0  6EF7               	movwf	tblptrh,c
  2878   000DB2                     	endif
  2879   000DB2                     	if	0	;tblptru may be non-zero
  2880   000DB2                     	endif
  2881   000DB2                     	if	0	;tblptru may be non-zero
  2882   000DB2                     	endif
  2883   000DB2  0009               	tblrd		*+
  2884   000DB4  CFF5 F062          	movff	tablat,___lwdiv@divisor
  2885   000DB8  000A               	tblrd		*-
  2886   000DBA  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  2887   000DBE  C077  F060         	movff	printf@val,___lwdiv@dividend
  2888   000DC2  C078  F061         	movff	printf@val+1,___lwdiv@dividend+1
  2889   000DC6  ECF4  F00A         	call	___lwdiv	;wreg free
  2890   000DCA  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  2891   000DCE  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  2892   000DD2  0E00               	movlw	0
  2893   000DD4  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2894   000DD6  0E0A               	movlw	10
  2895   000DD8  6F69               	movwf	___lwmod@divisor& (0+255),b
  2896   000DDA  EC46  F00B         	call	___lwmod	;wreg free
  2897   000DDE  5167               	movf	?___lwmod& (0+255),w,b
  2898   000DE0  0F30               	addlw	48
  2899   000DE2  6F79               	movwf	printf@c& (0+255),b
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  2903   000DE4  5179               	movf	printf@c& (0+255),w,b
  2904   000DE6  ECA9  F00C         	call	_putch
  2905   000DEA                     l3423:
  2906   000DEA  0100               	movlb	0	; () banked
  2907   000DEC  0772               	decf	printf@prec& (0+255),f,b
  2908   000DEE  2972               	incf	printf@prec& (0+255),w,b
  2909   000DF0  A4D8               	btfss	status,2,c
  2910   000DF2  D7D6               	goto	l3419
  2911   000DF4                     u2730:
  2912   000DF4  0100               	movlb	0	; () banked
  2913   000DF6  2B6C               	incf	printf@f& (0+255),f,b
  2914   000DF8  056C               	decf	printf@f& (0+255),w,b
  2915   000DFA  6F71               	movwf	??_printf& (0+255),b
  2916   000DFC  C071  FFF6         	movff	??_printf,tblptrl
  2917   000E00                     	if	1	;There is more than 1 active tblptr byte
  2918   000E00  0E08               	movlw	high __smallconst
  2919   000E02  6EF7               	movwf	tblptrh,c
  2920   000E04                     	endif
  2921   000E04                     	if	0	;tblptru may be non-zero
  2922   000E04                     	endif
  2923   000E04                     	if	0	;tblptru may be non-zero
  2924   000E04                     	endif
  2925   000E04  0008               	tblrd		*
  2926   000E06  CFF5 F079          	movff	tablat,printf@c
  2927   000E0A  5179               	movf	printf@c& (0+255),w,b
  2928   000E0C  B4D8               	btfsc	status,2,c
  2929   000E0E  0012               	return	
  2930   000E10  D71D               	goto	l3357
  2931   000E12                     __end_of_printf:
  2932                           	callstack 0
  2933                           
  2934 ;; *************** function _putch *****************
  2935 ;; Defined at:
  2936 ;;		line 76 in file "LCD_Eusart.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  d               1    wreg     unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  d               1    2[BANK0 ] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0
  2951 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2953 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2954 ;;Total ram usage:        1 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 8
  2957 ;; This function calls:
  2958 ;;		_writeData
  2959 ;; This function is called by:
  2960 ;;		_printf
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text16
  2965   001952                     __ptext16:
  2966                           	callstack 0
  2967   001952                     _putch:
  2968                           	callstack 19
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;incstack = 0
  2972                           ;putch@d stored from wreg
  2973   001952  0100               	movlb	0	; () banked
  2974   001954  6F62               	movwf	putch@d& (0+255),b
  2975                           
  2976                           ;LCD_Eusart.c: 77: if(eusart){
  2977   001956  5035               	movf	_eusart^0,w,c
  2978   001958  B4D8               	btfsc	status,2,c
  2979   00195A  D005               	goto	l3311
  2980   00195C                     u2550:
  2981   00195C  A2AC               	btfss	4012,1,c	;volatile
  2982   00195E  D7FE               	goto	u2550
  2983                           
  2984                           ;LCD_Eusart.c: 79: TXREG = d;
  2985   001960  C062  FFAD         	movff	putch@d,4013	;volatile
  2986                           
  2987                           ;LCD_Eusart.c: 80: }else writeData(d);
  2988   001964  0012               	return	
  2989   001966                     l3311:
  2990   001966  0100               	movlb	0	; () banked
  2991   001968  5162               	movf	putch@d& (0+255),w,b
  2992   00196A  ECC6  F00B         	call	_writeData
  2993   00196E  0012               	return		;funcret
  2994   001970                     __end_of_putch:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function ___lwmod *****************
  2998 ;; Defined at:
  2999 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwmod.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  dividend        2    7[BANK0 ] unsigned int 
  3002 ;;  divisor         2    9[BANK0 ] unsigned int 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  counter         1   11[BANK0 ] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  2    7[BANK0 ] unsigned int 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0
  3009 ;; Tracked objects:
  3010 ;;		On entry : 3F/0
  3011 ;;		On exit  : 3F/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3014 ;;      Params:         0       4       0       0       0       0       0       0       0
  3015 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3017 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3018 ;;Total ram usage:        5 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 6
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_printf
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text17
  3029   00168C                     __ptext17:
  3030                           	callstack 0
  3031   00168C                     ___lwmod:
  3032                           	callstack 21
  3033                           
  3034                           ; BSR set to: 0
  3035                           
  3036                           ;incstack = 0
  3037   00168C  5169               	movf	___lwmod@divisor& (0+255),w,b
  3038   00168E  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3039   001690  B4D8               	btfsc	status,2,c
  3040   001692  D018               	goto	l981
  3041                           
  3042                           ; BSR set to: 0
  3043   001694  0E01               	movlw	1
  3044   001696  6F6B               	movwf	___lwmod@counter& (0+255),b
  3045   001698  D004               	goto	l3341
  3046   00169A                     l3339:
  3047                           
  3048                           ; BSR set to: 0
  3049   00169A  90D8               	bcf	status,0,c
  3050   00169C  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  3051   00169E  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3052   0016A0  2B6B               	incf	___lwmod@counter& (0+255),f,b
  3053   0016A2                     l3341:
  3054                           
  3055                           ; BSR set to: 0
  3056   0016A2  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3057   0016A4  D7FA               	goto	l3339
  3058   0016A6                     u2610:
  3059                           
  3060                           ; BSR set to: 0
  3061   0016A6  5169               	movf	___lwmod@divisor& (0+255),w,b
  3062   0016A8  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  3063   0016AA  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3064   0016AC  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3065   0016AE  A0D8               	btfss	status,0,c
  3066   0016B0  D004               	goto	l3347
  3067                           
  3068                           ; BSR set to: 0
  3069   0016B2  5169               	movf	___lwmod@divisor& (0+255),w,b
  3070   0016B4  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  3071   0016B6  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3072   0016B8  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3073   0016BA                     l3347:
  3074                           
  3075                           ; BSR set to: 0
  3076   0016BA  90D8               	bcf	status,0,c
  3077   0016BC  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3078   0016BE  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  3079                           
  3080                           ; BSR set to: 0
  3081   0016C0  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  3082   0016C2  D7F1               	goto	u2610
  3083   0016C4                     l981:
  3084                           
  3085                           ; BSR set to: 0
  3086   0016C4  C067  F067         	movff	___lwmod@dividend,?___lwmod
  3087   0016C8  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  3088                           
  3089                           ; BSR set to: 0
  3090   0016CC  0012               	return		;funcret
  3091   0016CE                     __end_of___lwmod:
  3092                           	callstack 0
  3093                           
  3094 ;; *************** function ___lwdiv *****************
  3095 ;; Defined at:
  3096 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwdiv.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  dividend        2    0[BANK0 ] unsigned int 
  3099 ;;  divisor         2    2[BANK0 ] unsigned int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  quotient        2    5[BANK0 ] unsigned int 
  3102 ;;  counter         1    4[BANK0 ] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  2    0[BANK0 ] unsigned int 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 3F/0
  3109 ;;		On exit  : 3F/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3112 ;;      Params:         0       4       0       0       0       0       0       0       0
  3113 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3115 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3116 ;;Total ram usage:        7 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 6
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_printf
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text18
  3127   0015E8                     __ptext18:
  3128                           	callstack 0
  3129   0015E8                     ___lwdiv:
  3130                           	callstack 21
  3131                           
  3132                           ; BSR set to: 0
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;incstack = 0
  3136   0015E8  0E00               	movlw	0
  3137   0015EA  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3138   0015EC  0E00               	movlw	0
  3139   0015EE  6F65               	movwf	___lwdiv@quotient& (0+255),b
  3140                           
  3141                           ; BSR set to: 0
  3142   0015F0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3143   0015F2  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3144   0015F4  B4D8               	btfsc	status,2,c
  3145   0015F6  D01C               	goto	l971
  3146                           
  3147                           ; BSR set to: 0
  3148   0015F8  0E01               	movlw	1
  3149   0015FA  6F64               	movwf	___lwdiv@counter& (0+255),b
  3150   0015FC  D004               	goto	l3321
  3151   0015FE                     l3319:
  3152                           
  3153                           ; BSR set to: 0
  3154   0015FE  90D8               	bcf	status,0,c
  3155   001600  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3156   001602  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3157   001604  2B64               	incf	___lwdiv@counter& (0+255),f,b
  3158   001606                     l3321:
  3159                           
  3160                           ; BSR set to: 0
  3161   001606  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3162   001608  D7FA               	goto	l3319
  3163   00160A                     u2580:
  3164                           
  3165                           ; BSR set to: 0
  3166   00160A  90D8               	bcf	status,0,c
  3167   00160C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  3168   00160E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3169                           
  3170                           ; BSR set to: 0
  3171   001610  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3172   001612  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3173   001614  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3174   001616  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3175   001618  A0D8               	btfss	status,0,c
  3176   00161A  D005               	goto	l3331
  3177                           
  3178                           ; BSR set to: 0
  3179   00161C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3180   00161E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3181   001620  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3182   001622  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3183                           
  3184                           ; BSR set to: 0
  3185   001624  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  3186   001626                     l3331:
  3187                           
  3188                           ; BSR set to: 0
  3189   001626  90D8               	bcf	status,0,c
  3190   001628  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3191   00162A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3192                           
  3193                           ; BSR set to: 0
  3194   00162C  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  3195   00162E  D7ED               	goto	u2580
  3196   001630                     l971:
  3197                           
  3198                           ; BSR set to: 0
  3199   001630  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  3200   001634  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3201                           
  3202                           ; BSR set to: 0
  3203   001638  0012               	return		;funcret
  3204   00163A                     __end_of___lwdiv:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _createCharacter *****************
  3208 ;; Defined at:
  3209 ;;		line 56 in file "LCD_Eusart.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  pChar           1    3[BANK0 ] PTR unsigned char 
  3212 ;;		 -> pChar3(8), pChar2(8), pChar1(8), 
  3213 ;;  location        1    4[BANK0 ] unsigned char 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  i               1    5[BANK0 ] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 3F/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3225 ;;      Params:         0       2       0       0       0       0       0       0       0
  3226 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3228 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3229 ;;Total ram usage:        3 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 9
  3232 ;; This function calls:
  3233 ;;		_clearDisplay
  3234 ;;		_writeData
  3235 ;;		_writeInstruction
  3236 ;; This function is called by:
  3237 ;;		_initMessage
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text19
  3242   001828                     __ptext19:
  3243                           	callstack 0
  3244   001828                     _createCharacter:
  3245                           	callstack 20
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;LCD_Eusart.c: 57: writeInstruction(0x40 + 8*location);
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;incstack = 0
  3252   001828  5164               	movf	createCharacter@location& (0+255),w,b
  3253   00182A  0D08               	mullw	8
  3254   00182C  50F3               	movf	243,w,c
  3255   00182E  0F40               	addlw	64
  3256   001830  ECE1  F00B         	call	_writeInstruction
  3257                           
  3258                           ;LCD_Eusart.c: 58: for(char i = 0; i < 8; i++){
  3259   001834  0E00               	movlw	0
  3260   001836  0100               	movlb	0	; () banked
  3261   001838  6F65               	movwf	createCharacter@i& (0+255),b
  3262   00183A                     l3453:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;LCD_Eusart.c: 59: writeData(pChar[i]);
  3266   00183A  5163               	movf	createCharacter@pChar& (0+255),w,b
  3267   00183C  2565               	addwf	createCharacter@i& (0+255),w,b
  3268   00183E  6ED9               	movwf	fsr2l,c
  3269   001840  6ADA               	clrf	fsr2h,c
  3270   001842  50DF               	movf	indf2,w,c
  3271   001844  ECC6  F00B         	call	_writeData
  3272   001848  0100               	movlb	0	; () banked
  3273   00184A  2B65               	incf	createCharacter@i& (0+255),f,b
  3274                           
  3275                           ; BSR set to: 0
  3276   00184C  0E07               	movlw	7
  3277   00184E  6565               	cpfsgt	createCharacter@i& (0+255),b
  3278   001850  D7F4               	goto	l3453
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;LCD_Eusart.c: 60: };LCD_Eusart.c: 61: clearDisplay();
  3282   001852  ECB8  F00C         	call	_clearDisplay	;wreg free
  3283   001856  0012               	return		;funcret
  3284   001858                     __end_of_createCharacter:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function _writeData *****************
  3288 ;; Defined at:
  3289 ;;		line 16 in file "LCD_Eusart.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  d               1    wreg     unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  d               1    1[BANK0 ] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0
  3304 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3305 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3306 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3307 ;;Total ram usage:        2 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 7
  3310 ;; This function calls:
  3311 ;;		_enable
  3312 ;; This function is called by:
  3313 ;;		_createCharacter
  3314 ;;		_putch
  3315 ;;		_deleteChar
  3316 ;;		_initMessage
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text20
  3321   00178C                     __ptext20:
  3322                           	callstack 0
  3323   00178C                     _writeData:
  3324                           	callstack 19
  3325                           
  3326                           ;incstack = 0
  3327                           ;writeData@d stored from wreg
  3328   00178C  0100               	movlb	0	; () banked
  3329   00178E  6F61               	movwf	writeData@d& (0+255),b
  3330                           
  3331                           ;LCD_Eusart.c: 17: LATA3 = 1;
  3332   001790  8689               	bsf	3977,3,c	;volatile
  3333                           
  3334                           ;LCD_Eusart.c: 18: LATD = (LATD & 0b00001111) | (d & 0b11110000);
  3335   001792  C061  F060         	movff	writeData@d,??_writeData
  3336   001796  0EF0               	movlw	240
  3337   001798  0100               	movlb	0	; () banked
  3338   00179A  1760               	andwf	??_writeData& (0+255),f,b
  3339   00179C  508C               	movf	140,w,c	;volatile
  3340   00179E  0B0F               	andlw	15
  3341   0017A0  1160               	iorwf	??_writeData& (0+255),w,b
  3342   0017A2  6E8C               	movwf	140,c	;volatile
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;LCD_Eusart.c: 19: enable();
  3346   0017A4  EC2C  F00D         	call	_enable	;wreg free
  3347                           
  3348                           ;LCD_Eusart.c: 20: LATD = (LATD & 0b00001111) | (d<<4);
  3349   0017A8  C061  F060         	movff	writeData@d,??_writeData
  3350   0017AC  0100               	movlb	0	; () banked
  3351   0017AE  3B60               	swapf	??_writeData& (0+255),f,b
  3352   0017B0  0EF0               	movlw	240
  3353   0017B2  1760               	andwf	??_writeData& (0+255),f,b
  3354   0017B4  508C               	movf	140,w,c	;volatile
  3355   0017B6  0B0F               	andlw	15
  3356   0017B8  1160               	iorwf	??_writeData& (0+255),w,b
  3357   0017BA  6E8C               	movwf	140,c	;volatile
  3358                           
  3359                           ;LCD_Eusart.c: 21: enable();
  3360   0017BC  EC2C  F00D         	call	_enable	;wreg free
  3361   0017C0  0012               	return		;funcret
  3362   0017C2                     __end_of_writeData:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _initLCD *****************
  3366 ;; Defined at:
  3367 ;;		line 42 in file "LCD_Eusart.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3383 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3384 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3385 ;;Total ram usage:        1 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 9
  3388 ;; This function calls:
  3389 ;;		_clearDisplay
  3390 ;;		_writeInstruction
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text21
  3397   00158E                     __ptext21:
  3398                           	callstack 0
  3399   00158E                     _initLCD:
  3400                           	callstack 21
  3401                           
  3402                           ;LCD_Eusart.c: 43: _delay((unsigned long)((20)*(8000000/4000.0)));
  3403                           
  3404                           ;incstack = 0
  3405   00158E  0E34               	movlw	52
  3406   001590  0100               	movlb	0	; () banked
  3407   001592  6F63               	movwf	??_initLCD& (0+255),b
  3408   001594  0EF1               	movlw	241
  3409   001596                     u3127:
  3410   001596  2EE8               	decfsz	wreg,f,c
  3411   001598  D7FE               	bra	u3127
  3412   00159A  2F63               	decfsz	??_initLCD& (0+255),f,b
  3413   00159C  D7FC               	bra	u3127
  3414   00159E  D000               	nop2	
  3415                           
  3416                           ;LCD_Eusart.c: 44: writeInstruction(0x30);
  3417   0015A0  0E30               	movlw	48
  3418   0015A2  ECE1  F00B         	call	_writeInstruction
  3419                           
  3420                           ;LCD_Eusart.c: 45: _delay((unsigned long)((5)*(8000000/4000.0)));
  3421   0015A6  0E0D               	movlw	13
  3422   0015A8  0100               	movlb	0	; () banked
  3423   0015AA  6F63               	movwf	??_initLCD& (0+255),b
  3424   0015AC  0EFB               	movlw	251
  3425   0015AE                     u3137:
  3426   0015AE  2EE8               	decfsz	wreg,f,c
  3427   0015B0  D7FE               	bra	u3137
  3428   0015B2  2F63               	decfsz	??_initLCD& (0+255),f,b
  3429   0015B4  D7FC               	bra	u3137
  3430   0015B6  D000               	nop2	
  3431                           
  3432                           ;LCD_Eusart.c: 46: writeInstruction(0x30);
  3433   0015B8  0E30               	movlw	48
  3434   0015BA  ECE1  F00B         	call	_writeInstruction
  3435                           
  3436                           ;LCD_Eusart.c: 47: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3437   0015BE  0E50               	movlw	80
  3438   0015C0                     u3147:
  3439   0015C0  2EE8               	decfsz	wreg,f,c
  3440   0015C2  D7FE               	bra	u3147
  3441                           
  3442                           ;LCD_Eusart.c: 48: writeInstruction(0x32);
  3443   0015C4  0E32               	movlw	50
  3444   0015C6  ECE1  F00B         	call	_writeInstruction
  3445                           
  3446                           ;LCD_Eusart.c: 49: writeInstruction(0x28);
  3447   0015CA  0E28               	movlw	40
  3448   0015CC  ECE1  F00B         	call	_writeInstruction
  3449                           
  3450                           ;LCD_Eusart.c: 50: writeInstruction(0x08);
  3451   0015D0  0E08               	movlw	8
  3452   0015D2  ECE1  F00B         	call	_writeInstruction
  3453                           
  3454                           ;LCD_Eusart.c: 51: clearDisplay();
  3455   0015D6  ECB8  F00C         	call	_clearDisplay	;wreg free
  3456                           
  3457                           ;LCD_Eusart.c: 52: writeInstruction(0x06);
  3458   0015DA  0E06               	movlw	6
  3459   0015DC  ECE1  F00B         	call	_writeInstruction
  3460                           
  3461                           ;LCD_Eusart.c: 53: writeInstruction(0x0f);
  3462   0015E0  0E0F               	movlw	15
  3463   0015E2  ECE1  F00B         	call	_writeInstruction
  3464   0015E6  0012               	return		;funcret
  3465   0015E8                     __end_of_initLCD:
  3466                           	callstack 0
  3467                           
  3468 ;; *************** function _clearDisplay *****************
  3469 ;; Defined at:
  3470 ;;		line 32 in file "LCD_Eusart.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3484 ;;      Params:         0       0       0       0       0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3486 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3487 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3488 ;;Total ram usage:        1 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 8
  3491 ;; This function calls:
  3492 ;;		_writeInstruction
  3493 ;; This function is called by:
  3494 ;;		_initLCD
  3495 ;;		_createCharacter
  3496 ;;		_initMessage
  3497 ;;		_state_1
  3498 ;;		_state_2
  3499 ;;		_state_3
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text22
  3504   001970                     __ptext22:
  3505                           	callstack 0
  3506   001970                     _clearDisplay:
  3507                           	callstack 21
  3508                           
  3509                           ;LCD_Eusart.c: 33: writeInstruction(0x1);
  3510                           
  3511                           ;incstack = 0
  3512   001970  0E01               	movlw	1
  3513   001972  ECE1  F00B         	call	_writeInstruction
  3514                           
  3515                           ;LCD_Eusart.c: 34: _delay((unsigned long)((1600)*(8000000/4000000.0)));
  3516   001976  0E05               	movlw	5
  3517   001978  0100               	movlb	0	; () banked
  3518   00197A  6F62               	movwf	??_clearDisplay& (0+255),b
  3519   00197C  0E26               	movlw	38
  3520   00197E                     u3157:
  3521   00197E  2EE8               	decfsz	wreg,f,c
  3522   001980  D7FE               	bra	u3157
  3523   001982  2F62               	decfsz	??_clearDisplay& (0+255),f,b
  3524   001984  D7FC               	bra	u3157
  3525   001986  0000               	nop	
  3526   001988  0012               	return		;funcret
  3527   00198A                     __end_of_clearDisplay:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _writeInstruction *****************
  3531 ;; Defined at:
  3532 ;;		line 24 in file "LCD_Eusart.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  d               1    wreg     unsigned char 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  d               1    1[BANK0 ] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3549 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 7
  3553 ;; This function calls:
  3554 ;;		_enable
  3555 ;; This function is called by:
  3556 ;;		_clearDisplay
  3557 ;;		_initLCD
  3558 ;;		_createCharacter
  3559 ;;		_secondLineC
  3560 ;;		_shiftDRight
  3561 ;;		_shiftDLeft
  3562 ;;		_shiftCLeft
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text23
  3567   0017C2                     __ptext23:
  3568                           	callstack 0
  3569   0017C2                     _writeInstruction:
  3570                           	callstack 21
  3571                           
  3572                           ;incstack = 0
  3573                           ;writeInstruction@d stored from wreg
  3574   0017C2  0100               	movlb	0	; () banked
  3575   0017C4  6F61               	movwf	writeInstruction@d& (0+255),b
  3576                           
  3577                           ;LCD_Eusart.c: 25: LATA3 = 0;
  3578   0017C6  9689               	bcf	3977,3,c	;volatile
  3579                           
  3580                           ;LCD_Eusart.c: 26: LATD = (LATD & 0b00001111) | (d & 0b11110000);
  3581   0017C8  C061  F060         	movff	writeInstruction@d,??_writeInstruction
  3582   0017CC  0EF0               	movlw	240
  3583   0017CE  0100               	movlb	0	; () banked
  3584   0017D0  1760               	andwf	??_writeInstruction& (0+255),f,b
  3585   0017D2  508C               	movf	140,w,c	;volatile
  3586   0017D4  0B0F               	andlw	15
  3587   0017D6  1160               	iorwf	??_writeInstruction& (0+255),w,b
  3588   0017D8  6E8C               	movwf	140,c	;volatile
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;LCD_Eusart.c: 27: enable();
  3592   0017DA  EC2C  F00D         	call	_enable	;wreg free
  3593                           
  3594                           ;LCD_Eusart.c: 28: LATD = (LATD & 0b00001111) | (d<<4);
  3595   0017DE  C061  F060         	movff	writeInstruction@d,??_writeInstruction
  3596   0017E2  0100               	movlb	0	; () banked
  3597   0017E4  3B60               	swapf	??_writeInstruction& (0+255),f,b
  3598   0017E6  0EF0               	movlw	240
  3599   0017E8  1760               	andwf	??_writeInstruction& (0+255),f,b
  3600   0017EA  508C               	movf	140,w,c	;volatile
  3601   0017EC  0B0F               	andlw	15
  3602   0017EE  1160               	iorwf	??_writeInstruction& (0+255),w,b
  3603   0017F0  6E8C               	movwf	140,c	;volatile
  3604                           
  3605                           ;LCD_Eusart.c: 29: enable();
  3606   0017F2  EC2C  F00D         	call	_enable	;wreg free
  3607   0017F6  0012               	return		;funcret
  3608   0017F8                     __end_of_writeInstruction:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function _enable *****************
  3612 ;; Defined at:
  3613 ;;		line 10 in file "LCD_Eusart.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg
  3622 ;; Tracked objects:
  3623 ;;		On entry : 3F/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3630 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3631 ;;Total ram usage:        0 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; Hardware stack levels required when called: 6
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_writeData
  3638 ;;		_writeInstruction
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text24
  3643   001A58                     __ptext24:
  3644                           	callstack 0
  3645   001A58                     _enable:
  3646                           	callstack 21
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;LCD_Eusart.c: 11: LATA4 = 1;
  3650                           
  3651                           ;incstack = 0
  3652   001A58  8889               	bsf	3977,4,c	;volatile
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;LCD_Eusart.c: 12: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3656   001A5A  0E1A               	movlw	26
  3657   001A5C                     u3167:
  3658   001A5C  2EE8               	decfsz	wreg,f,c
  3659   001A5E  D7FE               	bra	u3167
  3660   001A60  D000               	nop2	
  3661                           
  3662                           ;LCD_Eusart.c: 13: LATA4 = 0;
  3663   001A62  9889               	bcf	3977,4,c	;volatile
  3664   001A64  0012               	return		;funcret
  3665   001A66                     __end_of_enable:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _ISR *****************
  3669 ;; Defined at:
  3670 ;;		line 116 in file "Lab6C.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3686 ;;      Temps:         11       0       0       0       0       0       0       0       0
  3687 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3688 ;;Total ram usage:       11 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 5
  3691 ;; This function calls:
  3692 ;;		_MeasureDist
  3693 ;;		___awdiv
  3694 ;;		___wmul
  3695 ;;		_antirebote
  3696 ;;		_conversion
  3697 ;;		_transmision
  3698 ;;		i2___lbmod
  3699 ;;		i2___lwdiv
  3700 ;;		i2_assignRGB
  3701 ;;		i2_clearDisplay
  3702 ;;		i2_deleteChar
  3703 ;;		i2_printMessage
  3704 ;;		i2_printNumber
  3705 ;;		i2_secondLineC
  3706 ;; This function is called by:
  3707 ;;		Interrupt level 2
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	intcode
  3712   000008                     __pintcode:
  3713                           	callstack 0
  3714   000008                     _ISR:
  3715                           	callstack 19
  3716                           
  3717                           ;incstack = 0
  3718   000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3719   00000A  ED5F  F004         	call	int_func,f	;refresh shadow registers
  3720                           
  3721                           	psect	intcode_body
  3722   0008BE                     __pintcode_body:
  3723                           	callstack 19
  3724   0008BE                     int_func:
  3725                           	callstack 19
  3726   0008BE  0006               	pop		; remove dummy address from shadow register refresh
  3727   0008C0  CFE9 F024          	movff	fsr0l,??_ISR+1
  3728   0008C4  CFEA F025          	movff	fsr0h,??_ISR+2
  3729   0008C8  CFD9 F026          	movff	fsr2l,??_ISR+3
  3730   0008CC  CFDA F027          	movff	fsr2h,??_ISR+4
  3731   0008D0  CFF3 F028          	movff	prodl,??_ISR+5
  3732   0008D4  CFF4 F029          	movff	prodh,??_ISR+6
  3733   0008D8  CFF6 F02A          	movff	tblptrl,??_ISR+7
  3734   0008DC  CFF7 F02B          	movff	tblptrh,??_ISR+8
  3735   0008E0  CFF8 F02C          	movff	tblptru,??_ISR+9
  3736   0008E4  CFF5 F02D          	movff	tablat,??_ISR+10
  3737                           
  3738                           ;Lab6C.c: 117: if(TMR0IF == 1){
  3739   0008E8  A4F2               	btfss	4082,2,c	;volatile
  3740   0008EA  D046               	goto	i2l271
  3741                           
  3742                           ;Lab6C.c: 118: TMR0IF = 0;
  3743   0008EC  94F2               	bcf	4082,2,c	;volatile
  3744                           
  3745                           ;Lab6C.c: 119: TMR0 = 3036;
  3746   0008EE  0E0B               	movlw	11
  3747   0008F0  6ED7               	movwf	215,c	;volatile
  3748   0008F2  0EDC               	movlw	220
  3749   0008F4  6ED6               	movwf	214,c	;volatile
  3750                           
  3751                           ;Lab6C.c: 120: LATA1 ^= 1;
  3752   0008F6  7289               	btg	3977,1,c	;volatile
  3753                           
  3754                           ;Lab6C.c: 122: pot = conversion(0);
  3755   0008F8  0E00               	movlw	0
  3756   0008FA  ECF8  F00C         	call	_conversion
  3757   0008FE  6E23               	movwf	??_ISR^0,c
  3758   000900  5023               	movf	??_ISR^0,w,c
  3759   000902  6E30               	movwf	_pot^0,c
  3760   000904  6A31               	clrf	(_pot+1)^0,c
  3761                           
  3762                           ;Lab6C.c: 124: dist = MeasureDist();
  3763   000906  EC93  F00A         	call	_MeasureDist	;wreg free
  3764   00090A  6E33               	movwf	_dist^0,c
  3765                           
  3766                           ;Lab6C.c: 125: transmision(pwm_value,dist);
  3767   00090C  C02E  F01F         	movff	_pwm_value,transmision@d
  3768   000910  C02F  F020         	movff	_pwm_value+1,transmision@d+1
  3769   000914  C033  F021         	movff	_dist,transmision@e
  3770   000918  6A22               	clrf	(transmision@e+1)^0,c
  3771   00091A  ECA8  F00B         	call	_transmision	;wreg free
  3772                           
  3773                           ;Lab6C.c: 126: if(!rx_e){
  3774   00091E  5034               	movf	_rx_e^0,w,c
  3775   000920  A4D8               	btfss	status,2,c
  3776   000922  D01A               	goto	i2l3041
  3777                           
  3778                           ;Lab6C.c: 127: CCPR1L=pot;
  3779   000924  C030  FFBE         	movff	_pot,4030	;volatile
  3780                           
  3781                           ;Lab6C.c: 128: pwm_value=(pot*100/255);
  3782   000928  C030  F001         	movff	_pot,___wmul@multiplier
  3783   00092C  C031  F002         	movff	_pot+1,___wmul@multiplier+1
  3784   000930  0E00               	movlw	0
  3785   000932  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3786   000934  0E64               	movlw	100
  3787   000936  6E03               	movwf	___wmul@multiplicand^0,c
  3788   000938  EC87  F00C         	call	___wmul	;wreg free
  3789   00093C  C001  F007         	movff	?___wmul,i2___lwdiv@dividend
  3790   000940  C002  F008         	movff	?___wmul+1,i2___lwdiv@dividend+1
  3791   000944  0E00               	movlw	0
  3792   000946  6E0A               	movwf	(i2___lwdiv@divisor+1)^0,c
  3793   000948  6809               	setf	i2___lwdiv@divisor^0,c
  3794   00094A  EC1D  F00B         	call	i2___lwdiv	;wreg free
  3795   00094E  C007  F02E         	movff	?i2___lwdiv,_pwm_value
  3796   000952  C008  F02F         	movff	?i2___lwdiv+1,_pwm_value+1
  3797                           
  3798                           ;Lab6C.c: 129: }
  3799   000956  D161               	goto	i2l355
  3800   000958                     i2l3041:
  3801                           
  3802                           ;Lab6C.c: 130: else{;Lab6C.c: 131: pwm_value=(CCPR1L*100/255);
  3803   000958  50BE               	movf	190,w,c	;volatile
  3804   00095A  0D64               	mullw	100
  3805   00095C  CFF3 F001          	movff	prodl,___awdiv@dividend
  3806   000960  CFF4 F002          	movff	prodh,___awdiv@dividend+1
  3807   000964  0E00               	movlw	0
  3808   000966  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3809   000968  6803               	setf	___awdiv@divisor^0,c
  3810   00096A  ECDC  F009         	call	___awdiv	;wreg free
  3811   00096E  C001  F02E         	movff	?___awdiv,_pwm_value
  3812   000972  C002  F02F         	movff	?___awdiv+1,_pwm_value+1
  3813                           
  3814                           ;Lab6C.c: 132: };Lab6C.c: 133: }else if(RCIF){
  3815   000976  D151               	goto	i2l355
  3816   000978                     i2l271:
  3817   000978  AA9E               	btfss	3998,5,c	;volatile
  3818   00097A  D091               	goto	i2l275
  3819                           
  3820                           ;Lab6C.c: 134: RCIF = 0;
  3821   00097C  9A9E               	bcf	3998,5,c	;volatile
  3822                           
  3823                           ;Lab6C.c: 135: if(RCREG == 'z' || RCREG == 'Z'){
  3824   00097E  0E7A               	movlw	122
  3825   000980  18AE               	xorwf	174,w,c
  3826   000982  B4D8               	btfsc	status,2,c
  3827   000984  D004               	goto	i2u215_40
  3828   000986  0E5A               	movlw	90
  3829   000988  18AE               	xorwf	174,w,c
  3830   00098A  A4D8               	btfss	status,2,c
  3831   00098C  D004               	goto	i2l3051
  3832   00098E                     i2u215_40:
  3833                           
  3834                           ;Lab6C.c: 136: rx_e = 1;
  3835   00098E  0E01               	movlw	1
  3836   000990  6E34               	movwf	_rx_e^0,c
  3837                           
  3838                           ;Lab6C.c: 137: CCPR1L= 0;
  3839   000992  0E00               	movlw	0
  3840   000994  D02F               	goto	L4
  3841   000996                     i2l3051:
  3842                           
  3843                           ;Lab6C.c: 139: else if(RCREG == 'x' || RCREG == 'X'){
  3844   000996  0E78               	movlw	120
  3845   000998  18AE               	xorwf	174,w,c
  3846   00099A  B4D8               	btfsc	status,2,c
  3847   00099C  D004               	goto	i2u217_40
  3848   00099E  0E58               	movlw	88
  3849   0009A0  18AE               	xorwf	174,w,c
  3850   0009A2  A4D8               	btfss	status,2,c
  3851   0009A4  D004               	goto	i2l3057
  3852   0009A6                     i2u217_40:
  3853                           
  3854                           ;Lab6C.c: 140: rx_e = 1;
  3855   0009A6  0E01               	movlw	1
  3856   0009A8  6E34               	movwf	_rx_e^0,c
  3857                           
  3858                           ;Lab6C.c: 141: CCPR1L= 51 ;
  3859   0009AA  0E33               	movlw	51
  3860   0009AC  D023               	goto	L4
  3861   0009AE                     i2l3057:
  3862                           
  3863                           ;Lab6C.c: 143: else if(RCREG == 'c' || RCREG == 'C'){
  3864   0009AE  0E63               	movlw	99
  3865   0009B0  18AE               	xorwf	174,w,c
  3866   0009B2  B4D8               	btfsc	status,2,c
  3867   0009B4  D004               	goto	i2u219_40
  3868   0009B6  0E43               	movlw	67
  3869   0009B8  18AE               	xorwf	174,w,c
  3870   0009BA  A4D8               	btfss	status,2,c
  3871   0009BC  D004               	goto	i2l3063
  3872   0009BE                     i2u219_40:
  3873                           
  3874                           ;Lab6C.c: 144: rx_e = 1;
  3875   0009BE  0E01               	movlw	1
  3876   0009C0  6E34               	movwf	_rx_e^0,c
  3877                           
  3878                           ;Lab6C.c: 145: CCPR1L= 102 ;
  3879   0009C2  0E66               	movlw	102
  3880   0009C4  D017               	goto	L4
  3881   0009C6                     i2l3063:
  3882                           
  3883                           ;Lab6C.c: 147: else if(RCREG == 'v' || RCREG == 'V'){
  3884   0009C6  0E76               	movlw	118
  3885   0009C8  18AE               	xorwf	174,w,c
  3886   0009CA  B4D8               	btfsc	status,2,c
  3887   0009CC  D004               	goto	i2u221_40
  3888   0009CE  0E56               	movlw	86
  3889   0009D0  18AE               	xorwf	174,w,c
  3890   0009D2  A4D8               	btfss	status,2,c
  3891   0009D4  D004               	goto	i2l3069
  3892   0009D6                     i2u221_40:
  3893                           
  3894                           ;Lab6C.c: 148: rx_e = 1;
  3895   0009D6  0E01               	movlw	1
  3896   0009D8  6E34               	movwf	_rx_e^0,c
  3897                           
  3898                           ;Lab6C.c: 149: CCPR1L= 153 ;
  3899   0009DA  0E99               	movlw	153
  3900   0009DC  D00B               	goto	L4
  3901   0009DE                     i2l3069:
  3902                           
  3903                           ;Lab6C.c: 151: else if(RCREG == 'b' || RCREG == 'B'){
  3904   0009DE  0E62               	movlw	98
  3905   0009E0  18AE               	xorwf	174,w,c
  3906   0009E2  B4D8               	btfsc	status,2,c
  3907   0009E4  D004               	goto	i2u223_40
  3908   0009E6  0E42               	movlw	66
  3909   0009E8  18AE               	xorwf	174,w,c
  3910   0009EA  A4D8               	btfss	status,2,c
  3911   0009EC  D005               	goto	i2l3075
  3912   0009EE                     i2u223_40:
  3913                           
  3914                           ;Lab6C.c: 152: rx_e = 1;
  3915   0009EE  0E01               	movlw	1
  3916   0009F0  6E34               	movwf	_rx_e^0,c
  3917                           
  3918                           ;Lab6C.c: 153: CCPR1L= 204 ;
  3919   0009F2  0ECC               	movlw	204
  3920   0009F4                     L4:
  3921   0009F4  6EBE               	movwf	190,c	;volatile
  3922                           
  3923                           ;Lab6C.c: 154: }
  3924   0009F6  D111               	goto	i2l355
  3925   0009F8                     i2l3075:
  3926                           
  3927                           ;Lab6C.c: 155: else if(RCREG == 'n' || RCREG == 'N'){
  3928   0009F8  0E6E               	movlw	110
  3929   0009FA  18AE               	xorwf	174,w,c
  3930   0009FC  B4D8               	btfsc	status,2,c
  3931   0009FE  D004               	goto	i2u225_40
  3932   000A00  0E4E               	movlw	78
  3933   000A02  18AE               	xorwf	174,w,c
  3934   000A04  A4D8               	btfss	status,2,c
  3935   000A06  D004               	goto	i2l3083
  3936   000A08                     i2u225_40:
  3937                           
  3938                           ;Lab6C.c: 156: rx_e = 1;
  3939   000A08  0E01               	movlw	1
  3940   000A0A  6E34               	movwf	_rx_e^0,c
  3941                           
  3942                           ;Lab6C.c: 157: CCPR1L= 255 ;
  3943   000A0C  68BE               	setf	190,c	;volatile
  3944                           
  3945                           ;Lab6C.c: 158: }
  3946   000A0E  D105               	goto	i2l355
  3947   000A10                     i2l3083:
  3948                           
  3949                           ;Lab6C.c: 159: else if(RCREG == 'e' || RCREG == 'E'){
  3950   000A10  0E65               	movlw	101
  3951   000A12  18AE               	xorwf	174,w,c
  3952   000A14  B4D8               	btfsc	status,2,c
  3953   000A16  D004               	goto	i2u227_40
  3954   000A18  0E45               	movlw	69
  3955   000A1A  18AE               	xorwf	174,w,c
  3956   000A1C  A4D8               	btfss	status,2,c
  3957   000A1E  D014               	goto	i2l3101
  3958   000A20                     i2u227_40:
  3959                           
  3960                           ;Lab6C.c: 160: LATE = 0b11111100;
  3961   000A20  0EFC               	movlw	252
  3962   000A22  6E8D               	movwf	141,c	;volatile
  3963                           
  3964                           ;Lab6C.c: 161: CCPR1L = 0;
  3965   000A24  0E00               	movlw	0
  3966   000A26  6EBE               	movwf	190,c	;volatile
  3967                           
  3968                           ;Lab6C.c: 162: clearDisplay();
  3969   000A28  ECEC  F00C         	call	i2_clearDisplay	;wreg free
  3970                           
  3971                           ;Lab6C.c: 163: printMessage("    Emergency   ");
  3972   000A2C  0E3E               	movlw	low STR_7
  3973   000A2E  6E1F               	movwf	i2printMessage@string^0,c
  3974   000A30  EC45  F00D         	call	i2_printMessage	;wreg free
  3975                           
  3976                           ;Lab6C.c: 164: secondLineC(0);
  3977   000A34  0E00               	movlw	0
  3978   000A36  EC3A  F00D         	call	i2_secondLineC
  3979                           
  3980                           ;Lab6C.c: 165: printMessage("      Stop      ");
  3981   000A3A  0E0B               	movlw	low STR_8
  3982   000A3C  6E1F               	movwf	i2printMessage@string^0,c
  3983   000A3E  EC45  F00D         	call	i2_printMessage	;wreg free
  3984                           
  3985                           ;Lab6C.c: 166: TMR0ON = 0;
  3986   000A42  9ED5               	bcf	4053,7,c	;volatile
  3987                           
  3988                           ;Lab6C.c: 167: CREN = 0;
  3989   000A44  98AB               	bcf	4011,4,c	;volatile
  3990   000A46                     i2l303:
  3991   000A46  D7FF               	goto	i2l303
  3992   000A48                     i2l3101:
  3993   000A48  0E72               	movlw	114
  3994   000A4A  18AE               	xorwf	174,w,c
  3995   000A4C  B4D8               	btfsc	status,2,c
  3996   000A4E  D004               	goto	i2u229_40
  3997   000A50  0E52               	movlw	82
  3998   000A52  18AE               	xorwf	174,w,c
  3999   000A54  A4D8               	btfss	status,2,c
  4000   000A56  D0E1               	goto	i2l355
  4001   000A58                     i2u229_40:
  4002                           
  4003                           ;Lab6C.c: 170: if(estado == 2){
  4004   000A58  0E02               	movlw	2
  4005   000A5A  0100               	movlb	0	; () banked
  4006   000A5C  1981               	xorwf	_estado& (0+255),w,b
  4007   000A5E  A4D8               	btfss	status,2,c
  4008   000A60  D0DC               	goto	i2l355
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;Lab6C.c: 171: contador = 0;
  4012   000A62  0E00               	movlw	0
  4013   000A64  6F9B               	movwf	_contador& (0+255),b
  4014                           
  4015                           ;Lab6C.c: 172: LATD = 0;
  4016   000A66  0E00               	movlw	0
  4017   000A68  6E8C               	movwf	140,c	;volatile
  4018                           
  4019                           ;Lab6C.c: 173: LATE = 0b00000101;
  4020   000A6A  0E05               	movlw	5
  4021   000A6C  6E8D               	movwf	141,c	;volatile
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;Lab6C.c: 174: secondLineC(9);
  4025   000A6E  0E09               	movlw	9
  4026   000A70  EC3A  F00D         	call	i2_secondLineC
  4027                           
  4028                           ;Lab6C.c: 175: if(valor < 10){
  4029   000A74  0E0A               	movlw	10
  4030   000A76  6036               	cpfslt	_valor^0,c
  4031   000A78  D00C               	goto	i2l3115
  4032                           
  4033                           ;Lab6C.c: 176: printNumber(0);
  4034   000A7A  0E00               	movlw	0
  4035   000A7C  6E20               	movwf	(i2printNumber@number+1)^0,c
  4036   000A7E  0E00               	movlw	0
  4037   000A80  6E1F               	movwf	i2printNumber@number^0,c
  4038   000A82  EC0C  F00D         	call	i2_printNumber	;wreg free
  4039                           
  4040                           ;Lab6C.c: 177: printNumber(valor);
  4041   000A86  C036  F01F         	movff	_valor,i2printNumber@number
  4042   000A8A  6A20               	clrf	(i2printNumber@number+1)^0,c
  4043   000A8C  EC0C  F00D         	call	i2_printNumber	;wreg free
  4044                           
  4045                           ;Lab6C.c: 178: }
  4046   000A90  D0C4               	goto	i2l355
  4047   000A92                     i2l3115:
  4048                           
  4049                           ;Lab6C.c: 179: else printNumber(valor);
  4050   000A92  C036  F01F         	movff	_valor,i2printNumber@number
  4051   000A96  6A20               	clrf	(i2printNumber@number+1)^0,c
  4052   000A98  EC0C  F00D         	call	i2_printNumber	;wreg free
  4053   000A9C  D0BE               	goto	i2l355
  4054   000A9E                     i2l275:
  4055   000A9E  A0F2               	btfss	4082,0,c	;volatile
  4056   000AA0  D0BC               	goto	i2l355
  4057                           
  4058                           ;Lab6C.c: 183: if(PORTB != 0b11110000){
  4059   000AA2  0EF0               	movlw	240
  4060   000AA4  1881               	xorwf	129,w,c	;volatile
  4061   000AA6  B4D8               	btfsc	status,2,c
  4062   000AA8  D0B5               	goto	i2l350
  4063                           
  4064                           ;Lab6C.c: 184: tecla = 100;
  4065   000AAA  0E64               	movlw	100
  4066   000AAC  0100               	movlb	0	; () banked
  4067   000AAE  6F9A               	movwf	_tecla& (0+255),b
  4068                           
  4069                           ;Lab6C.c: 185: LATB = 0b11111110;
  4070   000AB0  0EFE               	movlw	254
  4071   000AB2  6E8A               	movwf	138,c	;volatile
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;Lab6C.c: 186: if(RB4==0){
  4075   000AB4  B881               	btfsc	3969,4,c	;volatile
  4076   000AB6  D004               	goto	i2l316
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;Lab6C.c: 187: antirebote();
  4080   000AB8  ECD2  F00C         	call	_antirebote	;wreg free
  4081                           
  4082                           ;Lab6C.c: 188: tecla = 1;
  4083   000ABC  0E01               	movlw	1
  4084   000ABE  D099               	goto	L14
  4085   000AC0                     i2l316:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;Lab6C.c: 190: else if(RB5==0){
  4089   000AC0  BA81               	btfsc	3969,5,c	;volatile
  4090   000AC2  D004               	goto	i2l318
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;Lab6C.c: 191: antirebote();
  4094   000AC4  ECD2  F00C         	call	_antirebote	;wreg free
  4095                           
  4096                           ;Lab6C.c: 192: tecla = 2;
  4097   000AC8  0E02               	movlw	2
  4098   000ACA  D093               	goto	L14
  4099   000ACC                     i2l318:
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;Lab6C.c: 194: else if(RB6==0){
  4103   000ACC  BC81               	btfsc	3969,6,c	;volatile
  4104   000ACE  D004               	goto	i2l320
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;Lab6C.c: 195: antirebote();
  4108   000AD0  ECD2  F00C         	call	_antirebote	;wreg free
  4109                           
  4110                           ;Lab6C.c: 196: tecla = 3;
  4111   000AD4  0E03               	movlw	3
  4112   000AD6  D08D               	goto	L14
  4113   000AD8                     i2l320:
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;Lab6C.c: 198: else if(RB7==0){
  4117   000AD8  BE81               	btfsc	3969,7,c	;volatile
  4118   000ADA  D014               	goto	i2l3149
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;Lab6C.c: 199: LATE = 0b11111100;
  4122   000ADC  0EFC               	movlw	252
  4123   000ADE  6E8D               	movwf	141,c	;volatile
  4124                           
  4125                           ;Lab6C.c: 200: CCPR1L=0;
  4126   000AE0  0E00               	movlw	0
  4127   000AE2  6EBE               	movwf	190,c	;volatile
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;Lab6C.c: 201: clearDisplay();
  4131   000AE4  ECEC  F00C         	call	i2_clearDisplay	;wreg free
  4132                           
  4133                           ;Lab6C.c: 202: printMessage("    Emergency   ");
  4134   000AE8  0E3E               	movlw	low STR_7
  4135   000AEA  6E1F               	movwf	i2printMessage@string^0,c
  4136   000AEC  EC45  F00D         	call	i2_printMessage	;wreg free
  4137                           
  4138                           ;Lab6C.c: 203: secondLineC(0);
  4139   000AF0  0E00               	movlw	0
  4140   000AF2  EC3A  F00D         	call	i2_secondLineC
  4141                           
  4142                           ;Lab6C.c: 204: printMessage("      Stop      ");
  4143   000AF6  0E0B               	movlw	low STR_8
  4144   000AF8  6E1F               	movwf	i2printMessage@string^0,c
  4145   000AFA  EC45  F00D         	call	i2_printMessage	;wreg free
  4146                           
  4147                           ;Lab6C.c: 205: TMR0ON = 0;
  4148   000AFE  9ED5               	bcf	4053,7,c	;volatile
  4149                           
  4150                           ;Lab6C.c: 206: CREN = 0;
  4151   000B00  98AB               	bcf	4011,4,c	;volatile
  4152   000B02                     i2l323:
  4153   000B02  D7FF               	goto	i2l323
  4154   000B04                     i2l3149:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;Lab6C.c: 209: else{;Lab6C.c: 210: LATB = 0b11111101;
  4158   000B04  0EFD               	movlw	253
  4159   000B06  6E8A               	movwf	138,c	;volatile
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;Lab6C.c: 211: if(RB4==0){
  4163   000B08  B881               	btfsc	3969,4,c	;volatile
  4164   000B0A  D004               	goto	i2l327
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;Lab6C.c: 212: antirebote();
  4168   000B0C  ECD2  F00C         	call	_antirebote	;wreg free
  4169                           
  4170                           ;Lab6C.c: 213: tecla = 4;
  4171   000B10  0E04               	movlw	4
  4172   000B12  D06F               	goto	L14
  4173   000B14                     i2l327:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;Lab6C.c: 215: else if(RB5==0){
  4177   000B14  BA81               	btfsc	3969,5,c	;volatile
  4178   000B16  D004               	goto	i2l329
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;Lab6C.c: 216: antirebote();
  4182   000B18  ECD2  F00C         	call	_antirebote	;wreg free
  4183                           
  4184                           ;Lab6C.c: 217: tecla = 5;
  4185   000B1C  0E05               	movlw	5
  4186   000B1E  D069               	goto	L14
  4187   000B20                     i2l329:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;Lab6C.c: 219: else if(RB6==0){
  4191   000B20  BC81               	btfsc	3969,6,c	;volatile
  4192   000B22  D004               	goto	i2l331
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;Lab6C.c: 220: antirebote();
  4196   000B24  ECD2  F00C         	call	_antirebote	;wreg free
  4197                           
  4198                           ;Lab6C.c: 221: tecla = 6;
  4199   000B28  0E06               	movlw	6
  4200   000B2A  D063               	goto	L14
  4201   000B2C                     i2l331:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;Lab6C.c: 223: else if(RB7==0){
  4205   000B2C  BE81               	btfsc	3969,7,c	;volatile
  4206   000B2E  D013               	goto	i2l3175
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;Lab6C.c: 224: antirebote();
  4210   000B30  ECD2  F00C         	call	_antirebote	;wreg free
  4211                           
  4212                           ;Lab6C.c: 225: if(estado == 2){
  4213   000B34  0E02               	movlw	2
  4214   000B36  0100               	movlb	0	; () banked
  4215   000B38  1981               	xorwf	_estado& (0+255),w,b
  4216   000B3A  A4D8               	btfss	status,2,c
  4217   000B3C  D06B               	goto	i2l350
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;Lab6C.c: 226: estado = 3;
  4221   000B3E  0E03               	movlw	3
  4222   000B40  6F81               	movwf	_estado& (0+255),b
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;Lab6C.c: 227: LATD = valor%10;
  4226   000B42  0E0A               	movlw	10
  4227   000B44  6E01               	movwf	i2___lbmod@divisor^0,c
  4228   000B46  5036               	movf	_valor^0,w,c
  4229   000B48  EC72  F00C         	call	i2___lbmod
  4230   000B4C  6E8C               	movwf	140,c	;volatile
  4231                           
  4232                           ;Lab6C.c: 228: assignRGB(valor);
  4233   000B4E  5036               	movf	_valor^0,w,c
  4234   000B50  EC59  F00A         	call	i2_assignRGB
  4235   000B54  D05F               	goto	i2l350
  4236   000B56                     i2l3175:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;Lab6C.c: 231: else{;Lab6C.c: 232: LATB = 0b11111011;
  4240   000B56  0EFB               	movlw	251
  4241   000B58  6E8A               	movwf	138,c	;volatile
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;Lab6C.c: 233: if(RB4==0){
  4245   000B5A  B881               	btfsc	3969,4,c	;volatile
  4246   000B5C  D004               	goto	i2l336
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;Lab6C.c: 234: antirebote();
  4250   000B5E  ECD2  F00C         	call	_antirebote	;wreg free
  4251                           
  4252                           ;Lab6C.c: 235: tecla = 7;
  4253   000B62  0E07               	movlw	7
  4254   000B64  D046               	goto	L14
  4255   000B66                     i2l336:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;Lab6C.c: 237: else if(RB5==0){
  4259   000B66  BA81               	btfsc	3969,5,c	;volatile
  4260   000B68  D004               	goto	i2l338
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;Lab6C.c: 238: antirebote();
  4264   000B6A  ECD2  F00C         	call	_antirebote	;wreg free
  4265                           
  4266                           ;Lab6C.c: 239: tecla = 8;
  4267   000B6E  0E08               	movlw	8
  4268   000B70  D040               	goto	L14
  4269   000B72                     i2l338:
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;Lab6C.c: 241: else if(RB6==0){
  4273   000B72  BC81               	btfsc	3969,6,c	;volatile
  4274   000B74  D004               	goto	i2l340
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;Lab6C.c: 242: antirebote();
  4278   000B76  ECD2  F00C         	call	_antirebote	;wreg free
  4279                           
  4280                           ;Lab6C.c: 243: tecla = 9;
  4281   000B7A  0E09               	movlw	9
  4282   000B7C  D03A               	goto	L14
  4283   000B7E                     i2l340:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;Lab6C.c: 245: else if(RB7==0){
  4287   000B7E  BE81               	btfsc	3969,7,c	;volatile
  4288   000B80  D025               	goto	i2l3205
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;Lab6C.c: 246: antirebote();
  4292   000B82  ECD2  F00C         	call	_antirebote	;wreg free
  4293                           
  4294                           ;Lab6C.c: 247: if(estado == 2){
  4295   000B86  0E02               	movlw	2
  4296   000B88  0100               	movlb	0	; () banked
  4297   000B8A  1981               	xorwf	_estado& (0+255),w,b
  4298   000B8C  A4D8               	btfss	status,2,c
  4299   000B8E  D042               	goto	i2l350
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;Lab6C.c: 248: contador = 0;
  4303   000B90  0E00               	movlw	0
  4304   000B92  6F9B               	movwf	_contador& (0+255),b
  4305                           
  4306                           ;Lab6C.c: 249: LATD = 0;
  4307   000B94  0E00               	movlw	0
  4308   000B96  6E8C               	movwf	140,c	;volatile
  4309                           
  4310                           ;Lab6C.c: 250: LATE = 0b00000101;
  4311   000B98  0E05               	movlw	5
  4312   000B9A  6E8D               	movwf	141,c	;volatile
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;Lab6C.c: 251: secondLineC(9);
  4316   000B9C  0E09               	movlw	9
  4317   000B9E  EC3A  F00D         	call	i2_secondLineC
  4318                           
  4319                           ;Lab6C.c: 252: if(valor < 10){
  4320   000BA2  0E0A               	movlw	10
  4321   000BA4  6036               	cpfslt	_valor^0,c
  4322   000BA6  D00C               	goto	i2l3203
  4323                           
  4324                           ;Lab6C.c: 253: printNumber(0);
  4325   000BA8  0E00               	movlw	0
  4326   000BAA  6E20               	movwf	(i2printNumber@number+1)^0,c
  4327   000BAC  0E00               	movlw	0
  4328   000BAE  6E1F               	movwf	i2printNumber@number^0,c
  4329   000BB0  EC0C  F00D         	call	i2_printNumber	;wreg free
  4330                           
  4331                           ;Lab6C.c: 254: printNumber(valor);
  4332   000BB4  C036  F01F         	movff	_valor,i2printNumber@number
  4333   000BB8  6A20               	clrf	(i2printNumber@number+1)^0,c
  4334   000BBA  EC0C  F00D         	call	i2_printNumber	;wreg free
  4335                           
  4336                           ;Lab6C.c: 255: }
  4337   000BBE  D02A               	goto	i2l350
  4338   000BC0                     i2l3203:
  4339                           
  4340                           ;Lab6C.c: 256: else printNumber(valor);
  4341   000BC0  C036  F01F         	movff	_valor,i2printNumber@number
  4342   000BC4  6A20               	clrf	(i2printNumber@number+1)^0,c
  4343   000BC6  EC0C  F00D         	call	i2_printNumber	;wreg free
  4344   000BCA  D024               	goto	i2l350
  4345   000BCC                     i2l3205:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;Lab6C.c: 259: else{;Lab6C.c: 260: LATB = 0b11110111;
  4349   000BCC  0EF7               	movlw	247
  4350   000BCE  6E8A               	movwf	138,c	;volatile
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;Lab6C.c: 261: if(RB4==0){
  4354   000BD0  B881               	btfsc	3969,4,c	;volatile
  4355   000BD2  D004               	goto	i2l347
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;Lab6C.c: 262: antirebote();
  4359   000BD4  ECD2  F00C         	call	_antirebote	;wreg free
  4360                           
  4361                           ;Lab6C.c: 263: LATA2 ^= 1;
  4362   000BD8  7489               	btg	3977,2,c	;volatile
  4363                           
  4364                           ;Lab6C.c: 264: }
  4365   000BDA  D01C               	goto	i2l350
  4366   000BDC                     i2l347:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;Lab6C.c: 265: else if(RB5==0){
  4370   000BDC  BA81               	btfsc	3969,5,c	;volatile
  4371   000BDE  D004               	goto	i2l349
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;Lab6C.c: 266: antirebote();
  4375   000BE0  ECD2  F00C         	call	_antirebote	;wreg free
  4376                           
  4377                           ;Lab6C.c: 267: tecla = 0;
  4378   000BE4  0E00               	movlw	0
  4379   000BE6  D005               	goto	L14
  4380   000BE8                     i2l349:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;Lab6C.c: 269: else if(RB6==0){
  4384   000BE8  BC81               	btfsc	3969,6,c	;volatile
  4385   000BEA  D006               	goto	i2l351
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;Lab6C.c: 270: antirebote();
  4389   000BEC  ECD2  F00C         	call	_antirebote	;wreg free
  4390                           
  4391                           ;Lab6C.c: 271: tecla = 10;
  4392   000BF0  0E0A               	movlw	10
  4393   000BF2                     L14:
  4394   000BF2  0100               	movlb	0	; () banked
  4395   000BF4  6F9A               	movwf	_tecla& (0+255),b
  4396                           
  4397                           ;Lab6C.c: 272: }
  4398   000BF6  D00E               	goto	i2l350
  4399   000BF8                     i2l351:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;Lab6C.c: 273: else if(RB7==0){
  4403   000BF8  BE81               	btfsc	3969,7,c	;volatile
  4404   000BFA  D00C               	goto	i2l350
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;Lab6C.c: 274: antirebote();
  4408   000BFC  ECD2  F00C         	call	_antirebote	;wreg free
  4409                           
  4410                           ;Lab6C.c: 275: if(estado == 1 && nDig > 0){
  4411   000C00  0100               	movlb	0	; () banked
  4412   000C02  0581               	decf	_estado& (0+255),w,b
  4413   000C04  A4D8               	btfss	status,2,c
  4414   000C06  D006               	goto	i2l350
  4415                           
  4416                           ; BSR set to: 0
  4417   000C08  5032               	movf	_nDig^0,w,c
  4418   000C0A  B4D8               	btfsc	status,2,c
  4419   000C0C  D003               	goto	i2l350
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;Lab6C.c: 276: deleteChar();
  4423   000C0E  EC1D  F00D         	call	i2_deleteChar	;wreg free
  4424                           
  4425                           ;Lab6C.c: 277: nDig -= 1;
  4426   000C12  0632               	decf	_nDig^0,f,c
  4427   000C14                     i2l350:
  4428                           
  4429                           ;Lab6C.c: 278: };Lab6C.c: 279: };Lab6C.c: 280: };Lab6C.c: 281: };Lab6C.c: 282: };Lab6C.c
      +                          : 283: };Lab6C.c: 284: LATB = 0b11110000;
  4430                           
  4431                           ; BSR set to: 0
  4432   000C14  0EF0               	movlw	240
  4433   000C16  6E8A               	movwf	138,c	;volatile
  4434                           
  4435                           ;Lab6C.c: 285: RBIF = 0;
  4436   000C18  90F2               	bcf	4082,0,c	;volatile
  4437   000C1A                     i2l355:
  4438   000C1A  C02D  FFF5         	movff	??_ISR+10,tablat
  4439   000C1E  C02C  FFF8         	movff	??_ISR+9,tblptru
  4440   000C22  C02B  FFF7         	movff	??_ISR+8,tblptrh
  4441   000C26  C02A  FFF6         	movff	??_ISR+7,tblptrl
  4442   000C2A  C029  FFF4         	movff	??_ISR+6,prodh
  4443   000C2E  C028  FFF3         	movff	??_ISR+5,prodl
  4444   000C32  C027  FFDA         	movff	??_ISR+4,fsr2h
  4445   000C36  C026  FFD9         	movff	??_ISR+3,fsr2l
  4446   000C3A  C025  FFEA         	movff	??_ISR+2,fsr0h
  4447   000C3E  C024  FFE9         	movff	??_ISR+1,fsr0l
  4448   000C42  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4449   000C44  0011               	retfie		f
  4450   000C46                     __end_of_ISR:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function i2_secondLineC *****************
  4454 ;; Defined at:
  4455 ;;		line 95 in file "LCD_Eusart.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  pos             1    wreg     unsigned char 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  pos             1    2[COMRAM] unsigned char 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0
  4470 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4472 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4473 ;;Total ram usage:        1 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; Hardware stack levels required when called: 2
  4476 ;; This function calls:
  4477 ;;		i2_writeInstruction
  4478 ;; This function is called by:
  4479 ;;		_ISR
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text26
  4484   001A74                     __ptext26:
  4485                           	callstack 0
  4486   001A74                     i2_secondLineC:
  4487                           	callstack 21
  4488                           
  4489                           ;incstack = 0
  4490                           ;i2secondLineC@pos stored from wreg
  4491   001A74  6E03               	movwf	i2secondLineC@pos^0,c
  4492                           
  4493                           ;LCD_Eusart.c: 96: writeInstruction(0xc0 + pos);
  4494   001A76  5003               	movf	i2secondLineC@pos^0,w,c
  4495   001A78  0FC0               	addlw	192
  4496   001A7A  EC2C  F00C         	call	i2_writeInstruction
  4497   001A7E  0012               	return		;funcret
  4498   001A80                     __end_ofi2_secondLineC:
  4499                           	callstack 0
  4500                           
  4501 ;; *************** function i2_printNumber *****************
  4502 ;; Defined at:
  4503 ;;		line 72 in file "LCD_Eusart.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  number          2   30[COMRAM] int 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4517 ;;      Params:         2       0       0       0       0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4521 ;;Total ram usage:        2 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 4
  4524 ;; This function calls:
  4525 ;;		i2_printf
  4526 ;; This function is called by:
  4527 ;;		_ISR
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text27
  4532   001A18                     __ptext27:
  4533                           	callstack 0
  4534   001A18                     i2_printNumber:
  4535                           	callstack 19
  4536                           
  4537                           ;LCD_Eusart.c: 73: printf("%d", number);
  4538                           
  4539                           ;incstack = 0
  4540   001A18  0EBA               	movlw	low (STR_1+4)
  4541   001A1A  6E13               	movwf	i2printf@f^0,c
  4542   001A1C  C01F  F014         	movff	i2printNumber@number,?i2_printf+1
  4543   001A20  C020  F015         	movff	i2printNumber@number+1,?i2_printf+2
  4544   001A24  EC09  F007         	call	i2_printf	;wreg free
  4545   001A28  0012               	return		;funcret
  4546   001A2A                     __end_ofi2_printNumber:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function i2_printMessage *****************
  4550 ;; Defined at:
  4551 ;;		line 64 in file "LCD_Eusart.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  string          1   30[COMRAM] PTR unsigned char 
  4554 ;;		 -> STR_17(17), STR_16(17), STR_11(13), STR_10(17), 
  4555 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_3(15), 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;		None
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4567 ;;      Params:         1       0       0       0       0       0       0       0       0
  4568 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4570 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4571 ;;Total ram usage:        1 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; Hardware stack levels required when called: 4
  4574 ;; This function calls:
  4575 ;;		i2_printf
  4576 ;; This function is called by:
  4577 ;;		_ISR
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text28
  4582   001A8A                     __ptext28:
  4583                           	callstack 0
  4584   001A8A                     i2_printMessage:
  4585                           	callstack 19
  4586                           
  4587                           ;LCD_Eusart.c: 65: printf(string);
  4588                           
  4589                           ;incstack = 0
  4590   001A8A  C01F  F013         	movff	i2printMessage@string,i2printf@f
  4591   001A8E  EC09  F007         	call	i2_printf	;wreg free
  4592   001A92  0012               	return		;funcret
  4593   001A94                     __end_ofi2_printMessage:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function i2_deleteChar *****************
  4597 ;; Defined at:
  4598 ;;		line 115 in file "LCD_Eusart.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 3F/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 3
  4619 ;; This function calls:
  4620 ;;		i2_shiftCLeft
  4621 ;;		i2_writeData
  4622 ;; This function is called by:
  4623 ;;		_ISR
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text29
  4628   001A3A                     __ptext29:
  4629                           	callstack 0
  4630   001A3A                     i2_deleteChar:
  4631                           	callstack 20
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;LCD_Eusart.c: 116: shiftCLeft();
  4635                           
  4636                           ;incstack = 0
  4637   001A3A  EC56  F00D         	call	i2_shiftCLeft	;wreg free
  4638                           
  4639                           ;LCD_Eusart.c: 117: writeData(' ');
  4640   001A3E  0E20               	movlw	32
  4641   001A40  EC44  F00C         	call	i2_writeData
  4642                           
  4643                           ;LCD_Eusart.c: 118: shiftCLeft();
  4644   001A44  EC56  F00D         	call	i2_shiftCLeft	;wreg free
  4645   001A48  0012               	return		;funcret
  4646   001A4A                     __end_ofi2_deleteChar:
  4647                           	callstack 0
  4648                           
  4649 ;; *************** function i2_shiftCLeft *****************
  4650 ;; Defined at:
  4651 ;;		line 111 in file "LCD_Eusart.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4668 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:        0 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 2
  4672 ;; This function calls:
  4673 ;;		i2_writeInstruction
  4674 ;; This function is called by:
  4675 ;;		i2_deleteChar
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text30
  4680   001AAC                     __ptext30:
  4681                           	callstack 0
  4682   001AAC                     i2_shiftCLeft:
  4683                           	callstack 20
  4684                           
  4685                           ;LCD_Eusart.c: 112: writeInstruction(0x10);
  4686                           
  4687                           ;incstack = 0
  4688   001AAC  0E10               	movlw	16
  4689   001AAE  EC2C  F00C         	call	i2_writeInstruction
  4690   001AB2  0012               	return		;funcret
  4691   001AB4                     __end_ofi2_shiftCLeft:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function i2_clearDisplay *****************
  4695 ;; Defined at:
  4696 ;;		line 32 in file "LCD_Eusart.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4710 ;;      Params:         0       0       0       0       0       0       0       0       0
  4711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4712 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4713 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4714 ;;Total ram usage:        1 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; Hardware stack levels required when called: 2
  4717 ;; This function calls:
  4718 ;;		i2_writeInstruction
  4719 ;; This function is called by:
  4720 ;;		_ISR
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text31
  4725   0019D8                     __ptext31:
  4726                           	callstack 0
  4727   0019D8                     i2_clearDisplay:
  4728                           	callstack 21
  4729                           
  4730                           ;LCD_Eusart.c: 33: writeInstruction(0x1);
  4731                           
  4732                           ;incstack = 0
  4733   0019D8  0E01               	movlw	1
  4734   0019DA  EC2C  F00C         	call	i2_writeInstruction
  4735                           
  4736                           ;LCD_Eusart.c: 34: _delay((unsigned long)((1600)*(8000000/4000000.0)));
  4737   0019DE  0E05               	movlw	5
  4738   0019E0  6E03               	movwf	??i2_clearDisplay^0,c
  4739   0019E2  0E26               	movlw	38
  4740   0019E4                     i2u317_47:
  4741   0019E4  2EE8               	decfsz	wreg,f,c
  4742   0019E6  D7FE               	bra	i2u317_47
  4743   0019E8  2E03               	decfsz	??i2_clearDisplay^0,f,c
  4744   0019EA  D7FC               	bra	i2u317_47
  4745   0019EC  D000               	nop2	
  4746   0019EE  0012               	return		;funcret
  4747   0019F0                     __end_ofi2_clearDisplay:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function i2_writeInstruction *****************
  4751 ;; Defined at:
  4752 ;;		line 24 in file "LCD_Eusart.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  d               1    wreg     unsigned char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  d               1    1[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0
  4767 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4768 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4769 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:        2 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; Hardware stack levels required when called: 1
  4773 ;; This function calls:
  4774 ;;		i2_enable
  4775 ;; This function is called by:
  4776 ;;		i2_clearDisplay
  4777 ;;		i2_secondLineC
  4778 ;;		i2_shiftCLeft
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text32
  4783   001858                     __ptext32:
  4784                           	callstack 0
  4785   001858                     i2_writeInstruction:
  4786                           	callstack 21
  4787                           
  4788                           ;incstack = 0
  4789                           ;i2writeInstruction@d stored from wreg
  4790   001858  6E02               	movwf	i2writeInstruction@d^0,c
  4791                           
  4792                           ;LCD_Eusart.c: 25: LATA3 = 0;
  4793   00185A  9689               	bcf	3977,3,c	;volatile
  4794                           
  4795                           ;LCD_Eusart.c: 26: LATD = (LATD & 0b00001111) | (d & 0b11110000);
  4796   00185C  C002  F001         	movff	i2writeInstruction@d,??i2_writeInstruction
  4797   001860  0EF0               	movlw	240
  4798   001862  1601               	andwf	??i2_writeInstruction^0,f,c
  4799   001864  508C               	movf	140,w,c	;volatile
  4800   001866  0B0F               	andlw	15
  4801   001868  1001               	iorwf	??i2_writeInstruction^0,w,c
  4802   00186A  6E8C               	movwf	140,c	;volatile
  4803                           
  4804                           ;LCD_Eusart.c: 27: enable();
  4805   00186C  EC33  F00D         	call	i2_enable	;wreg free
  4806                           
  4807                           ;LCD_Eusart.c: 28: LATD = (LATD & 0b00001111) | (d<<4);
  4808   001870  C002  F001         	movff	i2writeInstruction@d,??i2_writeInstruction
  4809   001874  3A01               	swapf	??i2_writeInstruction^0,f,c
  4810   001876  0EF0               	movlw	240
  4811   001878  1601               	andwf	??i2_writeInstruction^0,f,c
  4812   00187A  508C               	movf	140,w,c	;volatile
  4813   00187C  0B0F               	andlw	15
  4814   00187E  1001               	iorwf	??i2_writeInstruction^0,w,c
  4815   001880  6E8C               	movwf	140,c	;volatile
  4816                           
  4817                           ;LCD_Eusart.c: 29: enable();
  4818   001882  EC33  F00D         	call	i2_enable	;wreg free
  4819   001886  0012               	return		;funcret
  4820   001888                     __end_ofi2_writeInstruction:
  4821                           	callstack 0
  4822                           
  4823 ;; *************** function i2_assignRGB *****************
  4824 ;; Defined at:
  4825 ;;		line 372 in file "Lab6C.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  number          1    wreg     unsigned char 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  number          1    7[COMRAM] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      void 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4839 ;;      Params:         0       0       0       0       0       0       0       0       0
  4840 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4841 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4842 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4843 ;;Total ram usage:        4 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; Hardware stack levels required when called: 1
  4846 ;; This function calls:
  4847 ;;		i2___lbmod
  4848 ;; This function is called by:
  4849 ;;		_ISR
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text33
  4854   0014B2                     __ptext33:
  4855                           	callstack 0
  4856   0014B2                     i2_assignRGB:
  4857                           	callstack 22
  4858                           
  4859                           ;incstack = 0
  4860                           ;i2assignRGB@number stored from wreg
  4861   0014B2  6E08               	movwf	i2assignRGB@number^0,c
  4862                           
  4863                           ;Lab6C.c: 373: switch((number%100 - number%10)){
  4864   0014B4  D012               	goto	i2l2921
  4865   0014B6                     i2l2909:
  4866                           
  4867                           ;Lab6C.c: 375: LATE = 0b00000111;
  4868   0014B6  0E07               	movlw	7
  4869   0014B8  6E8D               	movwf	141,c	;volatile
  4870                           
  4871                           ;Lab6C.c: 376: break;
  4872   0014BA  0012               	return	
  4873   0014BC                     i2l2911:
  4874                           
  4875                           ;Lab6C.c: 378: LATE = 0b00000110;
  4876   0014BC  0E06               	movlw	6
  4877   0014BE  6E8D               	movwf	141,c	;volatile
  4878                           
  4879                           ;Lab6C.c: 379: break;
  4880   0014C0  0012               	return	
  4881   0014C2                     i2l2913:
  4882                           
  4883                           ;Lab6C.c: 381: LATE = 0b00000010;
  4884   0014C2  0E02               	movlw	2
  4885   0014C4  6E8D               	movwf	141,c	;volatile
  4886                           
  4887                           ;Lab6C.c: 382: break;
  4888   0014C6  0012               	return	
  4889   0014C8                     i2l2915:
  4890                           
  4891                           ;Lab6C.c: 384: LATE = 0b00000011;
  4892   0014C8  0E03               	movlw	3
  4893   0014CA  6E8D               	movwf	141,c	;volatile
  4894                           
  4895                           ;Lab6C.c: 385: break;
  4896   0014CC  0012               	return	
  4897   0014CE                     i2l2917:
  4898                           
  4899                           ;Lab6C.c: 387: LATE = 0b00000001;
  4900   0014CE  0E01               	movlw	1
  4901   0014D0  6E8D               	movwf	141,c	;volatile
  4902                           
  4903                           ;Lab6C.c: 388: break;
  4904   0014D2  0012               	return	
  4905   0014D4                     i2l2919:
  4906                           
  4907                           ;Lab6C.c: 390: LATE = 0b00000101;
  4908   0014D4  0E05               	movlw	5
  4909   0014D6  6E8D               	movwf	141,c	;volatile
  4910                           
  4911                           ;Lab6C.c: 391: }
  4912   0014D8  0012               	return	
  4913   0014DA                     i2l2921:
  4914   0014DA  0E64               	movlw	100
  4915   0014DC  6E01               	movwf	i2___lbmod@divisor^0,c
  4916   0014DE  5008               	movf	i2assignRGB@number^0,w,c
  4917   0014E0  EC72  F00C         	call	i2___lbmod
  4918   0014E4  6E05               	movwf	??i2_assignRGB^0,c
  4919   0014E6  6A06               	clrf	(??i2_assignRGB+1)^0,c
  4920   0014E8  0E0A               	movlw	10
  4921   0014EA  6E01               	movwf	i2___lbmod@divisor^0,c
  4922   0014EC  5008               	movf	i2assignRGB@number^0,w,c
  4923   0014EE  EC72  F00C         	call	i2___lbmod
  4924   0014F2  6E07               	movwf	(??i2_assignRGB+2)^0,c
  4925   0014F4  5007               	movf	(??i2_assignRGB+2)^0,w,c
  4926   0014F6  5E05               	subwf	??i2_assignRGB^0,f,c
  4927   0014F8  0E00               	movlw	0
  4928   0014FA  5A06               	subwfb	(??i2_assignRGB+1)^0,f,c
  4929                           
  4930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4931                           ; Switch size 1, requested type "simple"
  4932                           ; Number of cases is 1, Range of values is 0 to 0
  4933                           ; switch strategies available:
  4934                           ; Name         Instructions Cycles
  4935                           ; simple_byte            4     3 (average)
  4936                           ;	Chosen strategy is simple_byte
  4937   0014FC  5006               	movf	(??i2_assignRGB+1)^0,w,c
  4938   0014FE  0A00               	xorlw	0	; case 0
  4939   001500  A4D8               	btfss	status,2,c
  4940   001502  D7E8               	goto	i2l2919
  4941                           
  4942                           ; Switch size 1, requested type "simple"
  4943                           ; Number of cases is 5, Range of values is 10 to 50
  4944                           ; switch strategies available:
  4945                           ; Name         Instructions Cycles
  4946                           ; simple_byte           16     9 (average)
  4947                           ;	Chosen strategy is simple_byte
  4948   001504  5005               	movf	??i2_assignRGB^0,w,c
  4949   001506  0A0A               	xorlw	10	; case 10
  4950   001508  B4D8               	btfsc	status,2,c
  4951   00150A  D7E1               	goto	i2l2917
  4952   00150C  0A1E               	xorlw	30	; case 20
  4953   00150E  B4D8               	btfsc	status,2,c
  4954   001510  D7DB               	goto	i2l2915
  4955   001512  0A0A               	xorlw	10	; case 30
  4956   001514  B4D8               	btfsc	status,2,c
  4957   001516  D7D5               	goto	i2l2913
  4958   001518  0A36               	xorlw	54	; case 40
  4959   00151A  B4D8               	btfsc	status,2,c
  4960   00151C  D7CF               	goto	i2l2911
  4961   00151E  0A1A               	xorlw	26	; case 50
  4962   001520  B4D8               	btfsc	status,2,c
  4963   001522  D7C9               	goto	i2l2909
  4964   001524  D7D7               	goto	i2l2919
  4965   001526                     __end_ofi2_assignRGB:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function i2___lbmod *****************
  4969 ;; Defined at:
  4970 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lbmod.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  dividend        1    wreg     unsigned char 
  4973 ;;  divisor         1    0[COMRAM] unsigned char 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  dividend        1    1[COMRAM] unsigned char 
  4976 ;;  rem             1    3[COMRAM] unsigned char 
  4977 ;;  counter         1    2[COMRAM] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      unsigned char 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4987 ;;      Params:         1       0       0       0       0       0       0       0       0
  4988 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4990 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4991 ;;Total ram usage:        4 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_ISR
  4997 ;;		i2_assignRGB
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text34
  5002   0018E4                     __ptext34:
  5003                           	callstack 0
  5004   0018E4                     i2___lbmod:
  5005                           	callstack 22
  5006                           
  5007                           ;incstack = 0
  5008                           ;i2___lbmod@dividend stored from wreg
  5009   0018E4  6E02               	movwf	i2___lbmod@dividend^0,c
  5010   0018E6  0E08               	movlw	8
  5011   0018E8  6E03               	movwf	i2___lbmod@counter^0,c
  5012   0018EA  0E00               	movlw	0
  5013   0018EC  6E04               	movwf	i2___lbmod@rem^0,c
  5014   0018EE                     i2l2593:
  5015   0018EE  90D8               	bcf	status,0,c
  5016   0018F0  3402               	rlcf	i2___lbmod@dividend^0,w,c
  5017   0018F2  3404               	rlcf	i2___lbmod@rem^0,w,c
  5018   0018F4  6E04               	movwf	i2___lbmod@rem^0,c
  5019   0018F6  90D8               	bcf	status,0,c
  5020   0018F8  3602               	rlcf	i2___lbmod@dividend^0,f,c
  5021   0018FA  5001               	movf	i2___lbmod@divisor^0,w,c
  5022   0018FC  5C04               	subwf	i2___lbmod@rem^0,w,c
  5023   0018FE  A0D8               	btfss	status,0,c
  5024   001900  D002               	goto	i2l2601
  5025   001902  5001               	movf	i2___lbmod@divisor^0,w,c
  5026   001904  5E04               	subwf	i2___lbmod@rem^0,f,c
  5027   001906                     i2l2601:
  5028   001906  2E03               	decfsz	i2___lbmod@counter^0,f,c
  5029   001908  D7F2               	goto	i2l2593
  5030   00190A  5004               	movf	i2___lbmod@rem^0,w,c
  5031   00190C  0012               	return		;funcret
  5032   00190E                     __end_ofi2___lbmod:
  5033                           	callstack 0
  5034                           
  5035 ;; *************** function _transmision *****************
  5036 ;; Defined at:
  5037 ;;		line 154 in file "LCD_Eusart.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  d               2   30[COMRAM] int 
  5040 ;;  e               2   32[COMRAM] int 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         4       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        4 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; Hardware stack levels required when called: 4
  5059 ;; This function calls:
  5060 ;;		i2_printf
  5061 ;; This function is called by:
  5062 ;;		_ISR
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text35
  5067   001750                     __ptext35:
  5068                           	callstack 0
  5069   001750                     _transmision:
  5070                           	callstack 19
  5071                           
  5072                           ;LCD_Eusart.c: 155: eusart = 1;
  5073                           
  5074                           ;incstack = 0
  5075   001750  0E01               	movlw	1
  5076   001752  6E35               	movwf	_eusart^0,c
  5077                           
  5078                           ;LCD_Eusart.c: 156: printf("PWM value:%u%%\n ",d);
  5079   001754  0E60               	movlw	low STR_4
  5080   001756  6E13               	movwf	i2printf@f^0,c
  5081   001758  C01F  F014         	movff	transmision@d,?i2_printf+1
  5082   00175C  C020  F015         	movff	transmision@d+1,?i2_printf+2
  5083   001760  EC09  F007         	call	i2_printf	;wreg free
  5084                           
  5085                           ;LCD_Eusart.c: 157: if(e==0) printf("HC-SR04 failure\n");
  5086   001764  5021               	movf	transmision@e^0,w,c
  5087   001766  1022               	iorwf	(transmision@e+1)^0,w,c
  5088   001768  A4D8               	btfss	status,2,c
  5089   00176A  D005               	goto	i2l2687
  5090   00176C  0E4F               	movlw	low STR_5
  5091   00176E  6E13               	movwf	i2printf@f^0,c
  5092   001770  EC09  F007         	call	i2_printf	;wreg free
  5093   001774  D008               	goto	i2l2689
  5094   001776                     i2l2687:
  5095                           
  5096                           ;LCD_Eusart.c: 158: else printf("distance:%u cm\n",e);
  5097   001776  0E71               	movlw	low STR_6
  5098   001778  6E13               	movwf	i2printf@f^0,c
  5099   00177A  C021  F014         	movff	transmision@e,?i2_printf+1
  5100   00177E  C022  F015         	movff	transmision@e+1,?i2_printf+2
  5101   001782  EC09  F007         	call	i2_printf	;wreg free
  5102   001786                     i2l2689:
  5103                           
  5104                           ;LCD_Eusart.c: 159: eusart = 0;
  5105   001786  0E00               	movlw	0
  5106   001788  6E35               	movwf	_eusart^0,c
  5107   00178A  0012               	return		;funcret
  5108   00178C                     __end_of_transmision:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function i2_printf *****************
  5112 ;; Defined at:
  5113 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  f               1   18[COMRAM] PTR const unsigned char 
  5116 ;;		 -> STR_17(17), STR_16(17), STR_11(13), STR_10(17), 
  5117 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(16), 
  5118 ;;		 -> STR_5(17), STR_4(17), STR_3(15), STR_2(3), 
  5119 ;;		 -> STR_1(7), 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  tmpval          4    0        struct .
  5122 ;;  val             2   27[COMRAM] unsigned int 
  5123 ;;  cp              2   24[COMRAM] PTR const unsigned char 
  5124 ;;		 -> STR_18(7), ?_printf(2), STR_15(8), STR_14(10), 
  5125 ;;		 -> STR_13(8), STR_12(10), valor(1), 
  5126 ;;  len             2    0        unsigned int 
  5127 ;;  c               1   29[COMRAM] unsigned char 
  5128 ;;  ap              1   26[COMRAM] PTR void [1]
  5129 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5130 ;;  flag            1   23[COMRAM] unsigned char 
  5131 ;;  prec            1   22[COMRAM] char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  2   18[COMRAM] int 
  5134 ;; Registers used:
  5135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5141 ;;      Params:         3       0       0       0       0       0       0       0       0
  5142 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5143 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5144 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5145 ;;Total ram usage:       12 bytes
  5146 ;; Hardware stack levels used: 1
  5147 ;; Hardware stack levels required when called: 3
  5148 ;; This function calls:
  5149 ;;		i2___lwdiv
  5150 ;;		i2___lwmod
  5151 ;;		i2_putch
  5152 ;; This function is called by:
  5153 ;;		_transmision
  5154 ;;		i2_printMessage
  5155 ;;		i2_printNumber
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text36
  5160   000E12                     __ptext36:
  5161                           	callstack 0
  5162   000E12                     i2_printf:
  5163                           	callstack 19
  5164                           
  5165                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  5166                           
  5167                           ;incstack = 0
  5168   000E12  0E14               	movlw	low (?i2_printf+1)
  5169   000E14  6E1B               	movwf	i2printf@ap^0,c
  5170                           
  5171                           ;doprnt.c: 553: while((c = *f++)) {
  5172   000E16  D0D2               	goto	i2u168_40
  5173   000E18                     i2l2521:
  5174                           
  5175                           ;doprnt.c: 555: if(c != '%')
  5176   000E18  0E25               	movlw	37
  5177   000E1A  181E               	xorwf	i2printf@c^0,w,c
  5178   000E1C  B4D8               	btfsc	status,2,c
  5179   000E1E  D004               	goto	i2l2525
  5180                           
  5181                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  5182   000E20  501E               	movf	i2printf@c^0,w,c
  5183   000E22  ECC5  F00C         	call	i2_putch
  5184                           
  5185                           ;doprnt.c: 559: continue;
  5186   000E26  D0CA               	goto	i2u168_40
  5187   000E28                     i2l2525:
  5188                           
  5189                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  5190   000E28  0E00               	movlw	0
  5191   000E2A  6E18               	movwf	i2printf@flag^0,c
  5192                           
  5193                           ;doprnt.c: 661: switch(c = *f++) {
  5194   000E2C  D042               	goto	i2l2547
  5195   000E2E                     i2l2527:
  5196                           
  5197                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5198   000E2E  501B               	movf	i2printf@ap^0,w,c
  5199   000E30  6ED9               	movwf	fsr2l,c
  5200   000E32  6ADA               	clrf	fsr2h,c
  5201   000E34  CFDE F019          	movff	postinc2,i2printf@cp
  5202   000E38  CFDD F01A          	movff	postdec2,i2printf@cp+1
  5203   000E3C  0E02               	movlw	2
  5204   000E3E  261B               	addwf	i2printf@ap^0,f,c
  5205                           
  5206                           ;doprnt.c: 766: if(!cp)
  5207   000E40  5019               	movf	i2printf@cp^0,w,c
  5208   000E42  101A               	iorwf	(i2printf@cp+1)^0,w,c
  5209   000E44  A4D8               	btfss	status,2,c
  5210   000E46  D01B               	goto	i2l2539
  5211                           
  5212                           ;doprnt.c: 767: cp = "(null)";
  5213   000E48  0EAF               	movlw	low STR_18
  5214   000E4A  6E19               	movwf	i2printf@cp^0,c
  5215   000E4C  5019               	movf	i2printf@cp^0,w,c
  5216   000E4E  A4D8               	btfss	status,2,c
  5217   000E50  0E08               	movlw	high __smallconst
  5218   000E52  6E1A               	movwf	(i2printf@cp+1)^0,c
  5219   000E54  D014               	goto	i2l2539
  5220   000E56                     i2l2535:
  5221                           
  5222                           ;doprnt.c: 804: (putch(*cp++) );
  5223   000E56  C019  FFF6         	movff	i2printf@cp,tblptrl
  5224   000E5A  C01A  FFF7         	movff	i2printf@cp+1,tblptrh
  5225   000E5E  6AF8               	clrf	tblptru,c
  5226   000E60  0E07               	movlw	(high __ramtop+-1)
  5227   000E62  64F7               	cpfsgt	tblptrh,c
  5228   000E64  D003               	bra	i2u160_47
  5229   000E66  0008               	tblrd		*
  5230   000E68  50F5               	movf	tablat,w,c
  5231   000E6A  D005               	bra	i2u160_40
  5232   000E6C                     i2u160_47:
  5233   000E6C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5234   000E70  CFF7 FFEA          	movff	tblptrh,fsr0h
  5235   000E74  50EF               	movf	indf0,w,c
  5236   000E76                     i2u160_40:
  5237   000E76  ECC5  F00C         	call	i2_putch
  5238   000E7A  4A19               	infsnz	i2printf@cp^0,f,c
  5239   000E7C  2A1A               	incf	(i2printf@cp+1)^0,f,c
  5240   000E7E                     i2l2539:
  5241   000E7E  C019  FFF6         	movff	i2printf@cp,tblptrl
  5242   000E82  C01A  FFF7         	movff	i2printf@cp+1,tblptrh
  5243   000E86  6AF8               	clrf	tblptru,c
  5244   000E88  0E07               	movlw	(high __ramtop+-1)
  5245   000E8A  64F7               	cpfsgt	tblptrh,c
  5246   000E8C  D003               	bra	i2u161_47
  5247   000E8E  0008               	tblrd		*
  5248   000E90  50F5               	movf	tablat,w,c
  5249   000E92  D005               	bra	i2u161_40
  5250   000E94                     i2u161_47:
  5251   000E94  CFF6 FFE9          	movff	tblptrl,fsr0l
  5252   000E98  CFF7 FFEA          	movff	tblptrh,fsr0h
  5253   000E9C  50EF               	movf	indf0,w,c
  5254   000E9E                     i2u161_40:
  5255   000E9E  0900               	iorlw	0
  5256   000EA0  B4D8               	btfsc	status,2,c
  5257   000EA2  D08C               	goto	i2u168_40
  5258   000EA4  D7D8               	goto	i2l2535
  5259   000EA6                     i2l2541:
  5260                           
  5261                           ;doprnt.c: 835: (putch(c) );
  5262   000EA6  501E               	movf	i2printf@c^0,w,c
  5263   000EA8  ECC5  F00C         	call	i2_putch
  5264                           
  5265                           ;doprnt.c: 836: continue;
  5266   000EAC  D087               	goto	i2u168_40
  5267   000EAE                     i2l2543:
  5268                           
  5269                           ;doprnt.c: 844: flag |= 0x40;
  5270   000EAE  8C18               	bsf	i2printf@flag^0,6,c
  5271                           
  5272                           ;doprnt.c: 845: break;
  5273   000EB0  D01B               	goto	i2l470
  5274   000EB2                     i2l2547:
  5275   000EB2  2A13               	incf	i2printf@f^0,f,c
  5276   000EB4  0413               	decf	i2printf@f^0,w,c
  5277   000EB6  6E16               	movwf	??i2_printf^0,c
  5278   000EB8  C016  FFF6         	movff	??i2_printf,tblptrl
  5279   000EBC                     	if	1	;There is more than 1 active tblptr byte
  5280   000EBC  0E08               	movlw	high __smallconst
  5281   000EBE  6EF7               	movwf	tblptrh,c
  5282   000EC0                     	endif
  5283   000EC0                     	if	0	;tblptru may be non-zero
  5284   000EC0                     	endif
  5285   000EC0                     	if	0	;tblptru may be non-zero
  5286   000EC0                     	endif
  5287   000EC0  0008               	tblrd		*
  5288   000EC2  CFF5 F01E          	movff	tablat,i2printf@c
  5289   000EC6  501E               	movf	i2printf@c^0,w,c
  5290                           
  5291                           ; Switch size 1, requested type "simple"
  5292                           ; Number of cases is 5, Range of values is 0 to 117
  5293                           ; switch strategies available:
  5294                           ; Name         Instructions Cycles
  5295                           ; simple_byte           16     9 (average)
  5296                           ;	Chosen strategy is simple_byte
  5297   000EC8  0A00               	xorlw	0	; case 0
  5298   000ECA  B4D8               	btfsc	status,2,c
  5299   000ECC  0012               	return	
  5300   000ECE  0A64               	xorlw	100	; case 100
  5301   000ED0  B4D8               	btfsc	status,2,c
  5302   000ED2  D00A               	goto	i2l470
  5303   000ED4  0A0D               	xorlw	13	; case 105
  5304   000ED6  B4D8               	btfsc	status,2,c
  5305   000ED8  D007               	goto	i2l470
  5306   000EDA  0A1A               	xorlw	26	; case 115
  5307   000EDC  B4D8               	btfsc	status,2,c
  5308   000EDE  D7A7               	goto	i2l2527
  5309   000EE0  0A06               	xorlw	6	; case 117
  5310   000EE2  B4D8               	btfsc	status,2,c
  5311   000EE4  D7E4               	goto	i2l2543
  5312   000EE6  D7DF               	goto	i2l2541
  5313   000EE8                     i2l470:
  5314                           
  5315                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  5316   000EE8  BC18               	btfsc	i2printf@flag^0,6,c
  5317   000EEA  D012               	goto	i2l2559
  5318                           
  5319                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  5320   000EEC  501B               	movf	i2printf@ap^0,w,c
  5321   000EEE  6ED9               	movwf	fsr2l,c
  5322   000EF0  6ADA               	clrf	fsr2h,c
  5323   000EF2  CFDE F01C          	movff	postinc2,i2printf@val
  5324   000EF6  CFDD F01D          	movff	postdec2,i2printf@val+1
  5325   000EFA  0E02               	movlw	2
  5326   000EFC  261B               	addwf	i2printf@ap^0,f,c
  5327                           
  5328                           ;doprnt.c: 1287: if((int)val < 0) {
  5329   000EFE  AE1D               	btfss	(i2printf@val+1)^0,7,c
  5330   000F00  D010               	goto	i2l2563
  5331                           
  5332                           ;doprnt.c: 1288: flag |= 0x03;
  5333   000F02  0E03               	movlw	3
  5334   000F04  1218               	iorwf	i2printf@flag^0,f,c
  5335                           
  5336                           ;doprnt.c: 1289: val = -val;
  5337   000F06  6C1C               	negf	i2printf@val^0,c
  5338   000F08  1E1D               	comf	(i2printf@val+1)^0,f,c
  5339   000F0A  B0D8               	btfsc	status,0,c
  5340   000F0C  2A1D               	incf	(i2printf@val+1)^0,f,c
  5341   000F0E  D009               	goto	i2l2563
  5342   000F10                     i2l2559:
  5343                           
  5344                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  5345   000F10  501B               	movf	i2printf@ap^0,w,c
  5346   000F12  6ED9               	movwf	fsr2l,c
  5347   000F14  6ADA               	clrf	fsr2h,c
  5348   000F16  CFDE F01C          	movff	postinc2,i2printf@val
  5349   000F1A  CFDD F01D          	movff	postdec2,i2printf@val+1
  5350   000F1E  0E02               	movlw	2
  5351   000F20  261B               	addwf	i2printf@ap^0,f,c
  5352   000F22                     i2l2563:
  5353                           
  5354                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  5355   000F22  0E01               	movlw	1
  5356   000F24  6E1E               	movwf	i2printf@c^0,c
  5357   000F26                     i2l2569:
  5358                           
  5359                           ;doprnt.c: 1332: if(val < dpowers[c])
  5360   000F26  501E               	movf	i2printf@c^0,w,c
  5361   000F28  0D02               	mullw	2
  5362   000F2A  50F3               	movf	243,w,c
  5363   000F2C  0F01               	addlw	low _dpowers
  5364   000F2E  6E16               	movwf	??i2_printf^0,c
  5365   000F30  C016  FFF6         	movff	??i2_printf,tblptrl
  5366   000F34                     	if	1	;There is more than 1 active tblptr byte
  5367   000F34  0E08               	movlw	high __smallconst
  5368   000F36  6EF7               	movwf	tblptrh,c
  5369   000F38                     	endif
  5370   000F38                     	if	0	;tblptru may be non-zero
  5371   000F38                     	endif
  5372   000F38                     	if	0	;tblptru may be non-zero
  5373   000F38                     	endif
  5374   000F38  0009               	tblrd		*+
  5375   000F3A  50F5               	movf	tablat,w,c
  5376   000F3C  5C1C               	subwf	i2printf@val^0,w,c
  5377   000F3E  0009               	tblrd		*+
  5378   000F40  50F5               	movf	tablat,w,c
  5379   000F42  581D               	subwfb	(i2printf@val+1)^0,w,c
  5380   000F44  A0D8               	btfss	status,0,c
  5381   000F46  D005               	goto	i2u166_40
  5382   000F48  2A1E               	incf	i2printf@c^0,f,c
  5383   000F4A  0E05               	movlw	5
  5384   000F4C  181E               	xorwf	i2printf@c^0,w,c
  5385   000F4E  A4D8               	btfss	status,2,c
  5386   000F50  D7EA               	goto	i2l2569
  5387   000F52                     i2u166_40:
  5388                           
  5389                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  5390   000F52  C018  F016         	movff	i2printf@flag,??i2_printf
  5391   000F56  0E03               	movlw	3
  5392   000F58  1616               	andwf	??i2_printf^0,f,c
  5393   000F5A  B4D8               	btfsc	status,2,c
  5394   000F5C  D003               	goto	i2l2581
  5395                           
  5396                           ;doprnt.c: 1465: (putch('-') );
  5397   000F5E  0E2D               	movlw	45
  5398   000F60  ECC5  F00C         	call	i2_putch
  5399   000F64                     i2l2581:
  5400                           
  5401                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5402   000F64  C01E  F017         	movff	i2printf@c,i2printf@prec
  5403                           
  5404                           ;doprnt.c: 1500: while(prec--) {
  5405   000F68  D025               	goto	i2l2587
  5406   000F6A                     i2l2583:
  5407                           
  5408                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  5409   000F6A  5017               	movf	i2printf@prec^0,w,c
  5410   000F6C  0D02               	mullw	2
  5411   000F6E  50F3               	movf	243,w,c
  5412   000F70  0F01               	addlw	low _dpowers
  5413   000F72  6E16               	movwf	??i2_printf^0,c
  5414   000F74  C016  FFF6         	movff	??i2_printf,tblptrl
  5415   000F78                     	if	1	;There is more than 1 active tblptr byte
  5416   000F78  0E08               	movlw	high __smallconst
  5417   000F7A  6EF7               	movwf	tblptrh,c
  5418   000F7C                     	endif
  5419   000F7C                     	if	0	;tblptru may be non-zero
  5420   000F7C                     	endif
  5421   000F7C                     	if	0	;tblptru may be non-zero
  5422   000F7C                     	endif
  5423   000F7C  0009               	tblrd		*+
  5424   000F7E  CFF5 F009          	movff	tablat,i2___lwdiv@divisor
  5425   000F82  000A               	tblrd		*-
  5426   000F84  CFF5 F00A          	movff	tablat,i2___lwdiv@divisor+1
  5427   000F88  C01C  F007         	movff	i2printf@val,i2___lwdiv@dividend
  5428   000F8C  C01D  F008         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  5429   000F90  EC1D  F00B         	call	i2___lwdiv	;wreg free
  5430   000F94  C007  F00E         	movff	?i2___lwdiv,i2___lwmod@dividend
  5431   000F98  C008  F00F         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  5432   000F9C  0E00               	movlw	0
  5433   000F9E  6E11               	movwf	(i2___lwmod@divisor+1)^0,c
  5434   000FA0  0E0A               	movlw	10
  5435   000FA2  6E10               	movwf	i2___lwmod@divisor^0,c
  5436   000FA4  EC67  F00B         	call	i2___lwmod	;wreg free
  5437   000FA8  500E               	movf	?i2___lwmod^0,w,c
  5438   000FAA  0F30               	addlw	48
  5439   000FAC  6E1E               	movwf	i2printf@c^0,c
  5440                           
  5441                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  5442   000FAE  501E               	movf	i2printf@c^0,w,c
  5443   000FB0  ECC5  F00C         	call	i2_putch
  5444   000FB4                     i2l2587:
  5445   000FB4  0617               	decf	i2printf@prec^0,f,c
  5446   000FB6  2817               	incf	i2printf@prec^0,w,c
  5447   000FB8  A4D8               	btfss	status,2,c
  5448   000FBA  D7D7               	goto	i2l2583
  5449   000FBC                     i2u168_40:
  5450   000FBC  2A13               	incf	i2printf@f^0,f,c
  5451   000FBE  0413               	decf	i2printf@f^0,w,c
  5452   000FC0  6E16               	movwf	??i2_printf^0,c
  5453   000FC2  C016  FFF6         	movff	??i2_printf,tblptrl
  5454   000FC6                     	if	1	;There is more than 1 active tblptr byte
  5455   000FC6  0E08               	movlw	high __smallconst
  5456   000FC8  6EF7               	movwf	tblptrh,c
  5457   000FCA                     	endif
  5458   000FCA                     	if	0	;tblptru may be non-zero
  5459   000FCA                     	endif
  5460   000FCA                     	if	0	;tblptru may be non-zero
  5461   000FCA                     	endif
  5462   000FCA  0008               	tblrd		*
  5463   000FCC  CFF5 F01E          	movff	tablat,i2printf@c
  5464   000FD0  501E               	movf	i2printf@c^0,w,c
  5465   000FD2  B4D8               	btfsc	status,2,c
  5466   000FD4  0012               	return	
  5467   000FD6  D720               	goto	i2l2521
  5468   000FD8                     __end_ofi2_printf:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function i2_putch *****************
  5472 ;; Defined at:
  5473 ;;		line 76 in file "LCD_Eusart.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  d               1    wreg     unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  d               1    2[COMRAM] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0
  5488 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5490 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5491 ;;Total ram usage:        1 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 2
  5494 ;; This function calls:
  5495 ;;		i2_writeData
  5496 ;; This function is called by:
  5497 ;;		i2_printf
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text37
  5502   00198A                     __ptext37:
  5503                           	callstack 0
  5504   00198A                     i2_putch:
  5505                           	callstack 19
  5506                           
  5507                           ;incstack = 0
  5508                           ;i2putch@d stored from wreg
  5509   00198A  6E03               	movwf	i2putch@d^0,c
  5510                           
  5511                           ;LCD_Eusart.c: 77: if(eusart){
  5512   00198C  5035               	movf	_eusart^0,w,c
  5513   00198E  B4D8               	btfsc	status,2,c
  5514   001990  D005               	goto	i2l2425
  5515   001992                     i2u149_40:
  5516   001992  A2AC               	btfss	4012,1,c	;volatile
  5517   001994  D7FE               	goto	i2u149_40
  5518                           
  5519                           ;LCD_Eusart.c: 79: TXREG = d;
  5520   001996  C003  FFAD         	movff	i2putch@d,4013	;volatile
  5521                           
  5522                           ;LCD_Eusart.c: 80: }else writeData(d);
  5523   00199A  0012               	return	
  5524   00199C                     i2l2425:
  5525   00199C  5003               	movf	i2putch@d^0,w,c
  5526   00199E  EC44  F00C         	call	i2_writeData
  5527   0019A2  0012               	return		;funcret
  5528   0019A4                     __end_ofi2_putch:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function i2_writeData *****************
  5532 ;; Defined at:
  5533 ;;		line 16 in file "LCD_Eusart.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  d               1    wreg     unsigned char 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  d               1    1[COMRAM] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5547 ;;      Params:         0       0       0       0       0       0       0       0       0
  5548 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5549 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5550 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5551 ;;Total ram usage:        2 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; Hardware stack levels required when called: 1
  5554 ;; This function calls:
  5555 ;;		i2_enable
  5556 ;; This function is called by:
  5557 ;;		i2_putch
  5558 ;;		i2_deleteChar
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text38
  5563   001888                     __ptext38:
  5564                           	callstack 0
  5565   001888                     i2_writeData:
  5566                           	callstack 19
  5567                           
  5568                           ;incstack = 0
  5569                           ;i2writeData@d stored from wreg
  5570   001888  6E02               	movwf	i2writeData@d^0,c
  5571                           
  5572                           ;LCD_Eusart.c: 17: LATA3 = 1;
  5573   00188A  8689               	bsf	3977,3,c	;volatile
  5574                           
  5575                           ;LCD_Eusart.c: 18: LATD = (LATD & 0b00001111) | (d & 0b11110000);
  5576   00188C  C002  F001         	movff	i2writeData@d,??i2_writeData
  5577   001890  0EF0               	movlw	240
  5578   001892  1601               	andwf	??i2_writeData^0,f,c
  5579   001894  508C               	movf	140,w,c	;volatile
  5580   001896  0B0F               	andlw	15
  5581   001898  1001               	iorwf	??i2_writeData^0,w,c
  5582   00189A  6E8C               	movwf	140,c	;volatile
  5583                           
  5584                           ;LCD_Eusart.c: 19: enable();
  5585   00189C  EC33  F00D         	call	i2_enable	;wreg free
  5586                           
  5587                           ;LCD_Eusart.c: 20: LATD = (LATD & 0b00001111) | (d<<4);
  5588   0018A0  C002  F001         	movff	i2writeData@d,??i2_writeData
  5589   0018A4  3A01               	swapf	??i2_writeData^0,f,c
  5590   0018A6  0EF0               	movlw	240
  5591   0018A8  1601               	andwf	??i2_writeData^0,f,c
  5592   0018AA  508C               	movf	140,w,c	;volatile
  5593   0018AC  0B0F               	andlw	15
  5594   0018AE  1001               	iorwf	??i2_writeData^0,w,c
  5595   0018B0  6E8C               	movwf	140,c	;volatile
  5596                           
  5597                           ;LCD_Eusart.c: 21: enable();
  5598   0018B2  EC33  F00D         	call	i2_enable	;wreg free
  5599   0018B6  0012               	return		;funcret
  5600   0018B8                     __end_ofi2_writeData:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function i2_enable *****************
  5604 ;; Defined at:
  5605 ;;		line 10 in file "LCD_Eusart.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5622 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used: 1
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		i2_writeData
  5629 ;;		i2_writeInstruction
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text39
  5634   001A66                     __ptext39:
  5635                           	callstack 0
  5636   001A66                     i2_enable:
  5637                           	callstack 21
  5638                           
  5639                           ;LCD_Eusart.c: 11: LATA4 = 1;
  5640                           
  5641                           ;incstack = 0
  5642   001A66  8889               	bsf	3977,4,c	;volatile
  5643                           
  5644                           ;LCD_Eusart.c: 12: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5645   001A68  0E1A               	movlw	26
  5646   001A6A                     i2u318_47:
  5647   001A6A  2EE8               	decfsz	wreg,f,c
  5648   001A6C  D7FE               	bra	i2u318_47
  5649   001A6E  D000               	nop2	
  5650                           
  5651                           ;LCD_Eusart.c: 13: LATA4 = 0;
  5652   001A70  9889               	bcf	3977,4,c	;volatile
  5653   001A72  0012               	return		;funcret
  5654   001A74                     __end_ofi2_enable:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function i2___lwmod *****************
  5658 ;; Defined at:
  5659 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwmod.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  dividend        2   13[COMRAM] unsigned int 
  5662 ;;  divisor         2   15[COMRAM] unsigned int 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  counter         1   17[COMRAM] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  2   13[COMRAM] unsigned int 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5674 ;;      Params:         4       0       0       0       0       0       0       0       0
  5675 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5677 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5678 ;;Total ram usage:        5 bytes
  5679 ;; Hardware stack levels used: 1
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		i2_printf
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text40
  5688   0016CE                     __ptext40:
  5689                           	callstack 0
  5690   0016CE                     i2___lwmod:
  5691                           	callstack 21
  5692                           
  5693                           ;incstack = 0
  5694   0016CE  5010               	movf	i2___lwmod@divisor^0,w,c
  5695   0016D0  1011               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  5696   0016D2  B4D8               	btfsc	status,2,c
  5697   0016D4  D018               	goto	i2l981
  5698   0016D6  0E01               	movlw	1
  5699   0016D8  6E12               	movwf	i2___lwmod@counter^0,c
  5700   0016DA  D004               	goto	i2l2455
  5701   0016DC                     i2l2453:
  5702   0016DC  90D8               	bcf	status,0,c
  5703   0016DE  3610               	rlcf	i2___lwmod@divisor^0,f,c
  5704   0016E0  3611               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  5705   0016E2  2A12               	incf	i2___lwmod@counter^0,f,c
  5706   0016E4                     i2l2455:
  5707   0016E4  AE11               	btfss	(i2___lwmod@divisor+1)^0,7,c
  5708   0016E6  D7FA               	goto	i2l2453
  5709   0016E8                     i2u155_40:
  5710   0016E8  5010               	movf	i2___lwmod@divisor^0,w,c
  5711   0016EA  5C0E               	subwf	i2___lwmod@dividend^0,w,c
  5712   0016EC  5011               	movf	(i2___lwmod@divisor+1)^0,w,c
  5713   0016EE  580F               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  5714   0016F0  A0D8               	btfss	status,0,c
  5715   0016F2  D004               	goto	i2l2461
  5716   0016F4  5010               	movf	i2___lwmod@divisor^0,w,c
  5717   0016F6  5E0E               	subwf	i2___lwmod@dividend^0,f,c
  5718   0016F8  5011               	movf	(i2___lwmod@divisor+1)^0,w,c
  5719   0016FA  5A0F               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  5720   0016FC                     i2l2461:
  5721   0016FC  90D8               	bcf	status,0,c
  5722   0016FE  3211               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  5723   001700  3210               	rrcf	i2___lwmod@divisor^0,f,c
  5724   001702  2E12               	decfsz	i2___lwmod@counter^0,f,c
  5725   001704  D7F1               	goto	i2u155_40
  5726   001706                     i2l981:
  5727   001706  C00E  F00E         	movff	i2___lwmod@dividend,?i2___lwmod
  5728   00170A  C00F  F00F         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5729   00170E  0012               	return		;funcret
  5730   001710                     __end_ofi2___lwmod:
  5731                           	callstack 0
  5732                           
  5733 ;; *************** function _conversion *****************
  5734 ;; Defined at:
  5735 ;;		line 394 in file "Lab6C.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  canal           1    wreg     unsigned char 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  canal           1    0[COMRAM] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      unsigned char 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5749 ;;      Params:         0       0       0       0       0       0       0       0       0
  5750 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5752 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5753 ;;Total ram usage:        1 bytes
  5754 ;; Hardware stack levels used: 1
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_ISR
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text41
  5763   0019F0                     __ptext41:
  5764                           	callstack 0
  5765   0019F0                     _conversion:
  5766                           	callstack 23
  5767                           
  5768                           ;incstack = 0
  5769                           ;conversion@canal stored from wreg
  5770   0019F0  6E01               	movwf	conversion@canal^0,c
  5771                           
  5772                           ;Lab6C.c: 395: ADCON0 = (canal<<2) | 0b00000001;
  5773   0019F2  4401               	rlncf	conversion@canal^0,w,c
  5774   0019F4  46E8               	rlncf	wreg,f,c
  5775   0019F6  0BFC               	andlw	252
  5776   0019F8  0901               	iorlw	1
  5777   0019FA  6EC2               	movwf	194,c	;volatile
  5778                           
  5779                           ;Lab6C.c: 396: GO = 1;
  5780   0019FC  82C2               	bsf	4034,1,c	;volatile
  5781   0019FE                     i2l414:
  5782   0019FE  B2C2               	btfsc	4034,1,c	;volatile
  5783   001A00  D7FE               	goto	i2l414
  5784                           
  5785                           ;Lab6C.c: 398: return ADRESH;
  5786   001A02  50C4               	movf	196,w,c	;volatile
  5787   001A04  0012               	return		;funcret
  5788   001A06                     __end_of_conversion:
  5789                           	callstack 0
  5790                           
  5791 ;; *************** function _antirebote *****************
  5792 ;; Defined at:
  5793 ;;		line 368 in file "Lab6C.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg
  5802 ;; Tracked objects:
  5803 ;;		On entry : 3F/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5807 ;;      Params:         0       0       0       0       0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5809 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5810 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5811 ;;Total ram usage:        2 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_ISR
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text42
  5821   0019A4                     __ptext42:
  5822                           	callstack 0
  5823   0019A4                     _antirebote:
  5824                           	callstack 23
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;Lab6C.c: 369: _delay((unsigned long)((200)*(8000000/4000.0)));
  5828                           
  5829                           ;incstack = 0
  5830   0019A4  0E03               	movlw	3
  5831   0019A6  6E02               	movwf	(??_antirebote+1)^0,c
  5832   0019A8  0E08               	movlw	8
  5833   0019AA  6E01               	movwf	??_antirebote^0,c
  5834   0019AC  0E77               	movlw	119
  5835   0019AE                     i2u319_47:
  5836   0019AE  2EE8               	decfsz	wreg,f,c
  5837   0019B0  D7FE               	bra	i2u319_47
  5838   0019B2  2E01               	decfsz	??_antirebote^0,f,c
  5839   0019B4  D7FC               	bra	i2u319_47
  5840   0019B6  2E02               	decfsz	(??_antirebote+1)^0,f,c
  5841   0019B8  D7FA               	bra	i2u319_47
  5842   0019BA  0000               	nop	
  5843   0019BC  0012               	return		;funcret
  5844   0019BE                     __end_of_antirebote:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function ___wmul *****************
  5848 ;; Defined at:
  5849 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\Umul16.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  multiplier      2    0[COMRAM] unsigned int 
  5852 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  product         2    4[COMRAM] unsigned int 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  2    0[COMRAM] unsigned int 
  5857 ;; Registers used:
  5858 ;;		wreg, status,2, status,0, prodl, prodh
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5864 ;;      Params:         4       0       0       0       0       0       0       0       0
  5865 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5867 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5868 ;;Total ram usage:        6 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_ISR
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text43
  5878   00190E                     __ptext43:
  5879                           	callstack 0
  5880   00190E                     ___wmul:
  5881                           	callstack 23
  5882                           
  5883                           ;incstack = 0
  5884   00190E  5001               	movf	___wmul@multiplier^0,w,c
  5885   001910  0203               	mulwf	___wmul@multiplicand^0,c
  5886   001912  CFF3 F005          	movff	prodl,___wmul@product
  5887   001916  CFF4 F006          	movff	prodh,___wmul@product+1
  5888   00191A  5001               	movf	___wmul@multiplier^0,w,c
  5889   00191C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5890   00191E  50F3               	movf	243,w,c
  5891   001920  2606               	addwf	(___wmul@product+1)^0,f,c
  5892   001922  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5893   001924  0203               	mulwf	___wmul@multiplicand^0,c
  5894   001926  50F3               	movf	243,w,c
  5895   001928  2606               	addwf	(___wmul@product+1)^0,f,c
  5896   00192A  C005  F001         	movff	___wmul@product,?___wmul
  5897   00192E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5898   001932  0012               	return		;funcret
  5899   001934                     __end_of___wmul:
  5900                           	callstack 0
  5901                           
  5902 ;; *************** function ___awdiv *****************
  5903 ;; Defined at:
  5904 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\awdiv.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  dividend        2    0[COMRAM] int 
  5907 ;;  divisor         2    2[COMRAM] int 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  quotient        2    6[COMRAM] int 
  5910 ;;  sign            1    5[COMRAM] unsigned char 
  5911 ;;  counter         1    4[COMRAM] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  2    0[COMRAM] int 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5921 ;;      Params:         4       0       0       0       0       0       0       0       0
  5922 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5924 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5925 ;;Total ram usage:        8 bytes
  5926 ;; Hardware stack levels used: 1
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_ISR
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text44
  5935   0013B8                     __ptext44:
  5936                           	callstack 0
  5937   0013B8                     ___awdiv:
  5938                           	callstack 23
  5939                           
  5940                           ;incstack = 0
  5941   0013B8  0E00               	movlw	0
  5942   0013BA  6E06               	movwf	___awdiv@sign^0,c
  5943   0013BC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5944   0013BE  D006               	goto	i2l2859
  5945   0013C0  6C03               	negf	___awdiv@divisor^0,c
  5946   0013C2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5947   0013C4  B0D8               	btfsc	status,0,c
  5948   0013C6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5949   0013C8  0E01               	movlw	1
  5950   0013CA  6E06               	movwf	___awdiv@sign^0,c
  5951   0013CC                     i2l2859:
  5952   0013CC  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5953   0013CE  D006               	goto	i2l2865
  5954   0013D0  6C01               	negf	___awdiv@dividend^0,c
  5955   0013D2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5956   0013D4  B0D8               	btfsc	status,0,c
  5957   0013D6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5958   0013D8  0E01               	movlw	1
  5959   0013DA  1A06               	xorwf	___awdiv@sign^0,f,c
  5960   0013DC                     i2l2865:
  5961   0013DC  0E00               	movlw	0
  5962   0013DE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5963   0013E0  0E00               	movlw	0
  5964   0013E2  6E07               	movwf	___awdiv@quotient^0,c
  5965   0013E4  5003               	movf	___awdiv@divisor^0,w,c
  5966   0013E6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5967   0013E8  B4D8               	btfsc	status,2,c
  5968   0013EA  D01C               	goto	i2l2887
  5969   0013EC  0E01               	movlw	1
  5970   0013EE  6E05               	movwf	___awdiv@counter^0,c
  5971   0013F0  D004               	goto	i2l2873
  5972   0013F2                     i2l2871:
  5973   0013F2  90D8               	bcf	status,0,c
  5974   0013F4  3603               	rlcf	___awdiv@divisor^0,f,c
  5975   0013F6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5976   0013F8  2A05               	incf	___awdiv@counter^0,f,c
  5977   0013FA                     i2l2873:
  5978   0013FA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5979   0013FC  D7FA               	goto	i2l2871
  5980   0013FE                     i2u205_40:
  5981   0013FE  90D8               	bcf	status,0,c
  5982   001400  3607               	rlcf	___awdiv@quotient^0,f,c
  5983   001402  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5984   001404  5003               	movf	___awdiv@divisor^0,w,c
  5985   001406  5C01               	subwf	___awdiv@dividend^0,w,c
  5986   001408  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5987   00140A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5988   00140C  A0D8               	btfss	status,0,c
  5989   00140E  D005               	goto	i2l2883
  5990   001410  5003               	movf	___awdiv@divisor^0,w,c
  5991   001412  5E01               	subwf	___awdiv@dividend^0,f,c
  5992   001414  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5993   001416  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5994   001418  8007               	bsf	___awdiv@quotient^0,0,c
  5995   00141A                     i2l2883:
  5996   00141A  90D8               	bcf	status,0,c
  5997   00141C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5998   00141E  3203               	rrcf	___awdiv@divisor^0,f,c
  5999   001420  2E05               	decfsz	___awdiv@counter^0,f,c
  6000   001422  D7ED               	goto	i2u205_40
  6001   001424                     i2l2887:
  6002   001424  5006               	movf	___awdiv@sign^0,w,c
  6003   001426  B4D8               	btfsc	status,2,c
  6004   001428  D004               	goto	i2l2891
  6005   00142A  6C07               	negf	___awdiv@quotient^0,c
  6006   00142C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6007   00142E  B0D8               	btfsc	status,0,c
  6008   001430  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6009   001432                     i2l2891:
  6010   001432  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6011   001436  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6012   00143A  0012               	return		;funcret
  6013   00143C                     __end_of___awdiv:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function _MeasureDist *****************
  6017 ;; Defined at:
  6018 ;;		line 5 in file "HCSR04.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  aux             1   13[COMRAM] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      unsigned char 
  6025 ;; Registers used:
  6026 ;;		wreg, status,2, status,0, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0
  6033 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6035 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6036 ;;Total ram usage:        1 bytes
  6037 ;; Hardware stack levels used: 1
  6038 ;; Hardware stack levels required when called: 1
  6039 ;; This function calls:
  6040 ;;		i2___lwdiv
  6041 ;; This function is called by:
  6042 ;;		_ISR
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text45
  6047   001526                     __ptext45:
  6048                           	callstack 0
  6049   001526                     _MeasureDist:
  6050                           	callstack 22
  6051                           
  6052                           ;HCSR04.c: 8: CCP2CON=0b00000100;
  6053                           
  6054                           ;incstack = 0
  6055   001526  0E04               	movlw	4
  6056   001528  6EBA               	movwf	186,c	;volatile
  6057                           
  6058                           ;HCSR04.c: 9: TMR1=0;
  6059   00152A  0E00               	movlw	0
  6060   00152C  6ECF               	movwf	207,c	;volatile
  6061   00152E  0E00               	movlw	0
  6062   001530  6ECE               	movwf	206,c	;volatile
  6063                           
  6064                           ;HCSR04.c: 10: CCP2IF=0;
  6065   001532  90A1               	bcf	4001,0,c	;volatile
  6066                           
  6067                           ;HCSR04.c: 11: T1CON=0b10010000;
  6068   001534  0E90               	movlw	144
  6069   001536  6ECD               	movwf	205,c	;volatile
  6070                           
  6071                           ;HCSR04.c: 12: RC0=1;
  6072   001538  8082               	bsf	3970,0,c	;volatile
  6073                           
  6074                           ;HCSR04.c: 13: _delay((unsigned long)((10)*(8000000/4000000.0)));
  6075   00153A  0E06               	movlw	6
  6076   00153C                     i2u320_47:
  6077   00153C  2EE8               	decfsz	wreg,f,c
  6078   00153E  D7FE               	bra	i2u320_47
  6079   001540  D000               	nop2	
  6080                           
  6081                           ;HCSR04.c: 14: RC0=0;
  6082   001542  9082               	bcf	3970,0,c	;volatile
  6083   001544                     i2l440:
  6084   001544  A282               	btfss	3970,1,c	;volatile
  6085   001546  D7FE               	goto	i2l440
  6086                           
  6087                           ;HCSR04.c: 18: TMR1ON=1;
  6088   001548  80CD               	bsf	4045,0,c	;volatile
  6089   00154A                     i2l443:
  6090   00154A  B0A1               	btfsc	4001,0,c	;volatile
  6091   00154C  D002               	goto	i2u199_40
  6092   00154E  A09E               	btfss	3998,0,c	;volatile
  6093   001550  D7FC               	goto	i2l443
  6094   001552                     i2u199_40:
  6095                           
  6096                           ;HCSR04.c: 20: TMR1ON=0;
  6097   001552  90CD               	bcf	4045,0,c	;volatile
  6098                           
  6099                           ;HCSR04.c: 21: if(TMR1IF==1){
  6100   001554  A09E               	btfss	3998,0,c	;volatile
  6101   001556  D003               	goto	i2l2833
  6102                           
  6103                           ;HCSR04.c: 22: aux=255;
  6104   001558  680E               	setf	MeasureDist@aux^0,c
  6105                           
  6106                           ;HCSR04.c: 23: TMR1IF=0;
  6107   00155A  909E               	bcf	3998,0,c	;volatile
  6108                           
  6109                           ;HCSR04.c: 24: }
  6110   00155C  D016               	goto	i2l2839
  6111   00155E                     i2l2833:
  6112                           
  6113                           ;HCSR04.c: 25: else{;HCSR04.c: 26: if(CCPR2>=14732)
  6114   00155E  0E8C               	movlw	140
  6115   001560  5CBB               	subwf	187,w,c	;volatile
  6116   001562  0E39               	movlw	57
  6117   001564  58BC               	subwfb	188,w,c	;volatile
  6118   001566  A0D8               	btfss	status,0,c
  6119   001568  D004               	goto	i2l2837
  6120                           
  6121                           ;HCSR04.c: 27: CCPR2=14732;
  6122   00156A  0E39               	movlw	57
  6123   00156C  6EBC               	movwf	188,c	;volatile
  6124   00156E  0E8C               	movlw	140
  6125   001570  6EBB               	movwf	187,c	;volatile
  6126   001572                     i2l2837:
  6127                           
  6128                           ;HCSR04.c: 28: aux=CCPR2/58 + 1;
  6129   001572  CFBB F007          	movff	4027,i2___lwdiv@dividend	;volatile
  6130   001576  CFBC F008          	movff	4028,i2___lwdiv@dividend+1	;volatile
  6131   00157A  0E00               	movlw	0
  6132   00157C  6E0A               	movwf	(i2___lwdiv@divisor+1)^0,c
  6133   00157E  0E3A               	movlw	58
  6134   001580  6E09               	movwf	i2___lwdiv@divisor^0,c
  6135   001582  EC1D  F00B         	call	i2___lwdiv	;wreg free
  6136   001586  2807               	incf	?i2___lwdiv^0,w,c
  6137   001588  6E0E               	movwf	MeasureDist@aux^0,c
  6138   00158A                     i2l2839:
  6139                           
  6140                           ;HCSR04.c: 29: };HCSR04.c: 30: return aux;
  6141   00158A  500E               	movf	MeasureDist@aux^0,w,c
  6142   00158C  0012               	return		;funcret
  6143   00158E                     __end_of_MeasureDist:
  6144                           	callstack 0
  6145                           
  6146 ;; *************** function i2___lwdiv *****************
  6147 ;; Defined at:
  6148 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwdiv.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  dividend        2    6[COMRAM] unsigned int 
  6151 ;;  divisor         2    8[COMRAM] unsigned int 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  quotient        2   10[COMRAM] unsigned int 
  6154 ;;  counter         1   12[COMRAM] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  2    6[COMRAM] unsigned int 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6164 ;;      Params:         4       0       0       0       0       0       0       0       0
  6165 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6167 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6168 ;;Total ram usage:        7 bytes
  6169 ;; Hardware stack levels used: 1
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_ISR
  6174 ;;		_MeasureDist
  6175 ;;		i2_printf
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text46
  6180   00163A                     __ptext46:
  6181                           	callstack 0
  6182   00163A                     i2___lwdiv:
  6183                           	callstack 21
  6184                           
  6185                           ;incstack = 0
  6186   00163A  0E00               	movlw	0
  6187   00163C  6E0C               	movwf	(i2___lwdiv@quotient+1)^0,c
  6188   00163E  0E00               	movlw	0
  6189   001640  6E0B               	movwf	i2___lwdiv@quotient^0,c
  6190   001642  5009               	movf	i2___lwdiv@divisor^0,w,c
  6191   001644  100A               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
  6192   001646  B4D8               	btfsc	status,2,c
  6193   001648  D01C               	goto	i2l971
  6194   00164A  0E01               	movlw	1
  6195   00164C  6E0D               	movwf	i2___lwdiv@counter^0,c
  6196   00164E  D004               	goto	i2l2435
  6197   001650                     i2l2433:
  6198   001650  90D8               	bcf	status,0,c
  6199   001652  3609               	rlcf	i2___lwdiv@divisor^0,f,c
  6200   001654  360A               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
  6201   001656  2A0D               	incf	i2___lwdiv@counter^0,f,c
  6202   001658                     i2l2435:
  6203   001658  AE0A               	btfss	(i2___lwdiv@divisor+1)^0,7,c
  6204   00165A  D7FA               	goto	i2l2433
  6205   00165C                     i2u152_40:
  6206   00165C  90D8               	bcf	status,0,c
  6207   00165E  360B               	rlcf	i2___lwdiv@quotient^0,f,c
  6208   001660  360C               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
  6209   001662  5009               	movf	i2___lwdiv@divisor^0,w,c
  6210   001664  5C07               	subwf	i2___lwdiv@dividend^0,w,c
  6211   001666  500A               	movf	(i2___lwdiv@divisor+1)^0,w,c
  6212   001668  5808               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
  6213   00166A  A0D8               	btfss	status,0,c
  6214   00166C  D005               	goto	i2l2445
  6215   00166E  5009               	movf	i2___lwdiv@divisor^0,w,c
  6216   001670  5E07               	subwf	i2___lwdiv@dividend^0,f,c
  6217   001672  500A               	movf	(i2___lwdiv@divisor+1)^0,w,c
  6218   001674  5A08               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
  6219   001676  800B               	bsf	i2___lwdiv@quotient^0,0,c
  6220   001678                     i2l2445:
  6221   001678  90D8               	bcf	status,0,c
  6222   00167A  320A               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
  6223   00167C  3209               	rrcf	i2___lwdiv@divisor^0,f,c
  6224   00167E  2E0D               	decfsz	i2___lwdiv@counter^0,f,c
  6225   001680  D7ED               	goto	i2u152_40
  6226   001682                     i2l971:
  6227   001682  C00B  F007         	movff	i2___lwdiv@quotient,?i2___lwdiv
  6228   001686  C00C  F008         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  6229   00168A  0012               	return		;funcret
  6230   00168C                     __end_ofi2___lwdiv:
  6231                           	callstack 0
  6232                           
  6233                           	psect	rparam
  6234   000000                     
  6235                           	psect	temp
  6236   000037                     btemp:
  6237                           	callstack 0
  6238   000037                     	ds	1
  6239   000000                     int$flags	set	btemp
  6240   000000                     wtemp8	set	btemp+1
  6241   000000                     ttemp5	set	btemp+1
  6242   000000                     ttemp6	set	btemp+4
  6243   000000                     ttemp7	set	btemp+8
  6244                           
  6245                           	psect	idloc
  6246                           
  6247                           ;Config register IDLOC0 @ 0x200000
  6248                           ;	unspecified, using default values
  6249   200000                     	org	2097152
  6250   200000  FF                 	db	255
  6251                           
  6252                           ;Config register IDLOC1 @ 0x200001
  6253                           ;	unspecified, using default values
  6254   200001                     	org	2097153
  6255   200001  FF                 	db	255
  6256                           
  6257                           ;Config register IDLOC2 @ 0x200002
  6258                           ;	unspecified, using default values
  6259   200002                     	org	2097154
  6260   200002  FF                 	db	255
  6261                           
  6262                           ;Config register IDLOC3 @ 0x200003
  6263                           ;	unspecified, using default values
  6264   200003                     	org	2097155
  6265   200003  FF                 	db	255
  6266                           
  6267                           ;Config register IDLOC4 @ 0x200004
  6268                           ;	unspecified, using default values
  6269   200004                     	org	2097156
  6270   200004  FF                 	db	255
  6271                           
  6272                           ;Config register IDLOC5 @ 0x200005
  6273                           ;	unspecified, using default values
  6274   200005                     	org	2097157
  6275   200005  FF                 	db	255
  6276                           
  6277                           ;Config register IDLOC6 @ 0x200006
  6278                           ;	unspecified, using default values
  6279   200006                     	org	2097158
  6280   200006  FF                 	db	255
  6281                           
  6282                           ;Config register IDLOC7 @ 0x200007
  6283                           ;	unspecified, using default values
  6284   200007                     	org	2097159
  6285   200007  FF                 	db	255
  6286                           
  6287                           	psect	config
  6288                           
  6289                           ;Config register CONFIG1L @ 0x300000
  6290                           ;	unspecified, using default values
  6291                           ;	PLL Prescaler Selection bits
  6292                           ;	PLLDIV = 0x0, unprogrammed default
  6293                           ;	System Clock Postscaler Selection bits
  6294                           ;	CPUDIV = 0x0, unprogrammed default
  6295                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6296                           ;	USBDIV = 0x0, unprogrammed default
  6297   300000                     	org	3145728
  6298   300000  00                 	db	0
  6299                           
  6300                           ;Config register CONFIG1H @ 0x300001
  6301                           ;	Oscillator Selection bits
  6302                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  6303                           ;	Fail-Safe Clock Monitor Enable bit
  6304                           ;	FCMEN = 0x0, unprogrammed default
  6305                           ;	Internal/External Oscillator Switchover bit
  6306                           ;	IESO = 0x0, unprogrammed default
  6307   300001                     	org	3145729
  6308   300001  09                 	db	9
  6309                           
  6310                           ;Config register CONFIG2L @ 0x300002
  6311                           ;	unspecified, using default values
  6312                           ;	Power-up Timer Enable bit
  6313                           ;	PWRT = 0x1, unprogrammed default
  6314                           ;	Brown-out Reset Enable bits
  6315                           ;	BOR = 0x3, unprogrammed default
  6316                           ;	Brown-out Reset Voltage bits
  6317                           ;	BORV = 0x3, unprogrammed default
  6318                           ;	USB Voltage Regulator Enable bit
  6319                           ;	VREGEN = 0x0, unprogrammed default
  6320   300002                     	org	3145730
  6321   300002  1F                 	db	31
  6322                           
  6323                           ;Config register CONFIG2H @ 0x300003
  6324                           ;	Watchdog Timer Enable bit
  6325                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6326                           ;	Watchdog Timer Postscale Select bits
  6327                           ;	WDTPS = 0xF, unprogrammed default
  6328   300003                     	org	3145731
  6329   300003  1E                 	db	30
  6330                           
  6331                           ; Padding undefined space
  6332   300004                     	org	3145732
  6333   300004  FF                 	db	255
  6334                           
  6335                           ;Config register CONFIG3H @ 0x300005
  6336                           ;	unspecified, using default values
  6337                           ;	CCP2 MUX bit
  6338                           ;	CCP2MX = 0x1, unprogrammed default
  6339                           ;	PORTB A/D Enable bit
  6340                           ;	PBADEN = 0x1, unprogrammed default
  6341                           ;	Low-Power Timer 1 Oscillator Enable bit
  6342                           ;	LPT1OSC = 0x0, unprogrammed default
  6343                           ;	MCLR Pin Enable bit
  6344                           ;	MCLRE = 0x1, unprogrammed default
  6345   300005                     	org	3145733
  6346   300005  83                 	db	131
  6347                           
  6348                           ;Config register CONFIG4L @ 0x300006
  6349                           ;	Stack Full/Underflow Reset Enable bit
  6350                           ;	STVREN = 0x1, unprogrammed default
  6351                           ;	Single-Supply ICSP Enable bit
  6352                           ;	LVP = OFF, Single-Supply ICSP disabled
  6353                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6354                           ;	ICPRT = 0x0, unprogrammed default
  6355                           ;	Extended Instruction Set Enable bit
  6356                           ;	XINST = 0x0, unprogrammed default
  6357                           ;	Background Debugger Enable bit
  6358                           ;	DEBUG = 0x1, unprogrammed default
  6359   300006                     	org	3145734
  6360   300006  81                 	db	129
  6361                           
  6362                           ; Padding undefined space
  6363   300007                     	org	3145735
  6364   300007  FF                 	db	255
  6365                           
  6366                           ;Config register CONFIG5L @ 0x300008
  6367                           ;	unspecified, using default values
  6368                           ;	Code Protection bit
  6369                           ;	CP0 = 0x1, unprogrammed default
  6370                           ;	Code Protection bit
  6371                           ;	CP1 = 0x1, unprogrammed default
  6372                           ;	Code Protection bit
  6373                           ;	CP2 = 0x1, unprogrammed default
  6374                           ;	Code Protection bit
  6375                           ;	CP3 = 0x1, unprogrammed default
  6376   300008                     	org	3145736
  6377   300008  0F                 	db	15
  6378                           
  6379                           ;Config register CONFIG5H @ 0x300009
  6380                           ;	unspecified, using default values
  6381                           ;	Boot Block Code Protection bit
  6382                           ;	CPB = 0x1, unprogrammed default
  6383                           ;	Data EEPROM Code Protection bit
  6384                           ;	CPD = 0x1, unprogrammed default
  6385   300009                     	org	3145737
  6386   300009  C0                 	db	192
  6387                           
  6388                           ;Config register CONFIG6L @ 0x30000A
  6389                           ;	unspecified, using default values
  6390                           ;	Write Protection bit
  6391                           ;	WRT0 = 0x1, unprogrammed default
  6392                           ;	Write Protection bit
  6393                           ;	WRT1 = 0x1, unprogrammed default
  6394                           ;	Write Protection bit
  6395                           ;	WRT2 = 0x1, unprogrammed default
  6396                           ;	Write Protection bit
  6397                           ;	WRT3 = 0x1, unprogrammed default
  6398   30000A                     	org	3145738
  6399   30000A  0F                 	db	15
  6400                           
  6401                           ;Config register CONFIG6H @ 0x30000B
  6402                           ;	unspecified, using default values
  6403                           ;	Configuration Register Write Protection bit
  6404                           ;	WRTC = 0x1, unprogrammed default
  6405                           ;	Boot Block Write Protection bit
  6406                           ;	WRTB = 0x1, unprogrammed default
  6407                           ;	Data EEPROM Write Protection bit
  6408                           ;	WRTD = 0x1, unprogrammed default
  6409   30000B                     	org	3145739
  6410   30000B  E0                 	db	224
  6411                           
  6412                           ;Config register CONFIG7L @ 0x30000C
  6413                           ;	unspecified, using default values
  6414                           ;	Table Read Protection bit
  6415                           ;	EBTR0 = 0x1, unprogrammed default
  6416                           ;	Table Read Protection bit
  6417                           ;	EBTR1 = 0x1, unprogrammed default
  6418                           ;	Table Read Protection bit
  6419                           ;	EBTR2 = 0x1, unprogrammed default
  6420                           ;	Table Read Protection bit
  6421                           ;	EBTR3 = 0x1, unprogrammed default
  6422   30000C                     	org	3145740
  6423   30000C  0F                 	db	15
  6424                           
  6425                           ;Config register CONFIG7H @ 0x30000D
  6426                           ;	unspecified, using default values
  6427                           ;	Boot Block Table Read Protection bit
  6428                           ;	EBTRB = 0x1, unprogrammed default
  6429   30000D                     	org	3145741
  6430   30000D  40                 	db	64
  6431                           tosu	equ	0xFFF
  6432                           tosh	equ	0xFFE
  6433                           tosl	equ	0xFFD
  6434                           stkptr	equ	0xFFC
  6435                           pclatu	equ	0xFFB
  6436                           pclath	equ	0xFFA
  6437                           pcl	equ	0xFF9
  6438                           tblptru	equ	0xFF8
  6439                           tblptrh	equ	0xFF7
  6440                           tblptrl	equ	0xFF6
  6441                           tablat	equ	0xFF5
  6442                           prodh	equ	0xFF4
  6443                           prodl	equ	0xFF3
  6444                           indf0	equ	0xFEF
  6445                           postinc0	equ	0xFEE
  6446                           postdec0	equ	0xFED
  6447                           preinc0	equ	0xFEC
  6448                           plusw0	equ	0xFEB
  6449                           fsr0h	equ	0xFEA
  6450                           fsr0l	equ	0xFE9
  6451                           wreg	equ	0xFE8
  6452                           indf1	equ	0xFE7
  6453                           postinc1	equ	0xFE6
  6454                           postdec1	equ	0xFE5
  6455                           preinc1	equ	0xFE4
  6456                           plusw1	equ	0xFE3
  6457                           fsr1h	equ	0xFE2
  6458                           fsr1l	equ	0xFE1
  6459                           bsr	equ	0xFE0
  6460                           indf2	equ	0xFDF
  6461                           postinc2	equ	0xFDE
  6462                           postdec2	equ	0xFDD
  6463                           preinc2	equ	0xFDC
  6464                           plusw2	equ	0xFDB
  6465                           fsr2h	equ	0xFDA
  6466                           fsr2l	equ	0xFD9
  6467                           status	equ	0xFD8

Data Sizes:
    Strings     178
    Constant    10
    Data        25
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      54
    BANK0           160     33      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    createCharacter@pChar	PTR unsigned char  size(1) Largest target is 8
		 -> pChar1(BANK0[8]), pChar2(BANK0[8]), pChar3(BANK0[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> ?_printf(BANK0[2]), STR_12(CODE[10]), STR_13(CODE[8]), STR_14(CODE[10]), 
		 -> STR_15(CODE[8]), STR_18(CODE[7]), valor(COMRAM[1]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[7]), STR_10(CODE[17]), STR_11(CODE[13]), STR_16(CODE[17]), 
		 -> STR_17(CODE[17]), STR_2(CODE[3]), STR_3(CODE[15]), STR_4(CODE[17]), 
		 -> STR_5(CODE[17]), STR_6(CODE[16]), STR_7(CODE[17]), STR_8(CODE[17]), 
		 -> STR_9(CODE[17]), 

    printInfo@string	PTR unsigned char  size(1) Largest target is 10
		 -> STR_12(CODE[10]), STR_13(CODE[8]), STR_14(CODE[10]), STR_15(CODE[8]), 

    printMessage@string	PTR unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[17]), STR_11(CODE[13]), STR_16(CODE[17]), STR_17(CODE[17]), 
		 -> STR_3(CODE[15]), STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_transmision
    i2_secondLineC->i2_writeInstruction
    i2_printNumber->i2_printf
    i2_printMessage->i2_printf
    i2_deleteChar->i2_writeData
    i2_shiftCLeft->i2_writeInstruction
    i2_clearDisplay->i2_writeInstruction
    i2_assignRGB->i2___lbmod
    _transmision->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_writeData
    i2___lwmod->i2___lwdiv
    _MeasureDist->i2___lwdiv
    i2___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_state_2
    _state_3->_printMessage
    _state_2->_printInfo
    _printInfo->_printf
    _assignRGB->___lbmod
    _state_1->_printNumber
    _secondLineC->_writeInstruction
    _printNumber->_printf
    _deleteChar->_writeData
    _initMessage->_printMessage
    _shiftDRight->_writeInstruction
    _shiftDLeft->_writeInstruction
    _shiftCLeft->_writeInstruction
    _printMessage->_printf
    _printf->___lwmod
    _putch->_writeData
    ___lwmod->___lwdiv
    _createCharacter->_clearDisplay
    _initLCD->_clearDisplay
    _clearDisplay->_writeInstruction

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23636
                                             31 BANK0      2     2      0
                            _initLCD
                        _initMessage
                            _state_1
                            _state_2
                            _state_3
 ---------------------------------------------------------------------------------
 (1) _state_3                                              0     0      0    3179
                       _clearDisplay
                       _printMessage
                        _secondLineC
 ---------------------------------------------------------------------------------
 (1) _state_2                                              2     2      0    8380
                                             29 BANK0      2     2      0
                            ___lbmod
                          _assignRGB
                       _clearDisplay
                          _printInfo
                        _printNumber
                        _secondLineC
 ---------------------------------------------------------------------------------
 (2) _printInfo                                            3     0      3    3195
                                             26 BANK0      3     0      3
                             _printf
 ---------------------------------------------------------------------------------
 (2) _assignRGB                                            4     4      0     799
                                              4 BANK0      4     4      0
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _state_1                                              1     1      0    7534
                                             28 BANK0      1     1      0
                            ___lbmod
                       _clearDisplay
                         _deleteChar
                       _printMessage
                        _printNumber
                        _secondLineC
 ---------------------------------------------------------------------------------
 (2) _secondLineC                                          1     1      0      93
                                              2 BANK0      1     1      0
                   _writeInstruction
 ---------------------------------------------------------------------------------
 (2) _printNumber                                          2     0      2    3494
                                             26 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _deleteChar                                           0     0      0     124
                         _shiftCLeft
                          _writeData
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     737
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMessage                                          3     3      0    4419
                                             27 BANK0      3     3      0
                       _clearDisplay
                    _createCharacter
                       _printMessage
                         _shiftCLeft
                         _shiftDLeft
                        _shiftDRight
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _shiftDRight                                          0     0      0      62
                   _writeInstruction
 ---------------------------------------------------------------------------------
 (2) _shiftDLeft                                           0     0      0      62
                   _writeInstruction
 ---------------------------------------------------------------------------------
 (3) _shiftCLeft                                           0     0      0      62
                   _writeInstruction
 ---------------------------------------------------------------------------------
 (2) _printMessage                                         1     0      1    3024
                                             26 BANK0      1     0      1
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              20    15      5    2413
                                             12 BANK0     14     9      5
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     124
                                              2 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     641
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _createCharacter                                      3     1      2     887
                                              3 BANK0      3     1      2
                       _clearDisplay
                          _writeData
                   _writeInstruction
 ---------------------------------------------------------------------------------
 (5) _writeData                                            2     2      0      62
                                              0 BANK0      2     2      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     124
                                              3 BANK0      1     1      0
                       _clearDisplay
                   _writeInstruction
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         1     1      0      62
                                              2 BANK0      1     1      0
                   _writeInstruction
 ---------------------------------------------------------------------------------
 (3) _writeInstruction                                     2     2      0      62
                                              0 BANK0      2     2      0
                             _enable
 ---------------------------------------------------------------------------------
 (4) _enable                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 11    11      0    6566
                                             34 COMRAM    11    11      0
                        _MeasureDist
                            ___awdiv
                             ___wmul
                         _antirebote
                         _conversion
                        _transmision
                          i2___lbmod
                          i2___lwdiv
                        i2_assignRGB
                     i2_clearDisplay
                       i2_deleteChar
                     i2_printMessage
                      i2_printNumber
                      i2_secondLineC
 ---------------------------------------------------------------------------------
 (8) i2_secondLineC                                        1     1      0      66
                                              2 COMRAM     1     1      0
                 i2_writeInstruction
 ---------------------------------------------------------------------------------
 (8) i2_printNumber                                        2     0      2    1472
                                             30 COMRAM     2     0      2
                           i2_printf
 ---------------------------------------------------------------------------------
 (8) i2_printMessage                                       1     0      1    1420
                                             30 COMRAM     1     0      1
                           i2_printf
 ---------------------------------------------------------------------------------
 (8) i2_deleteChar                                         0     0      0      88
                       i2_shiftCLeft
                        i2_writeData
 ---------------------------------------------------------------------------------
 (9) i2_shiftCLeft                                         0     0      0      44
                 i2_writeInstruction
 ---------------------------------------------------------------------------------
 (8) i2_clearDisplay                                       1     1      0      44
                                              2 COMRAM     1     1      0
                 i2_writeInstruction
 ---------------------------------------------------------------------------------
 (9) i2_writeInstruction                                   2     2      0      44
                                              0 COMRAM     2     2      0
                           i2_enable
 ---------------------------------------------------------------------------------
 (8) i2_assignRGB                                          4     4      0     281
                                              4 COMRAM     4     4      0
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (9) i2___lbmod                                            4     3      1     237
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) _transmision                                          4     0      4    1512
                                             30 COMRAM     4     0      4
                           i2_printf
 ---------------------------------------------------------------------------------
 (9) i2_printf                                            18    15      3    1294
                                             18 COMRAM    12     9      3
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      88
                                              2 COMRAM     1     1      0
                        i2_writeData
 ---------------------------------------------------------------------------------
 (11) i2_writeData                                         2     2      0      44
                                              0 COMRAM     2     2      0
                           i2_enable
 ---------------------------------------------------------------------------------
 (10) i2_enable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i2___lwmod                                           5     1      4     211
                                             13 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) _conversion                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _antirebote                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _MeasureDist                                          1     1      0     343
                                             13 COMRAM     1     1      0
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (10) i2___lwdiv                                           7     3      4     318
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _clearDisplay
       _writeInstruction
         _enable
     _writeInstruction
   _initMessage
     _clearDisplay
     _createCharacter
       _clearDisplay
       _writeData
         _enable
       _writeInstruction
     _printMessage
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
           _writeData
     _shiftCLeft
       _writeInstruction
     _shiftDLeft
       _writeInstruction
     _shiftDRight
       _writeInstruction
     _writeData
   _state_1
     ___lbmod
     _clearDisplay
     _deleteChar
       _shiftCLeft
       _writeData
     _printMessage
     _printNumber
       _printf
     _secondLineC
       _writeInstruction
   _state_2
     ___lbmod
     _assignRGB
       ___lbmod
     _clearDisplay
     _printInfo
       _printf
     _printNumber
     _secondLineC
   _state_3
     _clearDisplay
     _printMessage
     _secondLineC

 _ISR (ROOT)
   _MeasureDist
     i2___lwdiv
       ___wmul (ARG)
   ___awdiv
   ___wmul
   _antirebote
   _conversion
   _transmision
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2_putch
         i2_writeData
           i2_enable
   i2___lbmod
   i2___lwdiv
   i2_assignRGB
     i2___lbmod
   i2_clearDisplay
     i2_writeInstruction
       i2_enable
   i2_deleteChar
     i2_shiftCLeft
       i2_writeInstruction
     i2_writeData
   i2_printMessage
     i2_printf
   i2_printNumber
     i2_printf
   i2_secondLineC
     i2_writeInstruction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      3C       5       37.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      36       1       57.4%
BITBIGSFRll         21      0       0      34        0.0%
BITBIGSFRhhhhlh     19      0       0      21        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhlhhh      9      0       0      29        0.0%
BITBIGSFRhhhlll      8      0       0      28        0.0%
BITBIGSFRlh          6      0       0      33        0.0%
BITBIGSFRhhlhl       6      0       0      31        0.0%
BITBIGSFRhhhlhl      5      0       0      24        0.0%
BITBIGSFRhhll        4      0       0      32        0.0%
BITBIGSFRhhhlhh      3      0       0      23        0.0%
BITBIGSFRhhlhhl      2      0       0      30        0.0%
BITBIGSFRhhhllh      1      0       0      26        0.0%
BITBIGSFRhhhllh      1      0       0      27        0.0%
BITBIGSFRhhhlhl      1      0       0      25        0.0%
BITBIGSFRhhhhll      1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      35        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 26 00:54:39 2024

                        l92 1256                          _GO 7E11                ___awdiv@sign 0006  
       ___wmul@multiplicand 0003          i2___lwdiv@dividend 0007        __end_ofi2_shiftCLeft 1AB4  
                       l364 13AA                         l470 0D1E       __end_ofi2_secondLineC 1A80  
                       l971 1630                         l981 16C4                         _GIE 7F97  
                       _RC0 7C10                         _RC1 7C11                         _RB4 7C0C  
                       _RB5 7C0D                         _RB6 7C0E                         _RB7 7C0F  
                       _PR2 0FCB                         _ISR 0008                 _transmision 1750  
       i2printNumber@number 001F                         _pot 0030                         wreg 0FE8  
                      ?_ISR 0001             assignRGB@number 0067                        l3311 1966  
                      l3321 1606                        l3331 1626                        l3341 16A2  
                      l3405 0D5C                        l3319 15FE                        l3423 0DEA  
                      l3431 18C4                        l3417 0D9A                        l3361 0C5C  
                      l3601 136C                        l3347 16BA                        l3339 169A  
                      l3419 0DA0                        l3371 0C8A                        l3363 0C62  
                      l3453 183A                        l3357 0C4C                        l3375 0CB4  
                      l3383 0CE8                        l3551 12CC                        l3439 18DC  
                      l3615 13AE                        l3631 102E                        l3377 0CDC  
                      l3561 12F0                        l3537 12A0                        l3529 1274  
                      l3609 1398                        l3481 144C                        l3395 0D46  
                      l3379 0CE4                        l3555 12D6                        l3483 1452  
                      l3557 12EA                        l3485 1458                        l3477 1440  
                      l3653 10A4                        l3637 1056                        l3399 0D58  
                      l3487 145E                        l3479 1446                        l3585 1340  
                      l3577 1328                        l3489 1464                        l3665 10FC  
                      l3657 10AC                        l3587 134A                        l3667 110C  
                      l3771 11FC                        l3589 134E                        l3685 181A  
                      l3775 120A                        l3779 1218                        STR_1 08B6  
                      STR_2 08BA                        STR_3 0881                        STR_4 0860  
                      STR_5 084F                        STR_6 0871                        STR_7 083E  
                      STR_8 080B                        STR_9 083E                        _CREN 7D5C  
                      _LATA 0F89                        _LATB 0F8A                        _LATD 0F8C  
                      _LATE 0F8D                        u3107 12BC                        u3117 12DE  
                      u3127 1596                        u3047 1140                        u3137 15AE  
                      u3057 119A                        u2610 16A6                        u3147 15C0  
                      u3067 11EE                        u3157 197E                        u3077 107E  
                      u2550 195C                        u2710 0D88                        u3167 1A5C  
                      u3087 1268                        u3097 128C                        u2730 0DF4  
                      u2650 0CAA                        u2580 160A                        u2660 0CD4  
                      u2657 0CA0                        u2667 0CCA                        _PEIE 7F96  
                      u2940 106A                        _RBIE 7F93                        _RBIF 7F90  
                      u2970 10DE                        _RCIE 7CED                        u2980 1128  
                      _RCIF 7CF5                        _RBPU 7F8F                        _TMR0 0FD6  
                      _TMR1 0FCE                        _TMR2 0FCC                        _TRMT 7D61  
                      _nDig 0032                        _dist 0033                        _main 1134  
       __end_ofi2_writeData 18B8                        _rx_e 0034                        fsr0h 0FEA  
        i2___lwdiv@quotient 000B                        indf0 0FEF                        fsr2h 0FDA  
                      fsr0l 0FE9                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        btemp 0037                        prodh 0FF4  
                      prodl 0FF3                        start 000E               ??_MeasureDist 000E  
           __end_ofi2_putch 19A4                ___param_bank 0000        __end_of_clearDisplay 198A  
                     ??_ISR 0023                ?_initMessage 0001                       ?_main 0001  
           __end_of___awdiv 143C                       STR_10 080B                       _CCPR2 0FBB  
                     STR_11 0890                       STR_12 089D                       STR_13 08A7  
                     STR_14 089D                       STR_15 08A7                       STR_16 082D  
                     STR_17 081C                       STR_18 08AF             __end_of___lbmod 18E4  
               i2_assignRGB 14B2                       _T0CON 0FD5             ___awdiv@divisor 0003  
                     _T1CON 0FCD                       _T2CON 0FCA                       _LATA1 7C49  
                     _LATA2 7C4A                       _LATA3 7C4B                       _LATA4 7C4C  
                     _LATC2 7C5A             __end_of___lwdiv 163A             __end_of___lwmod 16CE  
                     i2l303 0A46                       i2l320 0AD8                       i2l331 0B2C  
                     i2l323 0B02                       i2l340 0B7E                       i2l316 0AC0  
                     i2l414 19FE                       i2l350 0C14                       i2l318 0ACC  
                     i2l351 0BF8                       i2l327 0B14                       i2l271 0978  
                     i2l440 1544                       i2l336 0B66                       i2l329 0B20  
                     i2l338 0B72                       i2l443 154A                       i2l347 0BDC  
                     i2l275 0A9E                       i2l355 0C1A                       i2l349 0BE8  
                     i2l470 0EE8                       i2l971 1682             ___awdiv@counter 0005  
                     i2l981 1706                       _RCREG 0FAE                       _RCSTA 0FAB  
                     _SPBRG 0FAF                       _PORTB 0F81                       _TRISA 0F92  
                     _TRISB 0F93                       _TRISD 0F95                       _TRISE 0F96  
                     _TXREG 0FAD                       _TXSTA 0FAC             __end_of_initLCD 15E8  
           __end_of_dpowers 080B                       _tecla 009A                       _valor 0036  
                     _putch 1952       __end_ofi2_printNumber 1A2A                       tablat 0FF5  
           __end_of_state_1 13B8             __end_of_state_2 1134             __end_of_state_3 1828  
                     ttemp5 0038                       ttemp6 003B                       ttemp7 003F  
                     status 0FD8            __end_ofi2_enable 1A74    __end_of_writeInstruction 17F8  
                     wtemp8 0038               i2___lbmod@rem 0004           ??_createCharacter 0065  
          __end_ofi2_printf 0FD8                i2_deleteChar 1A3A             __initialization 1710  
              __end_of_main 1226                  i2printf@ap 001B                  i2printf@cp 0019  
       __end_of_MeasureDist 158E                      ??_main 007F                ?_secondLineC 0001  
             __activetblptr 0002              i2_printMessage 1A8A             printInfo@number 007B  
           printInfo@string 007A                 i2_writeData 1888                      _ADCON0 0FC2  
                    _ADCON1 0FC1                      _ADCON2 0FC0                      _CCP2IF 7D08  
                    _ADRESH 0FC4                      _CCPR1L 0FBE            ___awdiv@dividend 0001  
                    ?_putch 0001                ?_shiftDRight 0001                      i2l3101 0A48  
                    i2l3041 0958                      i2l3203 0BC0                      i2l3115 0A92  
                    i2l3051 0996                      i2l3205 0BCC                      i2l3063 09C6  
                    i2l2433 1650                      i2l2425 199C                      i2l2521 0E18  
                    i2l2601 1906                      i2l3057 09AE                      i2l2435 1658  
                    i2l3083 0A10                      i2l3075 09F8                      i2l2445 1678  
                    i2l2461 16FC                      i2l2453 16DC                      i2l2541 0EA6  
                    i2l2525 0E28                      i2l3149 0B04                      i2l3069 09DE  
                    i2l2455 16E4                      i2l2543 0EAE                      i2l2535 0E56  
                    i2l2527 0E2E                      i2l3175 0B56                      i2l2563 0F22  
                    i2l2539 0E7E                      i2l2547 0EB2                      i2l2581 0F64  
                    i2l2583 0F6A                      i2l2559 0F10                      i2l2911 14BC  
                    i2l2833 155E                      i2l2569 0F26                      i2l2593 18EE  
                    i2l2913 14C2                      i2l2921 14DA                      i2l2587 0FB4  
                    i2l2915 14C8                      i2l2837 1572                      i2l2917 14CE  
                    i2l2909 14B6                      i2l2839 158A                      i2l2871 13F2  
                    i2l2687 1776                      i2l2919 14D4                      i2l2873 13FA  
                    i2l2865 13DC                      i2l2689 1786                      i2l2891 1432  
                    i2l2883 141A                      i2l2859 13CC                      i2l2887 1424  
                    _OSCCON 0FD3                      _TMR0IE 7F95                      _TMR0IF 7F92  
                 ??i2_putch 0003                      _TMR1IF 7CF0                      _TMR0ON 7EAF  
                    _TMR1ON 7E68                      _TMR2ON 7E52                      _TRISC0 7CA0  
                    _TRISC2 7CA2                      _pChar1 0092                      _pChar2 008A  
                    _pChar3 0082                      ___wmul 190E                   ??___awdiv 0005  
                 ??___lbmod 0061                      _enable 1A58                   ??___lwdiv 0064  
                 ??___lwmod 006B                      _estado 0081                      _eusart 0035  
                    clear_0 173C      __end_ofi2_printMessage 1A94            ___awdiv@quotient 0007  
                    isa$std 0001                      _printf 0C46                   ??_initLCD 0063  
         __end_ofi2___lbmod 190E           __end_ofi2___lwdiv 168C                __mediumconst 0000  
         __end_ofi2___lwmod 1710                transmision@d 001F                transmision@e 0021  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
        i2_writeInstruction 1858                      putch@d 0062                   ??_state_1 007C  
                 ??_state_2 007D                   ??_state_3 007B                ?_printNumber 007A  
           ___lbmod@divisor 0060                  __accesstop 0060     __end_of__initialization 1742  
       ?i2_writeInstruction 0001             ___lbmod@counter 0062                i2_shiftCLeft 1AAC  
             ___rparam_used 0001                 _MeasureDist 1526          i2___lwmod@dividend 000E  
            __pcstackCOMRAM 0001                __pidataBANK0 19BE        i2printMessage@string 001F  
             __end_of_putch 1970                 i2printf@val 001C             ?i2_printMessage 001F  
      ??i2_writeInstruction 0001                ?_transmision 001F                   ?i2_enable 0001  
                 ?i2_printf 0013                _clearDisplay 1970                     ??_putch 0062  
                __pbssBANK0 009A           printNumber@number 007A                  _deleteChar 1A2A  
                   ?___wmul 0001                     ?_enable 0001                     _CCP1CON 0FBD  
                   _CCP2CON 0FBA                     _BAUDCON 0FB8                     ?_printf 006C  
              ?i2_assignRGB 0001                  ??i2_enable 0001        createCharacter@pChar 0063  
                _antirebote 19A4                initMessage@i 007C                  ??i2_printf 0016  
           _createCharacter 1828                     i2_putch 198A                  _conversion 19F0  
         ?_writeInstruction 0001                     __Hparam 0000          ??_writeInstruction 0060  
                   __Lparam 0000                     ___awdiv 13B8                     ___lbmod 18B8  
         __end_of_assignRGB 14B2                     ___lwdiv 15E8                     ___lwmod 168C  
              __psmallconst 0800                     __pcinit 1710                     __ramtop 0800  
                   __ptext0 1134                     __ptext1 17F8                     __ptext2 0FD8  
                   __ptext3 1934                     __ptext4 143C                     __ptext5 130A  
                   __ptext6 1A4A                     __ptext7 1A06                     __ptext8 1A2A  
                   __ptext9 18B8                     _initLCD 158E                     _dpowers 0801  
                   _state_1 130A                     _state_2 0FD8                     _state_3 17F8  
              ?i2_writeData 0001              __pintcode_body 08BE        end_of_initialization 1742  
             __Lmediumconst 0000                     int_func 08BE                  _shiftCLeft 1AA4  
                _shiftDLeft 1A9C                 ?_deleteChar 0001           __end_of_printInfo 1952  
                   printf@c 0079                     printf@f 006C                     postdec1 0FE5  
                   postdec2 0FDD                     postinc0 0FEE                     postinc2 0FDE  
             ?_printMessage 007A     __end_of_createCharacter 1858           __end_of_writeData 17C2  
             i2_secondLineC 1A74            ___lbmod@dividend 0061                 ?_antirebote 0001  
                 i2___lbmod 18E4           i2___lwdiv@divisor 0009                   i2___lwdiv 163A  
                 i2___lwmod 16CE           i2___lwdiv@counter 000D              i2_clearDisplay 19D8  
               ___lbmod@rem 0063                 ?_conversion 0001                ?_MeasureDist 0001  
          ??i2_printMessage 0020              ??_printMessage 007B              __end_of___wmul 1934  
            __end_of_enable 1A66              ?i2_secondLineC 0001              __end_of_printf 0E12  
              i2printf@flag 0018         i2writeInstruction@d 0002                i2printf@prec 0017  
       start_initialization 1710                 __end_of_ISR 0C46                   i2printf@c 001E  
                 i2printf@f 0013      __end_ofi2_clearDisplay 19F0                  ?i2___lbmod 0001  
                ?i2___lwdiv 0007                  ?i2___lwmod 000E               i2_printNumber 1A18  
          i2secondLineC@pos 0003                 ?_shiftCLeft 0001                 ?_shiftDLeft 0001  
             ??_initMessage 007B                    ??___wmul 0005                    ??_enable 0060  
               __pdataBANK0 0081                    ??_printf 0071            ?_createCharacter 0063  
               __pbssCOMRAM 002E               __pcstackBANK0 0060           i2___lwmod@divisor 0010  
         i2___lwmod@counter 0012             ?i2_clearDisplay 0001              ?i2_printNumber 001F  
          createCharacter@i 0065                    ?i2_putch 0001               ?i2_deleteChar 0001  
          ___lwdiv@dividend 0060                i2writeData@d 0002                   __pintcode 0008  
                  ?___awdiv 0001                    ?___lbmod 0060                    ?___lwdiv 0060  
                  ?___lwmod 0067             ??i2_secondLineC 0003               ??_secondLineC 0062  
                 _assignRGB 143C                    ?_initLCD 0001         __end_of_initMessage 130A  
               __smallconst 0800                    ?_state_1 0001                    ?_state_2 0001  
                  ?_state_3 0001            ___lwdiv@quotient 0065                 ??i2___lbmod 0002  
             ??_shiftDRight 0062                 ??i2___lwdiv 000B                 ??i2___lwmod 0012  
      __end_of_printMessage 1A8A           i2assignRGB@number 0008              ___wmul@product 0005  
            ??i2_deleteChar 0003                ??_deleteChar 0062                    i2u205_40 13FE  
                  i2u221_40 09D6                    i2u223_40 09EE                    i2u215_40 098E  
                  i2u152_40 165C                    i2u160_40 0E76                    i2u320_47 153C  
                  i2u160_47 0E6C                    i2u161_40 0E9E                    i2u225_40 0A08  
                  i2u217_40 09A6                    i2u161_47 0E94                    i2u155_40 16E8  
                  i2u227_40 0A20                    i2u219_40 09BE                    i2u149_40 1992  
                  i2u229_40 0A58                    i2u317_47 19E4                    i2u166_40 0F52  
                  i2u318_47 1A6A                    i2u319_47 19AE                    i2u168_40 0FBC  
                  i2u199_40 1552              MeasureDist@aux 000E                   _printInfo 1934  
            secondLineC@pos 0062                   _pwm_value 002E                  ?_assignRGB 0001  
         ___wmul@multiplier 0001                  printf@flag 0073                    i2_enable 1A66  
                printf@prec 0072                ??_antirebote 0001                    i2_printf 0E12  
        __end_of_deleteChar 1A3A             ??i2_printNumber 0021         __end_of_secondLineC 1A58  
                 _writeData 178C               ??_printNumber 007C                   copy_data0 1724  
           conversion@canal 0001                ??_conversion 0001                    i2putch@d 0003  
             ?i2_shiftCLeft 0001         __end_of_shiftDRight 1A9C                    __Hrparam 0000  
                  __Lrparam 0000          __end_of_antirebote 19BE                 _initMessage 1226  
                ?_printInfo 007A               ??_transmision 0023          __end_of_conversion 1A06  
           ___lwdiv@divisor 0062             ___lwdiv@counter 0064                  ?_writeData 0001  
             ?_clearDisplay 0001                    __ptext10 1226                    __ptext11 1A94  
                  __ptext20 178C                    __ptext12 1A9C                    __ptext21 158E  
                  __ptext13 1AA4                    __ptext30 1AAC                    __ptext22 1970  
                  __ptext14 1A80                    __ptext31 19D8                    __ptext23 17C2  
                  __ptext15 0C46                    __ptext40 16CE                    __ptext32 1858  
                  __ptext24 1A58                    __ptext16 1952                    __ptext41 19F0  
                  __ptext33 14B2                    __ptext17 168C                    __ptext42 19A4  
                  __ptext34 18E4                    __ptext26 1A74                    __ptext18 15E8  
                  __ptext43 190E                    __ptext35 1750                    __ptext27 1A18  
                  __ptext19 1828                    __ptext44 13B8                    __ptext36 0E12  
                  __ptext28 1A8A                    __ptext45 1526                    __ptext37 198A  
                  __ptext29 1A3A                    __ptext46 163A                    __ptext38 1888  
                  __ptext39 1A66                    _contador 009B          i2___lbmod@dividend 0002  
            ??i2_shiftCLeft 0003                ??_shiftCLeft 0062                ??_shiftDLeft 0062  
       __end_of_printNumber 1A18           writeInstruction@d 0061                  writeData@d 0061  
                  isa$xinst 0000                    int$flags 0037          printMessage@string 007A  
                 printf@val 0077            _writeInstruction 17C2               ??i2_assignRGB 0005  
               ??_assignRGB 0064                 _secondLineC 1A4A            ??i2_clearDisplay 0003  
      __end_ofi2_deleteChar 1A4A          __end_of_shiftCLeft 1AAC          __end_of_shiftDLeft 1AA4  
            ??_clearDisplay 0062         __end_of_transmision 178C                 _shiftDRight 1A94  
                  intlevel2 0000     createCharacter@location 0064            ___lwmod@dividend 0067  
         i2___lbmod@divisor 0001           i2___lbmod@counter 0003             initMessage@i_86 007D  
                  printf@ap 0076                    printf@cp 0074                 ??_printInfo 007D  
__end_ofi2_writeInstruction 1888                _printMessage 1A80             ___lwmod@divisor 0069  
           ___lwmod@counter 006B               ??i2_writeData 0001                 ??_writeData 0060  
       __end_ofi2_assignRGB 1526                 _printNumber 1A06  
